<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
-->
<!--+
    | Find usage details at http://maven.apache.org/plugins/maven-changes-plugin/usage.html
    |
    | @version $Id$
    +-->
<document>
  <body>
    <release version="1.0.0" date="TBA" description="released">
    </release>

    <release version="1.0.0-RC2" date="2007-10-29" description="released">
    </release>

    <release version="1.0.0-RC1" date="2007-07-02" description="released">
      <action dev="rgoers" type="add">
        Add cache for XPathXMLFileModule.
      </action>
      <action dev="reinhard" type="fix">
        Move all Spring configuration files into the "cocoon-store-impl" namespace.
      </action>
      <action dev="reinhard" type="fix">
        MRUMemoryStore registers at StoreJanitor only in that case, if StoreJanitor
        is set as dependency. By default it is set.
      </action>
      <action dev="reinhard" type="fix">
        The usage of  StoreJanitor to remove elements from EHDefaultStore was contra-productive,
        because EHCache provides its own invalidation mechanisms which are more
        sophisticated than the removal of random items. Find more information
        at http://marc.info/?t=117563247800004&amp;r=1&amp;w=2. In order to use EHDefaultStore
        again, we would need access to EHCache internals so that we don't remove the
        wrong items.
      </action>
      <action dev="reinhard" type="add">
        Expose all configuration properties that EHCache provides via setter methods.
        Using them, EHDefaultStore can be completly configured in the Spring bean
        definition. This allows setting maxElementsInMemory, memoryStoreEvictionPolicy,
        overflowToDisk, diskStorePath, eternal, timeToLiveSeconds, timeToIdleSeconds,
        diskPersistent, diskExpiryThreadIntervalSeconds, registeredEventListeners,
        bootstrapCacheLoader, maxElementsOnDisk. See the 1.2.4 constructor at
        http://ehcache.sourceforge.net/javadoc/net/sf/ehcache/Cache.html for
        details.
      </action>
      <action dev="reinhard" type="update">
        Make the maximum number of disk objects configureable. The default value
        is 50000.
      </action>
    </release>
    <release version="1.0.0-M1" date="2007-03-02" description="released">
      <action dev="reinhard" type="add">
        Initial creation.
      </action>
    </release>
  </body>
</document>
