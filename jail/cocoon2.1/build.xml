<?xml version="1.0"?>
<!-- 
  File automatically generated by ant script for cocoon-2.1-samples.
  Manually extend it to your own needs.
  -->
<project name="cocoon-2.1-samples" default="init">
  <property file="user.properties" />

  <property name="src"              value="src" />
  <property name="src.java"         value="./src/java" />
  <property name="src.cocoon"       value="./src/cocoon" />
  <property name="src.webapp"       value="./src/cocoon/webapp" />
  
  <property name="build"            value="build" />
  <property name="build.classes"    value="${build}/classes" />
  <property name="zipfile"          value="${build}/${ant.project.name}.zip" />
  <property name="warfile"          value="${build}/${ant.project.name}.war" />

  <property name="lib"            value="lib" />

  <property name="cocoon-build.properties" value="./src/cocoon/local.build.properties" />
  <property name="cocoon-xconf.dir" value="./src/cocoon/xconf" />
  <property name="cocoon-tool.dir"  value="tools/cocoon" />
  <property name="cocoon.webapp"    value="${cocoon-tool.dir}/webapp" />
  <property name="cocoon.lib"       value="${cocoon.webapp}/WEB-INF/lib" />
  <property name="cocoon.classes"   value="${cocoon.webapp}/WEB-INF/classes" />

  <property name="cocoon-targets" value="./build-cocoon-targets.xml" />
  <!-- insert properties here to override defaults in the import cocoon-targets script -->
  <import file="${cocoon-targets}" />

  <path id="all.cp">
    <pathelement location="${build.classes}" />
    <fileset dir="${cocoon.lib}">
      <include name="*.jar"/>
    </fileset>
    <fileset dir="${lib}">
      <include name="*.jar"/>
    </fileset>
  </path>
  
  <target name="init">
    <mkdir dir="${build.classes}" />
  </target>
  
  <target name="compile" depends="init,-cocoon:check" >
    <javac srcdir="${src.java}" destdir="${build.classes}" debug="true" >
      <classpath refid="all.cp"/>
      <include name="**/*.java"/>
    </javac>
  </target>

  <target name="webapp" depends="compile, cocoon:xconf"
          description="configure the webapp">
    <copy todir="${cocoon.lib}">
      <fileset dir="${lib}">
        <include name="*.jar"/>
      </fileset>
    </copy>
    <copy todir="${cocoon.classes}">
      <fileset dir="${build.classes}" />
    </copy>
    <copy todir="${cocoon.webapp}">
      <fileset dir="${src.webapp}" />
    </copy>          
  </target>  

  <target name="zip" depends="init">
    <zip zipfile="${zipfile}" basedir="." excludes="**/build/**, tools/**" />
  </target>

  <target name="war" depends="webapp" >
    <jar destfile="${warfile}" basedir="${cocoon.webapp}" />
  </target>
  
  <target name="clean" description="Delete old build and dist directories">
    <delete dir="${build}"/>
    <delete dir="tools"/>
    <delete dir="${dist}"/>
  </target>
</project>
    
