<?xml version="1.0"?>
<cocoon version="2.0">

<!-- ===================== General Components =========================== -->

  <store class="org.apache.cocoon.components.store.MRUMemoryStore">
     <parameter name="freememory" value="1000000"/>
     <parameter name="heapsize" value="60000000"/>
     <parameter name="objectlifetime" value="300"/>
     <parameter name="interval" value="10"/>
     <parameter name="maxobjects" value="100"/>
     <parameter name="usethread" value="false"/>
     <parameter name="threadpriority" value="5"/>
  </store>

  <url-factory>
    <protocol name="resource" class="org.apache.cocoon.components.url.ResourceURLFactory"/>
    <protocol name="context"  class="org.apache.cocoon.components.url.ContextURLFactory"/>
  </url-factory>

  <program-generator>
    <parameter name="auto-reload" value="true"/>
    <parameter name="root-package" value="org.apache.cocoon.www"/>
  </program-generator>

  <programming-languages>
    <component-instance name="java" class="org.apache.cocoon.components.language.programming.java.JavaLanguage">
      <parameter name="compiler" value="org.apache.cocoon.components.language.programming.java.Javac"/>
      <parameter name="code-formatter" value="org.apache.cocoon.components.language.programming.java.JstyleFormatter"/>
      <parameter name="class-loader" value="org.apache.cocoon.components.classloader.ClassLoaderManagerImpl"/>
    </component-instance>
  </programming-languages>

  <classloader class="org.apache.cocoon.components.classloader.ClassLoaderManagerImpl"/>

  <markup-languages>
    <component-instance name="xsp" class="org.apache.cocoon.components.language.markup.xsp.XSPMarkupLanguage">
      <parameter name="prefix" value="xsp"/>
      <parameter name="uri" value="http://apache.org/xsp"/>

      <target-language name="java">
        <parameter name="core-logicsheet" value="resource://org/apache/cocoon/components/language/markup/xsp/java/xsp.xsl"/>

        <builtin-logicsheet>
          <parameter name="prefix" value="xsp-request"/>
          <parameter name="uri" value="http://apache.org/xsp/request"/>
          <parameter name="href" value="resource://org/apache/cocoon/components/language/markup/xsp/java/request.xsl"/>
        </builtin-logicsheet>

        <builtin-logicsheet>
          <parameter name="prefix" value="xsp-response"/>
          <parameter name="uri" value="http://apache.org/xsp/response"/>
          <parameter name="href" value="resource://org/apache/cocoon/components/language/markup/xsp/java/response.xsl"/>
        </builtin-logicsheet>

        <builtin-logicsheet>
          <parameter name="prefix" value="session"/>
          <parameter name="uri" value="http://apache.org/xsp/session"/>
          <parameter name="href" value="resource://org/apache/cocoon/components/language/markup/xsp/java/session.xsl"/>
        </builtin-logicsheet>

        <builtin-logicsheet>
          <parameter name="prefix" value="xsp-cookie"/>
          <parameter name="uri" value="http://apache.org/xsp/cookie"/>
          <parameter name="href" value="resource://org/apache/cocoon/components/language/markup/xsp/java/cookie.xsl"/>
        </builtin-logicsheet>

        <builtin-logicsheet>
          <parameter name="prefix" value="esql"/>
          <parameter name="uri" value="http://apache.org/cocoon/SQL/v2"/>
          <parameter name="href" value="resource://org/apache/cocoon/components/language/markup/xsp/java/esql.xsl"/>
        </builtin-logicsheet>

        <builtin-logicsheet>
          <parameter name="prefix" value="log"/>
          <parameter name="uri" value="http://apache.org/xsp/log"/>
          <parameter name="href" value="resource://org/apache/cocoon/components/language/markup/xsp/java/log.xsl"/>
        </builtin-logicsheet>

        <builtin-logicsheet>
          <parameter name="prefix" value="util"/>
          <parameter name="uri" value="http://apache.org/xsp/util"/>
          <parameter name="href" value="resource://org/apache/cocoon/components/language/markup/xsp/java/util.xsl"/>
        </builtin-logicsheet>
      </target-language>
    </component-instance>

    <component-instance name="sitemap" class="org.apache.cocoon.components.language.markup.sitemap.SitemapMarkupLanguage">
      <parameter name="prefix" value="map"/>
      <parameter name="uri" value="http://apache.org/cocoon/sitemap/1.0"/>

      <target-language name="java">
        <parameter name="core-logicsheet" value="resource://org/apache/cocoon/components/language/markup/sitemap/java/sitemap.xsl"/>
      </target-language>
    </component-instance>
  </markup-languages>

  <datasources>
    <jdbc name="personnel">
      <!--
          If you have an Oracle database, and are using the the
	  pool-controller below, you should add the attribute
	  "oradb" and set it to true.

	  <pool-controller min="5" max="10" oradb="true"/>

	  That way the test to see if the server has disconnected
	  the JdbcConnection will function properly.
      -->
      <pool-controller min="5" max="10"/>
      <!--
          If you need to ensure an autocommit is set to true or
	  false, then create the "auto-commit" element below.

	  <auto-commit>false</auto-commit>

	  The default is true.
      -->
      <dburl>@database-url@</dburl>
      <user>@database-user@</user>
      <password>@database-password@</password>
    </jdbc>
  </datasources>

  <!-- these components is used as a PoolController for the sitemap component pools  -->
  <pool-controller class="org.apache.avalon.excalibur.component.DefaultComponentPoolController"/>

  <sax-connector class="org.apache.cocoon.components.saxconnector.XIncludeSAXConnector"/>

  <stream-pipeline class="org.apache.cocoon.components.pipeline.CachingStreamPipeline"/>

  <event-pipeline class="org.apache.cocoon.components.pipeline.CachingEventPipeline"/>

<!-- ======================== The sitemap  ============================== -->

  <!-- The reloading of the sitemap:
        The check-reload attribute determines if the sitemap is reloaded on change. If
        it is set to "no", the sitemap is generated once at startup, if it is set to "yes",
        the sitemap is regenerated if it changes.
        The reload-method specifies the method for the regeneration:
        asynchron: If the sitemap changes, the sitemap is regenerated at the next request in
                         the background and the incoming request is served with the old sitemap.
                         All subsequent requests are served with the old sitemap until the
                         regeneration in the background has finished.
        synchron: If the sitemap changes, the sitemap is regenerated at the next request.
                       When the regeneration is finished the request (and all subsequent ones)
                       is served with the new sitemap.

        For development environment set the reload-method to synchron and the
        check-reload to yes, for production environment it is advisable to set
        the reload-method to asynchron and for more safety the check-reload to no.
     -->
  <sitemap file="sitemap.xmap" reload-method="asynchron" check-reload="yes"/>

</cocoon>
