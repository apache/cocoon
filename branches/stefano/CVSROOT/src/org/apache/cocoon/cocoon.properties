################################################################################
# Cocoon Configuration file
################################################################################

# Indicates whether or not Cocoon should be visible if 
# the requested URI equals the specified one.
selfservlet.enabled = true
selvservlet.uri = /Cocoon.xml

##########################################
# DOM Parsers                            #
##########################################

# OpenXML parser (http://www.openxml.org/)
parser = org.apache.cocoon.parser.OpenXMLParser

# IBM XML4J Parser (http://www.alphaworks.ibm.com/)
#parser = org.apache.cocoon.parser.IBMXMLParser

# SUN ProjectX Parser (http://developer.java.sun.com/)
#parser = org.apache.cocoon.parser.SunXMLParser

# Oracle XML Parser Version 2 (http://www.oracle.com/)
#parser = org.apache.cocoon.parser.OracleXMLParser

##########################################
# Document Producers                     #
##########################################

# For example, if you want to produce your XML template reading it from
# the file system, using your producer, you should request the URI:
#   http://your.site.com/your_XML_file.xml?producer=file

# This is the request parameter used to identify the producer in the request:
# (default value is "producer")
producer.parameter = producer

# The syntax for this is
#   producer.type.xxx = full.class.name
# where "xxx" is the producer indentier used in the request
producer.type.file = org.apache.cocoon.producer.FileProducer
producer.type.dummy = org.apache.cocoon.example.DummyProducer

# When producer indication is present in the request
# this configuration allows to map those requests to a particular
# producer indicated here with its type.
# NOTE: this type must present in the above map.
producer.default = file

##########################################
# DOM Processors                         #
##########################################

# These are used when the <?cocoon-process type="xxx"?> PI is present.
# If no PI of that type is present, no processing is performed.
# The syntax for this is
#   printer.type.xxx = full.class.name

# Dynamic Content Processor (DCP)
processor.type.dcp = org.apache.cocoon.processor.dcp.DCPProcessor

# SQL Processor
processor.type.sql = org.apache.cocoon.processor.sql.SQLProcessor

# XSL:P processor (http://xslp.kvisco.com/)
processor.type.xslt = org.apache.cocoon.processor.xslt.XSLPProcessor

# Lotus XSL processor (http://www.alphaworks.ibm.com/)
#processor.type.xslt = org.apache.cocoon.processor.xslt.LotusXSLProcessor

# Oracle XSL processor (http://www.oracle.com/)
# Note: this processor is found in the same jar of the Oracle
# XML parser and will not work with other parsers.    
#processor.type.xslt = org.apache.cocoon.processor.xslt.OracleXSLProcessor

##########################################
# DOM Formatters                         #
##########################################

# These are used when the <?cocoon-format type="xxx/yyy"?> PI is present
# The syntax for this is
#   printer.type.xxx/yyy = full.class.name

# OpenXML formatters
#formatter.type.text/xml   = org.apache.cocoon.formatter.xml.OpenXMLXMLFormatter
#formatter.type.text/wml   = org.apache.cocoon.formatter.wml.OpenXMLWMLFormatter
#formatter.type.text/html  = org.apache.cocoon.formatter.html.OpenXMLHTMLFormatter
#formatter.type.text/xhtml = org.apache.cocoon.formatter.xhtml.OpenXMLXHTMLFormatter

# XSL:P formatters
formatter.type.text/xml    = org.apache.cocoon.formatter.xml.XSLPXMLFormatter
formatter.type.text/wml    = org.apache.cocoon.formatter.wml.XSLPWMLFormatter
formatter.type.text/html   = org.apache.cocoon.formatter.html.XSLPHTMLFormatter
formatter.type.text/xhtml  = org.apache.cocoon.formatter.xhtml.XSLPXHTMLFormatter

# Fop formatter
formatter.type.text/xslfo  = org.apache.cocoon.formatter.pdf.FOPFormatter

# XSP formatter
formatter.type.text/xsp    = org.apache.cocoon.formatter.java.XSPFormatter

# NRG formatter
formatter.type.image/nrg   = org.apache.cocoon.formatter.image.NRGFormatter

# This is used when no <?cocoon?> PI is present to indicate 
# which MIME type to associate to the document.
# NOTE: this type must present in the above map.
formatter.default = text/html

# NOTE: the configurations below are used by the OpenXML formatters only

# Specifies the stream format
#  Valid options are:
#   - normal (default)
#   - compact
#   - pretty
formatter.style = pretty
    
# The numbers of characters at which to wrap lines
formatter.line_width = 120
    
# The number of spaces to indent when descending the DOM tree
formatter.indent_spaces = 1

##########################################
# Cache Managers                         #
##########################################

# the default cache
cache = org.apache.cocoon.cache.CocoonCache

# disable page caching
#cache = org.apache.cocoon.cache.NoCache

##########################################
# Object Storage Systems                 #
##########################################

# the default object storage
store = org.apache.cocoon.store.MemoryStore

# NOTE to previous users: the persistent part of the storage system
# has been removed since not currently used. It will come back in later
# releases when support for compiled server pages is added.

# Indicate the minimum amount of memory (in bytes) that should be always 
# available to the jvm. If your JVM contains less than 300Kb free when it 
# starts you may either:
#  - lower this limit, following the indication of the throw exception.
#  - add your JVM startup heap size (suggested).
# To the latter either:
#  - (java 1.1) add -ms<size> as command line argument
#  - (java 1.2) add -Xms<size> as command line argument
store.memory = 200000

##########################################
# Language Interpreters                  #
##########################################

# These are used by the DCP Processor
interpreter.type.java = org.apache.cocoon.interpreter.java.JavaInterpreter
interpreter.type.ecmascript = org.apache.cocoon.interpreter.ecmascript.EcmaScriptInterpreter
interpreter.type.javascript = org.apache.cocoon.interpreter.ecmascript.EcmaScriptInterpreter

# Indicates the default language if not specified in the DCP PIs
interpreter.default = java

##########################################
# User Agents (Browsers)                 #
##########################################

# NOTE: numbers indicate the search order. This is very important since
# some words may be found in more than one browser description. (MSIE is
# presented as "Mozilla/4.0 (Compatible; MSIE 4.01; ..." which tells you A LOT
# about M$ attitude to screw things up for their own pleasure)
#
# for example, the "explorer=MSIE" tag indicates that the XSL stylesheet
# associated to the media type "explorer" should be mapped to those browsers
# that have the string "MSIE" in their "user-Agent" HTTP header.

browser.0 = explorer=MSIE
browser.1 = opera=Opera
browser.2 = lynx=Lynx
browser.3 = java=Java
browser.4 = wap=Nokia-WAP-Toolkit
browser.5 = netscape=Mozilla