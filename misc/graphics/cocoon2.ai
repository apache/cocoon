%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 9.0
%%For: (Stefano Mazzocchi) ( )
%%Title: (cocoon2.ai)
%%CreationDate: 2/23/2002 7:54 PM
%%BoundingBox: -23 422 545 842
%%HiResBoundingBox: -22.0845 422.583 544.75 841.4175
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 296.5 419.5 296.5 419.5
%AI3_TileBox: 8 40 584 832
%AI3_DocumentPreview: None
%AI5_ArtSize: 592 840
%AI5_RulerUnits: 1
%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -39 897.6665 1.5 1012 671 18 0 1 8 90 1 0
%AI5_OpenViewLayers: 7
%%PageOrigin:8 40
%%AI3_PaperRect:-8 834 587 -8
%%AI3_Margin:8 -40 -9 8
%AI7_GridSettings: 14.1732 2 14.1732 2 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI7_Thumbnail: 128 96 8
%%BeginData: 8842 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD7FA87D7DFD7EFFA8A8FD7EFFA87DFD7EFFA8A8FD7EFFA87DFD7E
%FFA8A8FD7EFF7D7DFD7EFFA8A8FD7EFFA87DFD21FF7E59597D597D597D59
%7D597D597D597D597D597D597D597D597D597D597D597D597D597D597D59
%7D597D597D597D597D597D597D597D597D597D597DFD21FFA8A8FD20FF2E
%3613360D3613360D3613360D3613360D3613360D3613360D3613360D3613
%360D3613360D3613360D3613360D3613360D3613360D3613360D3613362F
%5984FD1FFFA87DFD1FFF2E360D360D360D360D360D360D360D360D360D36
%0D360D360D360D360D360D360D360D360D360D360D360D360D360D360D36
%0D360D360D360D360D360D360D537DFD1EFFA8A8FD1EFF59360D3613360D
%3613360D3613360D3613360D3613360D3613360D3613360D3613360D3613
%360D3613360D3613360D3613360D3613360D3613360D3613360D361359FD
%1EFFA87DFD1EFF590D360D360D360D36355A595A59592F36355A595A597D
%0D36355A595A59592F36355A595A597D0D362F5A595A597D0D365959595A
%59590D360D360D360D360D362FA8FD1DFFA8A8FD1EFF2F3613360D361336
%0D842F360D3613360D842F360D36357D0D842F360D3613360D842F360D36
%357D0D842F360D36357D0D5A13360D3659590D3613360D3613360D367DFD
%1DFF7D7DFD1EFF2F0D360D360D360D3659360D360D360D3659360D360D36
%593659360D360D360D3659360D360D36593659360D360D3659362F360D36
%0D3659360D360D360D360D360D84FD1DFFA8A8FD1EFF2F3613360D361336
%0D36595A595A595A0D36595A595A59590D36595A595A595A0D36595A595A
%59590D36595A595A59590D5A13360D36135A0D3613360D3613360D367DFD
%1DFFA87DFD1EFF590D360D360D360D360D360D360D360D360D360D360D36
%0D360D360D360D360D360D360D360D360D360D360D360D360D360D360D36
%0D360D360D360D360D360D362EFD1EFFA8A8FD1EFFA8350D3613360D3613
%360D3613360D3613360D3613360D3613360D3613360D3613360D3613360D
%3613360D3613360D3613360D3613360D3613360D3613360D36357DFD1EFF
%A87DFD1FFF592F0D360D360D360D360D360D360D360D360D360D360D360D
%360D360D360D360D360D360D360D360D360D360D360D360D360D360D360D
%360D360D360D360D53FD1FFFA8A8FD20FFA8FD3B5953A8FD20FFA87DFD7E
%FFA8A8FD7EFF7D7DFD7EFFA8A8FD7EFFA87DFD20FF8453592F5953592F59
%53592F5953592F5953592F5953592F5953592F5953592F5953592F595359
%2F5953592F5953592F5953592F5953592F59535952A8FD21FFA8A8FD1FFF
%592F36135A36605A5A366013360D605A5A366035360D36135A36605A5A36
%36133635605A5A366013360D36365A36605A5A0D36355A36605A5A363613
%362F59FD20FFA87DFD1EFF7D0D360D602F2F2E352F2F2E350D842E352F2F
%2E7E35360D842E2F2E352F2F2E36355A2E352F2F2F7E0D3635592F2F2E35
%2F7D0D5A2E2F2E352F3559360D360D84FD1FFFA8A8FD1EFF59360D605336
%0D3613360D36135A533613360D3635842F842E360D3613360D3613842F36
%13360D3635590D842F360D3613365A595A590D3613360D3659360D3659FD
%1FFFA87DFD1EFF7D0D360D7E35360D360D360D360D7E2F360D360D605335
%0D7E2F360D360D360D36357D0D360D360D842E36595A0D360D36355A2E5A
%2F360D360D360D5A0D360D7DFD1FFFA8A8FD1EFFA85913360D5A595A595A
%595A2F361359595A595A2F3613360D5A595A595A59590D363559595A595A
%2F3613362F5A595A595A2F36353613360D3613362F361353A8FD1FFF7D7D
%FD1FFFA8592E2F0D360D360D360D360D360D360D360D360D360D360D360D
%360D360D360D360D360D360D360D360D360D360D360D360D360D360D360D
%360D2F2E59A8FD20FFA8A8FD22FFA8A87D847DA87D847DA87D847DA87D84
%7DA87D847DA87D847DA87D847DA87D847DA87D847DA87D847DA87D847DA8
%7D847DA87D847DA87D84A8FD23FFA87DFD7EFFA8A8FD7EFFA87DFD7EFFA8
%A8FD7EFFA87DFD7EFFA8A8FD7EFF7D7DFD7EFFA8A8FD26FFFD3159FD27FF
%A87DFD25FF7D350D360D360D360D360D360D360D360D360D360D360D360D
%360D360D360D360D350D350D2F2E350D350D360D350D360D357DFD26FFA8
%A8FD25FF7E13362F592F352F5213592F362F352F362F350D362F532F3513
%360D532F360D592F362F3613350D362F352F592F360D36137EFD26FFA87D
%FD25FF59360D352E352F2F0D360D2F2E350D350D362F2F2E352F360D360D
%360D2F2F2F0D360D350D360D360D350D360D350D360D3659FD26FFA8A8FD
%25FF7E133636605A5A365A133636605A5A3536133636605A5A365A133636
%605A5A3536133636605A5A3536135A36605A5A3536137EFD26FFA87DFD25
%FF59365A532E352F2F2E365A532E352F592F365A532E352F2F2E365A532E
%352F592F365A532E352F592F36532F2E352F7D2F3659FD26FFA8A8FD25FF
%7E0D7E13360D3613360D7E13360D36357D0D7E13360D3613360D7E13360D
%36357D0D7E35360D36137D0D5A13360D3613590D7EFD26FF7D7DFD25FF59
%36595A355A355A3536595A355A35842E36595A355A355A3536595A355A35
%842E36595A355A35842E362F360D360D36593659FD26FFA8A8FD25FF7D2F
%362F592F592F590D362F592F592F360D362F592F592F590D362F592F592F
%360D362F592F592F360D3613360D3613362F7EFD26FFA87DFD26FF532E35
%2F2F2E352F2F2E352F2F2E352F2F2E352F2F2E352F2F2E352F2F2E352F2F
%2E352F2F2E352F2F2E352F2F2E352F53FD27FFA8A8FD7EFFA87DFD7EFFA8
%A8FD7EFFA87DFD7EFFA8A8FD21FFA87D847D847D847D847D847D847D847D
%847D847D847D847D847D847D847D847D847D847D847D847D847D847D847D
%847D847D847D847D847D847D847D847D847D847D847D847D847D847D847D
%847D8484FD0DFF7D7DFD1FFF7D592F360D360D360D360D360D360D360D36
%0D360D360D360D360D360D360D360D360D360D360D360D360D360D360D36
%0D360D360D360D360D360D360D360D360D360D360D360D360D360D360D36
%0D360D352E59FD0BFFA8A8FD1EFF5959133635605A5A36605A360D605A5A
%36603636353613360D3613360D605A5A36605A3635605A5A36605A360D60
%5A5A36605A3636605A5A366036360D3613360D36135A36605A5A36361336
%0D3613360D5A13362F53A9FD09FFA87DFD1DFF7D350D360D352E352F5959
%7E2F5A2F352F2F2E84355A0D3635360D36596059592F2F2E350D352E352F
%2F597E2F6059592F2F2E352F592E352F2F2E8435360D360D360D362F2F2E
%352F7D5A36595A3560365A2F360D360D59FD09FFA8A8FD1DFF5913360D36
%13360D6059592E36357E36605A6059353584368459605935357D59605A5A
%363613360D36137E5936357D59605A5A3636595A36605A60595913360D36
%13360D605A5A36607E520D362F3553592F350D3613362F84FD08FFA87DFD
%1CFF7D0D360D360D360D360D350D360D362F2F2E352F2F0D362F2F2E2F2F
%2F0D362F2F2E352F2F0D360D360D362F2F2F362F2F2E352F2F0D352F2F2E
%352F2F0D360D360D360D362F352F2F2E2F0D360D360D2F0D360D360D360D
%362EFD08FFA8A8FD1CFF593613360D3613360D3613360D3613360D361336
%0D3613360D3613360D3613360D3613360D3613360D3613360D3613360D36
%13360D3613360D3613360D3613360D3613360D3613360D3613360D361336
%0D3613360D3613360D59FD08FFA87DFD1CFF590D360D360D5A84FD09FF59
%360D84A8FD07FF845A0D3635A9FD09FF840D365AFD08FFA835360D3684FD
%07FFA8842F365AFD09FF7E360D360D362EFD08FFA8A8FD1CFF53360D3613
%36A9A8FD0A272F84A952FD07277DA85913FF7D2EFD0927355AFF52FD0627
%527DFF2F36AFA8FD072753A87D138452FD072752FF7D360D361335FD08FF
%7D7DFD1CFF590D360D360DFFF8360D360D360D360D360D365A7D2E360D36
%0D3635360DAF2836FF270D360D360D360D360D360D84592F0D360D360D36
%3536A8520DFFF83635360D360D360D5A7D2F5A7D0D360D360D360D3659A8
%2F360D362EFD08FFA8A8FD1CFF84360D361336FF5913360D3613360D3613
%360D857D360D3613360D5A5236A95313FF2E3613360D3613360D36133684
%7D13360D36133636592FFF2736FF5335592F360D3613365AAF2E85523613
%360D3613360D60A8590D361359FD08FFA87DFD1DFF2E360D360DA97D6036
%5A355A365A355A353635FF7D5A355A365A356084FF2736A8A8595A365A35
%5A365A35360D5AA884365A355A365A35A9A9270DA9A85A355A365A355A5A
%FF52535A7D0D360D360D360D3635A82F360D59A8FD08FFA8A8FD1EFF2E36
%0D36357DFD09A87D2F3659FD09A827350D367DFD09A87D36137E7DFD07A8
%7D272F363584FD08A852270D6027360D3613360D3613367D59133559FD09
%FFA87DFD1EFFA82E350D360D2F2E352F2F2E352F2F2E350D360D352F2F2E
%352F2F2E350D360D362F2F2E352F2F2E352F2F0D360D352E352F2F2E352F
%2F0D360D360D352F2F2E352F2F2E350D360D350D360D360D360D360D350D
%3559FD0AFFA8A8FD20FF59592F592F592F592F592F592F592F592F592F59
%2F592F592F592F592F592F592F592F592F592F592F592F592F592F592F59
%2F592F592F592F592F592F592F592F592F592F592F592F592F592F592F59
%537DA8FD0BFFA87DFD7EFFA8A8FD7EFF7D7DFD7EFFA8A8FD7EFFA87DFD7E
%FFA8A8FD7EFFA87DFD7EFFA8A8FD7EFFA87DFD7EFFA8A8FD7EFF7D7DFD7E
%FFA8A8FD7EFFA87DFD7EFFA8A8FD7EFFA87DFD7EFFA8A8FD7EFFA87DFD7E
%FFA8A8FD7EFF7D7DFD7EFFA8A8FD7EFFA87DFD7EFFA8A8FD7EFFA87DFD7E
%FFA8A8FD7EFFA87DFD7EFFFD04A87DA8A8A87DA8A8A87DA8A8A87DA8A8A8
%7DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8
%A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A8
%7DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8
%A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DFD7FFFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
4 Bn
%AI5_BeginGradient: (Black, White)
(Black, White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Chrome)
(Chrome) 0 6 Bd
[
0
<
464646454545444444444343434342424241414141404040403F3F3F3E3E3E3E3D3D3D3C3C3C3C3B
3B3B3B3A3A3A39393939383838383737373636363635353535343434333333333232323131313130
3030302F2F2F2E2E2E2E2D2D2D2D2C2C2C2B2B2B2B2A2A2A2A292929282828282727272626262625
2525252424242323232322222222212121202020201F1F1F1F1E1E1E1D1D1D1D1C1C1C1B1B1B1B1A
1A1A1A1919191818181817171717161616151515151414141413131312121212111111101010100F
0F0F0F0E0E0E0D0D0D0D0C0C0C0C0B0B0B0A0A0A0A09090909080808070707070606060505050504
04040403030302020202010101010000
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
1F1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1A1A1A1A1A
1A1A1A19191919191919191818181818181818181717171717171717161616161616161615151515
15151515151414141414141414131313131313131312121212121212121211111111111111111010
1010101010100F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C
0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A090909090909090909080808080808080807070707070707
07060606060606060606050505050505050504040404040404040303030303030303030202020202
02020201010101010101010000000000
>
1 %_Br
0
0.275
1
<
6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544
434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F
>
1 %_Br
0
<
00000101010102020202030303040404040505050606060607070707080808090909090A0A0A0A0B
0B0B0C0C0C0C0D0D0D0D0E0E0E0F0F0F0F1010101111111112121212131313141414141515151516
161617171717181818181919191A1A1A1A1B1B1B1C1C1C1C1D1D1D1D1E1E1E1F1F1F1F2020202021
212122222222232323232424242525252526262627272727282828282929292A2A2A2A2B2B2B2B2C
2C2C2D2D2D2D2E2E2E2E2F2F2F303030303131313232323233333333343434353535353636363637
373738383838393939393A3A3A3B3B3B3B3C3C3C3D3D3D3D3E3E3E3E3F3F3F404040404141414142
42424343434344444444454545464646
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
00000101020203030304040505050606070708080809090A0A0B0B0B0C0C0D0D0D0E0E0F0F101010
1111121212131314141515151616171718181819191A1A1A1B1B1C1C1D1D1D1E1E1F1F1F20202121
222222232324242525252626272727282829292A2A2A2B2B2C2C2D2D2D2E2E2F2F2F303031313232
32333334343435353636373737383839393A3A3A3B3B3C3C3C3D3D3E3E3F3F3F4040414142424243
4344444445454646474747484849494A4A4A4B4B4C4C4C4D4D4E4E4F4F4F50505151515252535354
54545555565657575758585959595A5A5B5B5C5C5C5D5D5E5E5E5F5F606061616162626363646464
6565666666676768686969696A6A6B6B
>
1 %_Br
1
0 %_Br
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
4D4C4C4C4B4B4B4A4A4A4A4949494848484747474746464645454544444444434343424242414141
414040403F3F3F3E3E3E3E3D3D3D3C3C3C3B3B3B3B3A3A3A39393938383838373737363636353535
35343434333333323232323131313030302F2F2F2F2E2E2E2D2D2D2C2C2C2C2B2B2B2A2A2A292929
2928282827272726262626252525242424232323232222222121212020201F1F1F1F1E1E1E1D1D1D
1C1C1C1C1B1B1B1A1A1A191919191818181717171616161615151514141413131313121212111111
101010100F0F0F0E0E0E0D0D0D0D0C0C0C0B0B0B0A0A0A0A09090908080807070707060606050505
04040404030303020202010101010000
>
0
0
1 %_Br
[
1 0 50 92 %_BS
%_1 0 50 92 Bs
0 0.275 1 0.12 1 50 59 %_BS
%_0 0.275 1 0.12 1 50 59 Bs
0 0.275 1 0.42 1 50 50 %_BS
%_0 0.275 1 0.42 1 50 50 Bs
1 0 50 49 %_BS
%_1 0 50 49 Bs
1 0 50 41 %_BS
%_1 0 50 41 Bs
1 0.3 0 0 1 50 0 %_BS
%_1 0.3 0 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
0
1 %_Br
1
<
0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E
2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50515253545556
5758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E
7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6
A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
F7F8F9FAFBFCFDFEFF
>
0
0
1 %_Br
1
<
00000000000000000000000000000000000001010101010101010101010101010101010101010101
01010101010101010101010101010202020202020202020202020202020202020202020202020202
02020202020202020202030303030303030303030303030303030303030303030303030303030303
03030303030304040404040404040404040404040404040404040404040404040404040404040404
04040505050505050505050505050505050505050505050505050505050505050505050505050606
06060606060606060606060606060606060606060606060606060606060606060607070707070707
07070707070707070707070707070707
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1
0
1 %_Br
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
1 %_Br
[
0 1 0 0 1 50 100 %_BS
%_0 1 0 0 1 50 100 Bs
1 1 0 0 1 50 80 %_BS
%_1 1 0 0 1 50 80 Bs
1 0.0279 0 0 1 50 60 %_BS
%_1 0.0279 0 0 1 50 60 Bs
1 0 1 0 1 50 40 %_BS
%_1 0 1 0 1 50 40 Bs
0 0 1 0 1 50 20 %_BS
%_0 0 1 0 1 50 20 Bs
0 1 1 0 1 50 0 %_BS
%_0 1 1 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Orange Radial)
(Yellow & Orange Radial) 1 2 Bd
[
0
<
0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122
232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748
494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9
F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2
F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEB
EBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E6
>
0
1 %_Br
[
0 0 1 0 1 52 19 %_BS
%_0 0 1 0 1 52 19 Bs
0 0.55 0.9 0 1 50 100 %_BS
%_0 0.55 0.9 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Brick)
(Brick) 0 0 72 72 [
%AI3_Tile
(0 O 0 R 0.3 0.85 0.85 0 k
 0.3 0.85 0.85 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
0 0 m
0 72 L
72 72 L
72 0 L
0 0 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
0 68.4097 m
72 68.4097 l
S0 61.209 m
72 61.209 L
S0 54.0088 m
72 54.0088 L
S0 46.8076 m
72 46.8076 L
S0 39.6084 m
72 39.6084 L
S0 32.4072 m
72 32.4072 L
S0 25.207 m
72 25.207 L
S0 18.0059 m
72 18.0059 L
S0 10.8057 m
72 10.8057 L
S0 3.6064 m
72 3.6064 L
S68.4102 68.4097 m
68.4102 61.2217 l
S54.0098 68.4097 m
54.0098 61.2217 L
S39.6094 68.4097 m
39.6094 61.2217 L
S25.21 68.4097 m
25.21 61.2217 L
S10.8105 68.4097 m
10.8105 61.2217 L
S68.4102 53.9717 m
68.4102 46.7842 l
S54.0098 53.9717 m
54.0098 46.7842 L
S39.6094 53.9717 m
39.6094 46.7842 L
S25.21 53.9717 m
25.21 46.7842 L
S10.8105 53.9717 m
10.8105 46.7842 L
S68.4102 39.5967 m
68.4102 32.4092 l
S54.0098 39.5967 m
54.0098 32.4092 L
S39.6094 39.5967 m
39.6094 32.4092 L
S25.21 39.5967 m
25.21 32.4092 L
S10.8105 39.5967 m
10.8105 32.4092 L
S68.4102 25.2217 m
68.4102 18.0342 l
S54.0098 25.2217 m
54.0098 18.0342 L
S39.6094 25.2217 m
39.6094 18.0342 L
S25.21 25.2217 m
25.21 18.0342 L
S10.8105 25.2217 m
10.8105 18.0342 L
S68.4102 10.7842 m
68.4102 3.5967 l
S54.0098 10.7842 m
54.0098 3.5967 L
S39.6094 10.7842 m
39.6094 3.5967 L
S25.21 10.7842 m
25.21 3.5967 L
S10.8105 10.7842 m
10.8105 3.5967 L
S61.1973 3.5967 m
61.1973 0 L
S46.7969 3.5967 m
46.7969 0 L
S32.3965 3.5967 m
32.3965 0 L
S17.9971 3.5967 m
17.9971 0 L
S3.5967 3.5967 m
3.5967 0 l
S61.1973 18.0342 m
61.1973 10.8467 L
S46.7969 18.0342 m
46.7969 10.8467 L
S32.3965 18.0342 m
32.3965 10.8467 L
S17.9971 18.0342 m
17.9971 10.8467 L
S3.5967 18.0342 m
3.5967 10.8467 l
S61.1973 32.4092 m
61.1973 25.2217 L
S46.7969 32.4092 m
46.7969 25.2217 L
S17.9971 32.4092 m
17.9971 25.2217 L
S3.5967 32.4092 m
3.5967 25.2217 l
S61.1973 46.7842 m
61.1973 39.5967 L
S46.7969 46.7842 m
46.7969 39.5967 L
S32.3965 46.7842 m
32.3965 39.5967 L
S17.9971 46.7842 m
17.9971 39.5967 L
S3.5967 46.7842 m
3.5967 39.5967 l
S61.1973 61.2217 m
61.1973 54.0347 L
S46.7969 61.2217 m
46.7969 54.0347 L
S32.3965 61.2217 m
32.3965 54.0347 L
S17.9971 61.2217 m
17.9971 54.0347 L
S3.5967 61.2217 m
3.5967 54.0347 l
S61.1973 71.959 m
61.1973 68.4717 L
S46.7969 71.959 m
46.7969 68.4717 L
S32.3965 71.959 m
32.3965 68.4717 L
S17.9971 71.959 m
17.9971 68.4717 L
S3.5967 71.959 m
3.5967 68.4717 l
S32.3965 32.4092 m
32.3965 25.2217 L
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Confetti)
(Confetti) 4.85 3.617 76.85 75.617 [
%AI3_Tile
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
4.85 3.617 m
4.85 75.617 L
76.85 75.617 L
76.85 3.617 L
4.85 3.617 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0 g
 0 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
10.6 64.867 m
7.85 62.867 l
S9.1 8.617 m
6.85 6.867 l
S78.1 68.617 m
74.85 67.867 l
S76.85 56.867 m
74.35 55.117 l
S79.6 51.617 m
76.6 51.617 l
S76.35 44.117 m
73.6 45.867 l
S78.6 35.867 m
76.6 34.367 l
S76.1 23.867 m
73.35 26.117 l
S78.1 12.867 m
73.85 13.617 l
S68.35 14.617 m
66.1 12.867 l
S76.6 30.617 m
73.6 30.617 l
S62.85 58.117 m
60.956 60.941 l
S32.85 59.617 m
31.196 62.181 l
S47.891 64.061 m
49.744 66.742 l
S72.814 2.769 m
73.928 5.729 l
S67.976 2.633 m
67.35 5.909 l
S61.85 27.617 m
59.956 30.441 l
S53.504 56.053 m
51.85 58.617 l
S52.762 1.779 m
52.876 4.776 l
S45.391 5.311 m
47.244 7.992 l
S37.062 3.375 m
35.639 5.43 l
S55.165 34.828 m
57.518 37.491 l
S20.795 3.242 m
22.12 5.193 l
S14.097 4.747 m
15.008 8.965 l
S9.736 1.91 m
8.073 4.225 l
S31.891 5.573 m
32.005 8.571 l
S12.1 70.367 m
15.6 68.867 l
S9.35 54.867 m
9.6 58.117 l
S12.85 31.867 m
14.35 28.117 l
S10.1 37.367 m
12.35 41.117 l
S34.1 71.117 m
31.85 68.617 l
S38.35 71.117 m
41.6 68.367 l
S55.1 71.117 m
58.35 69.117 l
S57.35 65.117 m
55.35 61.867 l
S64.35 66.367 m
69.35 68.617 l
S71.85 62.867 m
69.35 61.117 l
S23.6 70.867 m
23.6 67.867 l
S20.6 65.867 m
17.35 65.367 l
S24.85 61.367 m
25.35 58.117 l
S25.85 65.867 m
29.35 66.617 l
S14.1 54.117 m
16.85 56.117 l
S12.35 11.617 m
12.6 15.617 l
S12.1 19.867 m
14.35 22.367 l
S26.1 9.867 m
23.6 13.367 l
S34.6 47.117 m
32.1 45.367 l
S62.6 41.867 m
59.85 43.367 l
S31.6 35.617 m
27.85 36.367 l
S36.35 26.117 m
34.35 24.617 l
S33.85 14.117 m
31.1 16.367 l
S37.1 9.867 m
35.1 11.117 l
S34.35 20.867 m
31.35 20.867 l
S44.6 56.617 m
42.1 54.867 l
S47.35 51.367 m
44.35 51.367 l
S44.1 43.867 m
41.35 45.617 l
S43.35 33.117 m
42.6 30.617 l
S43.85 23.617 m
41.1 25.867 l
S44.35 15.617 m
42.35 16.867 l
S67.823 31.1 m
64.823 31.1 l
S27.1 32.617 m
29.6 30.867 l
S31.85 55.117 m
34.85 55.117 l
S19.6 40.867 m
22.1 39.117 l
S16.85 35.617 m
19.85 35.617 l
S20.1 28.117 m
22.85 29.867 l
S52.1 42.617 m
54.484 44.178 l
S52.437 50.146 m
54.821 48.325 l
S59.572 54.133 m
59.35 51.117 l
S50.185 10.055 m
53.234 9.928 l
S51.187 15.896 m
53.571 14.075 l
S58.322 19.883 m
59.445 16.823 l
S53.1 32.117 m
50.6 30.367 l
S52.85 24.617 m
49.6 25.617 l
S61.85 9.117 m
59.1 10.867 l
S69.35 34.617 m
66.6 36.367 l
S67.1 23.617 m
65.1 22.117 l
S24.435 46.055 m
27.484 45.928 l
S25.437 51.896 m
27.821 50.075 l
S62.6 47.117 m
65.321 46.575 l
S19.85 19.867 m
20.35 16.617 l
S21.85 21.867 m
25.35 22.617 l
S37.6 62.867 m
41.6 62.117 l
S38.323 42.1 m
38.823 38.6 l
S69.35 52.617 m
66.85 53.867 l
S14.85 62.117 m
18.1 59.367 l
S9.6 46.117 m
7.1 44.367 l
S20.6 51.617 m
18.6 50.117 l
S46.141 70.811 m
47.994 73.492 l
S69.391 40.561 m
71.244 43.242 l
S38.641 49.311 m
39.35 52.117 l
S25.141 16.811 m
25.85 19.617 l
S36.6 32.867 m
34.6 31.367 l
S6.1 68.617 m
2.85 67.867 l
S4.85 56.867 m
2.35 55.117 l
S7.6 51.617 m
4.6 51.617 l
S6.6 35.867 m
4.6 34.367 l
S6.1 12.867 m
1.85 13.617 l
S4.6 30.617 m
1.6 30.617 l
S72.814 74.769 m
73.928 77.729 l
S67.976 74.633 m
67.35 77.909 l
S52.762 73.779 m
52.876 76.776 l
S37.062 75.375 m
35.639 77.43 l
S20.795 75.242 m
22.12 77.193 l
S9.736 73.91 m
8.073 76.225 l
S10.1 23.617 m
6.35 24.367 l
S73.217 18.276 m
71.323 21.1 l
S28.823 39.6 m
29.505 42.389 l
S49.6 38.617 m
47.6 37.117 l
S60.323 73.6 m
62.323 76.6 l
S60.323 1.6 m
62.323 4.6 l
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Leaves - Fall )
(Leaves - Fall ) 0 0 64.0781 78.9336 [
%AI3_Tile
(0 O 0 R 0.05 0.2 1 0 k
 0.05 0.2 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
64.0781 78.9336 m
64.0781 0 L
0 0 L
0 78.9336 L
64.0781 78.9336 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.83 0 1 0 k
 0.83 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
29.7578 0.9902 m
30.4346 1.1914 30.7246 1.3428 V
29.2559 4.0547 33.707 8.3359 34.627 9.0762 C
35.2275 8.8506 35.3477 6.3184 34.6699 4.9805 C
35.5137 5.1035 37.7031 3.7256 38.4609 2.4365 C
38.5254 3.125 40.0957 6.0664 40.9219 6.4434 C
40.002 6.8408 39.3359 8.3135 38.5742 9.7617 C
39.5957 9.9287 40.9961 9.0078 42.4668 8.1025 C
42.9814 8.9043 44.3555 9.875 45.6143 10.3916 C
44.5264 11.0781 44.0313 11.8203 43.5352 13.2793 C
42.4922 12.7139 40.3057 12.5645 39.7764 12.8516 C
40.291 13.9648 42.5371 14.5078 43.2676 14.4551 C
43.0137 15.3164 42.8652 17.4697 43.0391 20.0625 C
41.3789 18.7461 39.834 17.4297 38.1738 17.4883 C
38.4434 16.0664 37.8076 14.2607 37.4307 13.7676 C
36.8574 14.5117 36.4463 15.3389 36.8008 17.3164 C
35.3486 17.8008 34.1113 18.3467 32.7373 19.6045 C
32.7373 17.7734 32.166 16.5723 31.2969 15.2959 C
32.5576 14.8076 33.8301 13.6045 33.8252 12.5664 C
32.9775 12.7178 31.2852 13.4619 30.793 14.4551 C
30.0742 13.707 28.3906 12.3984 26.7871 12.3945 C
27.9746 11.5391 28.8945 10.5059 28.9893 8.5938 C
30.2422 9.5645 32.6953 10.1797 34.0752 9.582 C
29.2344 5.3457 29.7031 2.3125 29.7578 0.9902 C
f13.8525 29.9844 m
13.3281 29.5127 13.1309 29.25 V
15.623 27.4326 13.3691 21.6074 12.8555 20.5439 C
12.2168 20.4883 10.8096 23.2285 10.8457 24.7266 C
9.7129 23.9707 8.0488 24.0918 6.4463 24.3779 C
7.0186 23.2891 6.6172 21.3447 5.8164 20.5439 C
6.8184 20.5801 8.1699 19.8652 9.4785 18.8838 C
8.6436 18.0645 6.8164 18.2246 4.9004 18.8838 C
4.9004 17.5107 4.0781 15.7734 3.2412 14.5918 C
4.5576 14.6484 5.7031 13.9629 6.5605 12.9316 C
7.2256 14.5 9.2598 15.6133 10.166 15.5645 C
10.1826 14.1992 8.6094 12.1094 7.5879 11.7109 C
8.1875 11.041 9.207 9.5107 10.166 7.0947 C
10.9648 9.0205 12.1348 10.2627 13.3672 11.1953 C
12.2256 12.7578 12.3994 13.6289 12.7988 15.1074 C
13.541 14.5664 14.5723 14.1338 14.7441 12.1309 C
16.4609 12.416 17.5957 12.3447 19.0938 11.4434 C
18.6387 13.1055 18.6348 14.707 18.9551 16.4063 C
17.1055 16.2666 15.5449 16.4795 14.5156 17.9688 C
15.3457 18.1953 17.6055 18.2549 18.4795 17.3223 C
18.8066 18.3047 19.7012 19.7109 21.1475 20.4043 C
19.707 20.6641 18.7227 21.7637 17.8135 23.4492 C
17.1006 22.0332 14.873 20.3691 13.3711 20.3145 C
15.373 24.3779 15.373 27.2959 13.8525 29.9844 C
f41.2324 26.0742 m
41.5518 26.7021 41.7549 26.959 V
44.1523 25.0176 48.958 28.3262 49.8535 29.0957 C
49.7432 29.7266 47.6182 30.8643 45.9004 29.834 C
46.3408 31.123 45.4395 33.084 44.2402 34.126 C
45.9805 34.0254 48.126 35.3867 48.6484 36.1289 C
48.8701 35.1514 50.0527 33.8809 51.3379 32.8672 C
51.6895 33.8398 50.9941 35.958 50.0781 37.5605 C
51.3125 38.0605 52.4248 38.9912 52.8828 40.25 C
53.3398 38.9336 54.3428 38.2598 55.6875 37.5039 C
54.5273 36.0762 53.7471 33.9023 54.0273 33.0391 C
55.3496 33.374 56.9209 36.0918 57.0439 37.1816 C
57.9189 36.415 59.4727 35.7285 62.0537 35.4219 C
60.3535 34.3438 59.9902 32.3516 59.4063 30.9219 C
58.2588 31.3682 56.0898 31.4277 55.1152 30.8643 C
55.8281 30.2852 57.168 29.7344 59.1777 29.7207 C
59.1777 28.1758 59.6406 27.043 60.8945 25.8281 C
59.1719 25.8418 57.0723 25.3555 55.5762 24.9629 C
55.3281 26.292 54.4844 27.8887 53.3398 28.2891 C
53.334 27.4277 53.5996 25.1797 54.4844 24.5117 C
53.6201 23.9443 52.3672 22.5674 51.9102 20.8496 C
51.2881 22.1758 50.4268 23.4805 48.5645 23.9238 C
49.749 24.9766 50.584 26.9941 50.25 28.4609 C
45.1973 24.4785 42.5215 25.7773 41.2324 26.0742 C
f27.7578 38.7324 m
28.4346 38.9316 28.7246 39.084 V
27.2559 41.7969 31.707 46.0776 32.627 46.8169 C
33.2275 46.5918 33.3477 44.0586 32.6699 42.7227 C
33.5137 42.8457 35.7031 41.4678 36.4609 40.1787 C
36.5254 40.8652 38.0957 43.8066 38.9219 44.1846 C
38.002 44.582 37.3359 46.0547 36.5742 47.5039 C
37.5957 47.6709 38.9961 46.7485 40.4668 45.8438 C
40.9814 46.6445 42.3555 47.6177 43.6143 48.1328 C
42.5264 48.8198 42.0313 49.5615 41.5352 51.0205 C
40.4922 50.4556 38.3057 50.3057 37.7764 50.5938 C
38.291 51.7056 40.5371 52.2485 41.2676 52.1958 C
41.0137 53.0576 40.8652 55.2109 41.0391 57.8037 C
39.3789 56.4878 37.834 55.1719 36.1738 55.2285 C
36.4434 53.8076 35.8076 52.002 35.4307 51.5088 C
34.8574 52.2529 34.4463 53.0796 34.8008 55.0576 C
33.3486 55.5425 32.1113 56.0879 30.7373 57.3467 C
30.7373 55.5146 30.166 54.314 29.2969 53.0366 C
30.5576 52.5488 31.8301 51.3467 31.8252 50.3076 C
30.9775 50.46 29.2852 51.2036 28.793 52.1958 C
28.0742 51.4497 26.3906 50.1396 24.7871 50.1357 C
25.9746 49.2817 26.8945 48.2466 26.9893 46.335 C
28.2422 47.3057 30.6953 47.9209 32.0752 47.3237 C
27.2344 43.0869 27.7031 40.0547 27.7578 38.7324 C
f13.5195 70.3916 m
12.9941 69.9209 12.7988 69.6587 V
15.2891 67.8418 13.0352 62.0146 12.5225 60.9517 C
11.8828 60.8955 10.4766 63.6367 10.5117 65.1348 C
9.3809 64.3789 7.7148 64.4995 6.1133 64.7856 C
6.6855 63.6987 6.2842 61.7529 5.4834 60.9517 C
6.4854 60.9878 7.8359 60.2729 9.1455 59.2925 C
8.3105 58.4717 6.4834 58.6338 4.5674 59.2925 C
4.5674 57.9189 3.7461 56.1816 2.9082 54.9995 C
4.2246 55.0576 5.3691 54.3706 6.2275 53.3408 C
6.8926 54.9097 8.9258 56.0215 9.832 55.9727 C
9.8496 54.6079 8.2764 52.5176 7.2539 52.1187 C
7.8545 51.4497 8.873 49.9189 9.832 47.5039 C
10.6309 49.4297 11.8008 50.6719 13.0342 51.6045 C
11.8926 53.1655 12.0664 54.0366 12.4648 55.5146 C
13.209 54.9746 14.2393 54.5415 14.4102 52.5386 C
16.127 52.8247 17.2637 52.7529 18.7598 51.8525 C
18.3057 53.5137 18.3027 55.1147 18.623 56.8149 C
16.7725 56.6748 15.2129 56.8887 14.1826 58.377 C
15.0117 58.6035 17.2725 58.6626 18.1465 57.731 C
18.4736 58.7129 19.3691 60.1187 20.8145 60.8125 C
19.375 61.0728 18.3896 62.1719 17.4805 63.8579 C
16.7676 62.4429 14.541 60.7769 13.0371 60.7227 C
15.041 64.7856 15.041 67.7046 13.5195 70.3916 C
f41.2324 64.4824 m
41.5518 65.1113 41.7549 65.3682 V
44.1523 63.4272 48.958 66.7354 49.8535 67.5034 C
49.7432 68.1362 47.6182 69.2725 45.9004 68.2422 C
46.3408 69.5313 45.4395 71.4922 44.2402 72.5342 C
45.9805 72.4341 48.126 73.7954 48.6484 74.5371 C
48.8701 73.5601 50.0527 72.29 51.3379 71.2754 C
51.6895 72.249 50.9941 74.3662 50.0781 75.9683 C
51.3125 76.4692 52.4248 77.3994 52.8828 78.6582 C
53.3398 77.3423 54.3428 76.667 55.6875 75.9111 C
54.5273 74.4844 53.7471 72.3101 54.0273 71.4473 C
55.3496 71.7822 56.9209 74.5 57.0439 75.5903 C
57.9189 74.8232 59.4727 74.1372 62.0537 73.8311 C
60.3535 72.7534 59.9902 70.7612 59.4063 69.3301 C
58.2588 69.7773 56.0898 69.8364 55.1152 69.2725 C
55.8281 68.6934 57.168 68.1431 59.1777 68.1284 C
59.1777 66.583 59.6406 65.4512 60.8945 64.2373 C
59.1719 64.249 57.0723 63.7632 55.5762 63.3721 C
55.3281 64.7002 54.4844 66.2974 53.3398 66.6973 C
53.334 65.8364 53.5996 63.5874 54.4844 62.9214 C
53.6201 62.353 52.3672 60.9751 51.9102 59.2583 C
51.2881 60.583 50.4268 61.8882 48.5645 62.333 C
49.749 63.3862 50.584 65.4033 50.25 66.8691 C
45.1973 62.8872 42.5215 64.1851 41.2324 64.4824 C
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Stripes)
(Stripes) 8.45 4.6001 80.45 76.6001 [
%AI3_Tile
(0 O 0 R 1 0.07 1 0 k
 1 0.07 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 3.6 w 4 M []0 d0 XR
8.2 8.2 m
80.7 8.2 L
S8.2 22.6001 m
80.7 22.6001 L
S8.2 37.0002 m
80.7 37.0002 L
S8.2 51.4 m
80.7 51.4 L
S8.2 65.8001 m
80.7 65.8001 L
S8.2 15.4 m
80.7 15.4 L
S8.2 29.8001 m
80.7 29.8001 L
S8.2 44.2 m
80.7 44.2 L
S8.2 58.6001 m
80.7 58.6001 L
S8.2 73.0002 m
80.7 73.0002 L
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(New Pattern 1)
0 A
u1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7844.75 8611 m
-7844.75 8587 L
-7894.75 8587 L
-7894.75 8611 L
-7844.75 8611 L
nu0 Ap
0 O
1 g
-7864.75 8609 m
-7876.96 8612.0527 -7885.4434 8602.0605 -7894.75 8594.9512 C
F-7854.75 8609 m
-7871.1279 8613.0947 -7880.8008 8593.7227 -7894.75 8589.3154 C
F-7894.75 8589 m
-7874.75 8584 -7864.75 8614 -7844.75 8609 C
F-7884.75 8589 m
-7868.3721 8584.9053 -7858.6992 8604.2773 -7844.75 8608.6846 C
F-7874.75 8589 m
-7862.54 8585.9473 -7854.0566 8595.9395 -7844.75 8603.0488 C
F-7854.75 8589 m
-7851.1279 8588.0947 -7847.835 8588.3408 -7844.75 8589.3154 C
F-7884.75 8609 m
-7888.3721 8609.9053 -7891.665 8609.6592 -7894.75 8608.6846 C
F-7854.7817 8589.125 m
-7860.9009 8587.6162 -7864.7817 8589.125 V
-7868.877 8587.6484 -7874.7817 8589.125 V
-7879.7446 8587.4492 -7884.7817 8589.125 V
-7890.7969 8587.5742 -7894.7817 8589.125 V
-7894.7817 8608.8096 L
-7891.6958 8609.7842 -7888.2969 8609.9912 -7884.3799 8608.9082 C
-7878.2134 8610.4912 -7874.4634 8608.9082 V
-7869.4634 8610.4912 -7864.3799 8608.8242 V
-7860.0474 8610.4082 -7854.3799 8608.9082 V
-7848.8799 8610.3242 -7844.7817 8609.125 V
-7844.7817 8589.4404 L
-7847.5254 8588.4287 -7850.6514 8587.9287 -7854.7817 8589.125 C
f0 R
0 G
1 J 1 j 0.5 w-7874.75 8609 m
-7882.54 8610.9473 -7888.813 8607.585 -7894.75 8603.0488 C
S-7864.75 8609 m
-7876.96 8612.0527 -7885.4434 8602.0605 -7894.75 8594.9512 C
S-7854.75 8609 m
-7871.1279 8613.0947 -7880.8008 8593.7227 -7894.75 8589.3154 C
S-7894.75 8589 m
-7874.75 8584 -7864.75 8614 -7844.75 8609 C
S-7884.75 8589 m
-7868.3721 8584.9053 -7858.6992 8604.2773 -7844.75 8608.6846 C
S-7874.75 8589 m
-7862.54 8585.9473 -7854.0566 8595.9395 -7844.75 8603.0488 C
S-7864.75 8589 m
-7856.96 8587.0527 -7850.687 8590.415 -7844.75 8594.9512 C
S-7854.75 8589 m
-7851.1279 8588.0947 -7847.835 8588.3408 -7844.75 8589.3154 C
S-7884.75 8609 m
-7888.3721 8609.9053 -7891.665 8609.6592 -7894.75 8608.6846 C
SUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 10)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7894 8610 m
-7843.8921 8610 L
-7843.8921 8553.9756 L
-7894 8553.9756 L
-7894 8610 L
nu0 O
0.1 1 1 0 k
-7856.9014 8575.5752 m
-7858.7178 8569.0957 -7868.8247 8572.4658 Y
-7868.791 8572.5303 L
-7878.8999 8569.1611 -7880.7144 8575.6396 V
-7886.6758 8593.0068 -7881.4922 8599.7451 V
-7874.7529 8609.3369 -7870.6055 8609.3369 V
-7867.0103 8609.2705 L
-7862.8638 8609.2705 -7856.125 8599.6816 Y
-7850.9409 8592.9424 -7856.9014 8575.5752 Y
fu0 0 0 1 k
-7861.3926 8553.9756 m
-7862.1167 8555.4199 -7862.9238 8556.4756 V
-7862.4058 8556.0635 -7861.5151 8555.1924 -7861.3926 8553.9756 C
f-7875.064 8556.4854 m
-7875.8711 8555.4307 -7876.5942 8553.9863 Y
-7876.4727 8555.2021 -7875.582 8556.0732 -7875.064 8556.4854 C
fU0 0.61 0.74 0 k
-7860.5977 8578.4609 m
-7861.9038 8573.7959 -7869.1816 8576.2217 Y
-7869.1567 8576.2686 L
-7876.436 8573.8428 -7877.7417 8578.5078 V
-7882.0337 8591.0117 -7878.3018 8595.8633 V
-7873.4487 8602.7686 -7870.4634 8602.7686 V
-7867.875 8602.7227 L
-7864.8887 8602.7227 -7860.0366 8595.8174 Y
-7856.3042 8590.9639 -7860.5977 8578.4609 Y
fu1 Ap
0.73 0.43 1 0.22 k
0 R
0 0 0 1 K
-7864.6226 8581.2754 m
-7863.813 8581.2754 -7863.1558 8580.6182 -7863.1558 8579.8096 c
-7863.1558 8579 -7863.813 8578.3428 -7864.6226 8578.3428 c
-7865.4321 8578.3428 -7866.0889 8579 -7866.0889 8579.8096 c
-7866.0889 8580.6182 -7865.4321 8581.2754 -7864.6226 8581.2754 c
b-7864.3638 8592.9971 m
-7863.0806 8592.9971 -7862.0415 8592.1201 -7862.0415 8591.042 c
-7862.0415 8589.9619 -7863.0806 8589.0869 -7864.3638 8589.0869 c
-7865.645 8589.0869 -7866.6846 8589.9619 -7866.6846 8591.042 c
-7866.6846 8592.1201 -7865.645 8592.9971 -7864.3638 8592.9971 c
b-7863.834 8604.7861 m
-7862.2817 8604.7861 -7861.0239 8604.1299 -7861.0239 8603.3213 c
-7861.0239 8602.5117 -7862.2817 8601.8545 -7863.834 8601.8545 c
-7865.3862 8601.8545 -7866.645 8602.5117 -7866.645 8603.3213 c
-7866.645 8604.1299 -7865.3862 8604.7861 -7863.834 8604.7861 c
b-7859.6104 8576.5264 m
-7858.8687 8576.5264 -7858.2671 8575.8154 -7858.2671 8574.9365 c
-7858.2671 8574.0596 -7858.8687 8573.3477 -7859.6104 8573.3477 c
-7860.353 8573.3477 -7860.9546 8574.0596 -7860.9546 8574.9365 c
-7860.9546 8575.8154 -7860.353 8576.5264 -7859.6104 8576.5264 c
b-7858.0034 8598.083 m
-7858.8818 8597.7354 -7859.1494 8596.335 -7858.603 8594.9541 c
-7858.0566 8593.5752 -7856.9014 8592.7363 -7856.0234 8593.085 c
-7855.145 8593.4326 -7854.877 8594.833 -7855.4233 8596.2139 c
-7855.9702 8597.5947 -7857.125 8598.4316 -7858.0034 8598.083 c
bu-7873.0566 8581.1592 m
-7873.8662 8581.1592 -7874.5239 8580.502 -7874.5239 8579.6934 c
-7874.5239 8578.8828 -7873.8662 8578.2266 -7873.0566 8578.2266 c
-7872.248 8578.2266 -7871.5913 8578.8828 -7871.5913 8579.6934 c
-7871.5913 8580.502 -7872.248 8581.1592 -7873.0566 8581.1592 c
b-7873.3159 8592.8799 m
-7874.5991 8592.8799 -7875.6382 8592.0049 -7875.6382 8590.9248 c
-7875.6382 8589.8447 -7874.5991 8588.9697 -7873.3159 8588.9697 c
-7872.0342 8588.9697 -7870.9951 8589.8447 -7870.9951 8590.9248 c
-7870.9951 8592.0049 -7872.0342 8592.8799 -7873.3159 8592.8799 c
b-7873.8457 8604.6709 m
-7875.3975 8604.6709 -7876.6558 8604.0146 -7876.6558 8603.2041 c
-7876.6558 8602.3936 -7875.3975 8601.7383 -7873.8457 8601.7383 c
-7872.293 8601.7383 -7871.0352 8602.3936 -7871.0352 8603.2041 c
-7871.0352 8604.0146 -7872.293 8604.6709 -7873.8457 8604.6709 c
b-7878.0679 8576.4092 m
-7878.811 8576.4092 -7879.4121 8575.6982 -7879.4121 8574.8213 c
-7879.4121 8573.9443 -7878.811 8573.2334 -7878.0679 8573.2334 c
-7877.3262 8573.2334 -7876.7241 8573.9443 -7876.7241 8574.8213 c
-7876.7241 8575.6982 -7877.3262 8576.4092 -7878.0679 8576.4092 c
b-7879.6758 8597.9678 m
-7878.7983 8597.6201 -7878.5298 8596.2188 -7879.0762 8594.8379 c
-7879.6226 8593.457 -7880.7778 8592.6201 -7881.6558 8592.9678 c
-7882.5342 8593.3164 -7882.8032 8594.7178 -7882.2568 8596.0967 c
-7881.7104 8597.4775 -7880.5552 8598.3154 -7879.6758 8597.9678 c
bUU0 Ap
0 0 0 1 k
-7869.1318 8576.6553 m
-7869.1318 8609.3145 l
Fu-7853.3906 8562.5303 m
-7854.0815 8561.8369 -7857.019 8562.7021 Y
-7858.229 8562.874 -7858.0562 8565.2939 Y
-7857.019 8567.3682 -7857.7104 8567.1943 Y
-7858.2998 8567.1943 -7859.855 8567.1143 -7860.7822 8567.0635 C
-7861.1226 8565.6689 -7862.6128 8564.4756 -7864.7217 8563.7695 C
-7862.7578 8560.4775 -7864.5176 8559.7949 -7866.2935 8559.79 C
-7866.3096 8559.7021 -7866.332 8559.6162 -7866.3599 8559.5332 C
-7864.1089 8559.5791 -7863.6392 8557.2588 Y
-7863.4048 8557.0635 -7863.1606 8556.7861 -7862.9238 8556.4756 C
-7863.1416 8556.6475 -7863.2944 8556.7393 Y
-7864.2583 8556.7393 -7865.8774 8558.4941 -7866.4966 8559.207 C
-7866.9194 8558.4434 -7867.853 8557.9111 -7868.9434 8557.9111 c
-7870.0698 8557.9111 -7871.0322 8558.4795 -7871.4312 8559.2852 C
-7871.9985 8558.624 -7873.6968 8556.751 -7874.6943 8556.751 C
-7874.8462 8556.6572 -7875.064 8556.4854 V
-7874.8281 8556.7939 -7874.583 8557.0732 -7874.3481 8557.2686 C
-7873.8638 8559.6563 -7871.5254 8559.5342 V
-7871.5449 8559.5889 -7871.5674 8559.6436 -7871.5806 8559.7021 C
-7874.9238 8559.6924 -7873.937 8562.3174 -7873.2104 8563.6602 C
-7875.5918 8564.376 -7877.2646 8565.7012 -7877.5239 8567.25 C
-7878.4473 8567.2998 -7879.6729 8567.3584 -7880.1802 8567.3584 C
-7880.8726 8567.5313 -7879.835 8565.458 V
-7879.6626 8563.0391 -7880.8726 8562.8662 V
-7883.8096 8562.002 -7884.501 8562.6934 V
-7885.1919 8563.5566 -7886.0562 8562.3467 V
-7885.1919 8564.0752 -7883.291 8563.5566 V
-7880.6982 8562.8662 -7881.3906 8564.5938 V
-7881.9087 8568.0498 -7880.1802 8568.7402 V
-7878.0342 8569.8545 -7876.2822 8570.0889 V
-7875.9087 8570.4141 -7875.4639 8570.7109 -7874.958 8570.9766 C
-7877.5562 8571.0469 -7880.2246 8571.9209 -7881.0752 8574.9561 C
-7881.5151 8576.2432 -7882.0518 8578.2432 V
-7883.1025 8578.8252 -7884.3022 8580.0078 -7885.541 8582.2627 C
-7886.394 8585.4502 -7887.167 8580.7129 V
-7888.3975 8577.6494 -7889.6504 8577.5381 V
-7888.4702 8579.2871 -7888.9038 8580.416 V
-7887.2998 8584.917 -7885.6138 8583.8994 V
-7884.0986 8583.2197 -7882.688 8580.8154 V
-7883.0698 8582.4971 -7883.4326 8584.417 -7883.6743 8586.3906 C
-7884.4888 8586.3975 L
-7886.3506 8585.4795 -7886.3262 8588.959 V
-7887.1226 8592.9453 -7886.3594 8595.6826 V
-7885.647 8598.1504 -7888.1274 8596.9307 V
-7889.2842 8597.3242 -7889.9839 8596.7881 V
-7892.3882 8595.4131 -7894 8597.124 V
-7892.147 8596.8799 -7891.4482 8597.417 V
-7889.9785 8597.5615 -7889.897 8598.1787 V
-7886.9561 8598.8555 -7886.188 8598.0771 V
-7884.417 8597.2139 -7885.1304 8594.3604 V
-7885.8799 8586.4814 -7884.3198 8588.4053 V
-7884.1182 8588.4219 -7883.8784 8588.5176 V
-7884.1519 8592.4326 -7883.8018 8596.3252 -7881.9961 8598.8516 C
-7885.4536 8591.333 -7880.2974 8576.3037 Y
-7878.9609 8571.5303 -7873.127 8572.1016 -7870.145 8572.7344 C
-7870.0718 8574.1299 -7869.8374 8575.9492 -7869.1318 8576.6553 C
-7868.2134 8574.6963 -7868.2358 8573.0732 V
-7867.0762 8572.7217 -7860.2817 8570.8447 -7857.4487 8574.3369 C
-7858.4312 8571.8135 -7860.8262 8571.0186 -7863.2007 8570.9189 C
-7862.667 8570.6318 -7862.2041 8570.3047 -7861.8257 8569.9502 C
-7860.041 8569.7861 -7857.7104 8568.5771 Y
-7855.9814 8567.8857 -7856.5015 8564.4307 Y
-7857.1919 8562.7021 -7854.5991 8563.3936 Y
-7852.7002 8563.9111 -7851.835 8562.1836 Y
-7852.7002 8563.3936 -7853.3906 8562.5303 Y
f-7847.9082 8596.9521 m
-7848.6074 8597.4893 -7849.7632 8597.0938 Y
-7852.2446 8598.3135 -7851.5327 8595.8467 Y
-7850.769 8593.1104 -7851.564 8589.1221 Y
-7851.541 8585.6445 -7853.4014 8586.5596 Y
-7854.0342 8586.5557 L
-7854.3198 8584.6123 -7854.7046 8582.7549 -7855.0898 8581.1699 C
-7853.7129 8583.4199 -7852.2778 8584.0635 Y
-7850.5913 8585.082 -7848.9878 8580.5791 Y
-7849.4214 8579.4502 -7848.2417 8577.7021 Y
-7849.4937 8577.8125 -7850.7246 8580.876 Y
-7851.4976 8585.6152 -7852.3511 8582.4268 Y
-7853.5776 8580.1904 -7854.769 8579.0098 -7855.814 8578.4229 C
-7856.2026 8577.0635 -7856.4858 8576.2393 Y
-7856.7002 8575.4727 -7857.0337 8574.8486 -7857.4487 8574.3369 C
-7857.3799 8574.5127 -7857.3174 8574.6982 -7857.2632 8574.8916 C
-7851.3022 8592.2588 -7856.4858 8598.9971 V
-7863.2246 8608.5869 -7867.3721 8608.5869 V
-7870.9663 8608.6514 L
-7875.1138 8608.6514 -7881.853 8599.0615 Y
-7881.9038 8598.9961 -7881.9463 8598.9219 -7881.9961 8598.8516 C
-7881.7378 8599.4141 -7881.437 8599.9404 -7881.0752 8600.4092 C
-7874.3359 8610 -7870.189 8610 V
-7866.5942 8609.9346 L
-7862.4482 8609.9346 -7855.709 8600.3447 Y
-7853.5801 8597.5771 -7853.3306 8593.0176 -7853.7769 8588.6055 C
-7853.6553 8588.5752 -7853.5698 8588.5684 Y
-7852.0112 8586.6475 -7852.7598 8594.5244 Y
-7853.4746 8597.3789 -7851.7026 8598.2402 Y
-7850.9351 8599.0186 -7847.9946 8598.3428 Y
-7847.9136 8597.7256 -7846.4434 8597.5811 Y
-7845.7446 8597.0449 -7843.8921 8597.2881 Y
-7845.5024 8595.5771 -7847.9082 8596.9521 Y
fUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 2)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7894 8610 m
-7829.187 8610 L
-7829.187 8545.9023 L
-7894 8545.9023 L
-7894 8610 L
nu0 O
0 g
-7859.6978 8568.4297 m
-7861.6094 8545.9023 L
-7863.5215 8568.4297 L
-7862.9033 8568.3066 -7862.2642 8568.2402 -7861.6094 8568.2402 c
-7860.9551 8568.2402 -7860.3159 8568.3066 -7859.6978 8568.4297 C
f-7871.2402 8576.3975 m
-7894 8578.3301 L
-7871.1138 8580.2734 L
-7871.2856 8579.5469 -7871.3848 8578.793 -7871.3848 8578.0156 c
-7871.3848 8577.4629 -7871.3281 8576.9248 -7871.2402 8576.3975 C
f-7866.519 8569.5723 m
-7880.1626 8560.8047 L
-7870.2153 8573.377 L
-7869.3574 8571.791 -7868.0718 8570.4766 -7866.519 8569.5723 C
f-7863.481 8587.6074 m
-7861.5786 8610 L
-7859.6768 8587.5967 L
-7860.3018 8587.7227 -7860.9473 8587.791 -7861.6094 8587.791 c
-7862.25 8587.791 -7862.873 8587.7246 -7863.481 8587.6074 C
f-7851.9609 8579.5068 m
-7829.187 8577.5732 L
-7852.083 8575.6289 L
-7852.083 8575.8506 L
-7851.9258 8576.5488 -7851.834 8577.2695 -7851.834 8578.0156 c
-7851.834 8578.5234 -7851.8848 8579.0195 -7851.9609 8579.5068 C
f-7870.1138 8582.8262 m
-7880.1641 8595.5293 L
-7866.2778 8586.6055 L
-7867.8823 8585.7305 -7869.2114 8584.416 -7870.1138 8582.8262 C
f-7852.9961 8573.3945 m
-7842.875 8560.6055 L
-7856.7666 8569.5313 L
-7855.1768 8570.4414 -7853.8633 8571.7793 -7852.9961 8573.3945 C
f-7856.6895 8586.4512 m
-7842.873 8595.3281 L
-7852.9658 8582.5732 L
-7853.8198 8584.1895 -7855.1152 8585.5313 -7856.6895 8586.4512 C
f-7852.8887 8582.6133 m
-7852.3862 8581.6641 -7852.043 8580.6211 -7851.875 8579.5195 c
-7851.7993 8579.0293 -7851.748 8578.5273 -7851.748 8578.0156 c
-7851.748 8577.2637 -7851.8398 8576.5352 -7851.998 8575.8311 c
-7852.1958 8574.957 -7852.5049 8574.124 -7852.918 8573.3545 c
-7853.7954 8571.7246 -7855.1191 8570.374 -7856.7241 8569.4561 c
-7857.6294 8568.9375 -7858.6226 8568.5537 -7859.6802 8568.3457 c
-7860.3047 8568.2207 -7860.9497 8568.1523 -7861.6094 8568.1523 c
-7862.2695 8568.1523 -7862.915 8568.2207 -7863.5391 8568.3457 c
-7864.623 8568.5605 -7865.6382 8568.957 -7866.5625 8569.4961 c
-7868.1313 8570.4102 -7869.4282 8571.7363 -7870.291 8573.335 c
-7870.7969 8574.2695 -7871.145 8575.2969 -7871.3262 8576.3828 c
-7871.415 8576.916 -7871.4727 8577.459 -7871.4727 8578.0156 c
-7871.4727 8578.8008 -7871.3711 8579.5605 -7871.1978 8580.293 c
-7870.981 8581.207 -7870.6406 8582.0732 -7870.187 8582.8701 c
-7869.2793 8584.4727 -7867.939 8585.8008 -7866.3174 8586.6826 c
-7865.4487 8587.1553 -7864.5 8587.498 -7863.4961 8587.6934 c
-7862.8848 8587.8115 -7862.2554 8587.8779 -7861.6094 8587.8779 c
-7860.9414 8587.8779 -7860.29 8587.8086 -7859.6602 8587.6826 c
-7858.5786 8587.4668 -7857.5664 8587.0654 -7856.6455 8586.5273 c
-7855.0566 8585.5977 -7853.751 8584.2441 -7852.8887 8582.6133 c
fUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 3)
0 A
u1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7884.75 8611 m
-7884.75 8587 L
-7894.75 8587 L
-7894.75 8611 L
-7884.75 8611 L
nuu0 Ap
0 O
1 g
-7885.4058 8602.5361 m
-7884.9878 8601.4355 -7884.75 8600.2471 -7884.75 8599 c
-7884.75 8597.1377 -7885.2681 8595.4004 -7886.1543 8593.9072 c
-7887.897 8590.9736 -7891.0898 8589 -7894.75 8589 C
-7894.75 8609 L
-7894.4297 8609 -7894.1143 8608.9814 -7893.8018 8608.9521 c
-7891.9121 8608.7754 -7890.1807 8608.0645 -7888.7441 8606.9824 c
-7887.2471 8605.8545 -7886.0801 8604.3184 -7885.4058 8602.5361 c
f0 R
0 G
1 J 1 j 0.5 w-7894.75 8589.3174 m
-7891.7207 8590.2744 -7888.8926 8591.9326 -7886.1543 8593.9072 C
S-7894.75 8594.9512 m
-7891.5991 8597.3564 -7888.543 8600.0869 -7885.4058 8602.5361 C
S-7888.7441 8606.9824 m
-7890.8105 8605.8916 -7892.7993 8604.5342 -7894.75 8603.043 C
S-7893.8018 8608.9521 m
-7894.1191 8608.8682 -7894.4375 8608.7852 -7894.75 8608.6865 C
S-7888.7441 8606.9824 m
-7890.1807 8608.0645 -7891.9121 8608.7744 -7893.8018 8608.9521 C
S-7885.4058 8602.5361 m
-7884.9878 8601.4355 -7884.75 8600.2471 -7884.75 8599 c
-7884.75 8597.1377 -7885.2681 8595.4004 -7886.1543 8593.9072 C
S-7894.75 8609 m
-7894.4297 8609 -7894.1143 8608.9814 -7893.8018 8608.9521 C
S-7888.7441 8606.9824 m
-7887.2471 8605.8545 -7886.0801 8604.3184 -7885.4058 8602.5361 C
S-7886.1543 8593.9072 m
-7887.8975 8590.9736 -7891.0898 8589 -7894.75 8589 C
SUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 34)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7894.0254 8610.0264 m
-7838.0542 8610.0264 L
-7838.0542 8548.5342 L
-7894.0254 8548.5342 L
-7894.0254 8610.0264 L
nuu0 O
0.0745 0.9 0.9019 0.18 k
0 R
0 0 0 1 K
1 J 1 j 0.0518 w-7867.5991 8586.7217 m
-7867.3594 8597.5215 -7872.8794 8607.8398 v
-7872.4009 8610 -7870.959 8610 v
-7871.2002 8606.6406 -7870.2393 8606.1611 v
-7865.9199 8594.1602 -7866.6382 8586.2402 v
-7867.5991 8586.7217 l
b-7867.5991 8586.7217 m
-7869.2793 8592 -7881.0391 8593.2012 v
-7885.3594 8593.6807 -7885.5991 8595.1211 v
-7879.1206 8585.5195 -7878.1602 8585.7607 v
-7891.3594 8580.001 -7894 8574.7197 v
-7888.959 8577.6006 -7885.5991 8575.4404 v
-7877.6802 8575.2012 -7872.6406 8577.3613 v
-7868.8008 8579.2813 -7876.7202 8563.2012 v
-7872.8794 8574.9609 -7869.2793 8548.5605 v
-7868.3198 8553.8408 -7866.8799 8555.2813 v
-7860.8799 8562.9609 -7861.8398 8565.1211 v
-7862.3198 8568.9609 -7857.7598 8562.7207 v
-7858 8572.3213 -7860.4009 8575.6807 v
-7862.5591 8579.2813 -7856.5591 8577.1211 v
-7850.5591 8575.2012 -7845.2793 8576.8809 v
-7839.7598 8578.3203 -7838.0801 8575.4404 v
-7849.8398 8587.9209 -7855.5991 8587.6807 v
-7853.9194 8591.2813 l
-7851.519 8596.0811 -7852 8597.2813 v
-7867.2681 8587.8828 -7867.5991 8586.7217 v
b-7867.5991 8586.7217 m
-7864.959 8568.2402 -7867.5991 8560.5605 v
-7869.998 8550.001 -7869.2793 8548.5605 v
S-7866.1602 8575.4404 m
-7860.1602 8570.6406 -7858.959 8565.3604 v
S-7866.1602 8574.7197 m
-7875.0391 8567.041 -7876.7202 8563.2012 v
S-7838.0801 8575.4404 m
-7839.2793 8577.6006 -7867.3594 8585.7607 y
-7872.4009 8580.2422 -7883.9199 8577.8408 v
-7891.5986 8576.8809 -7894 8574.7197 v
S-7884.6382 8593.6807 m
-7873.1191 8584.5615 -7867.3594 8585.7607 y
-7853.1992 8592 -7852 8597.2813 v
SUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 36)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7893.8496 8609.9961 m
-7843.96 8609.9961 L
-7843.96 8558.9258 L
-7893.8496 8558.9258 L
-7893.8496 8609.9961 L
nu0 O
0.025 0.1 0.475 0 k
-7872.1504 8577.9043 m
-7874.4766 8576.8125 -7876.6914 8576.4434 -7878.373 8576.9238 c
-7879.0518 8577.1172 -7879.645 8577.4473 -7880.123 8577.9238 c
-7880.6006 8578.4023 -7880.9297 8578.9951 -7881.123 8579.6729 c
-7882.0088 8582.7715 -7880.0103 8587.6777 -7875.9233 8591.7666 c
-7871.834 8595.8535 -7866.9297 8597.8516 -7863.8286 8596.9668 c
-7863.1519 8596.7715 -7862.5586 8596.4424 -7862.0806 8595.9658 c
-7861.603 8595.4883 -7861.2754 8594.8955 -7861.082 8594.2168 c
-7860.5176 8592.2461 -7861.1226 8589.5449 -7862.6855 8586.7891 c
-7863.582 8585.21 -7864.791 8583.6133 -7866.2793 8582.123 c
-7868.1504 8580.2539 -7870.1914 8578.8242 -7872.1504 8577.9043 c
fu0.0035 0.014 0.0665 0 k
-7871.2183 8576.9727 m
-7873.8306 8576.0215 -7876.3975 8575.9688 -7878.373 8576.9238 C
-7876.6914 8576.4434 -7874.4766 8576.8125 -7872.1504 8577.9043 c
-7871.6191 8578.1543 -7871.0806 8578.4434 -7870.543 8578.7676 C
-7868.8984 8578.0537 L
-7869.667 8577.6172 -7870.4434 8577.2539 -7871.2183 8576.9727 c
f0.015 0.06 0.285 0 k
-7868.8984 8578.0537 m
-7870.543 8578.7676 L
-7869.0962 8579.6348 -7867.6426 8580.7607 -7866.2793 8582.123 c
-7866.1538 8582.25 -7866.0327 8582.3779 -7865.9102 8582.5059 C
-7865.2153 8580.8633 L
-7866.3706 8579.7236 -7867.6191 8578.7813 -7868.8984 8578.0537 C
fUu0.039 0.156 0.741 0 k
-7859.687 8565.4043 m
-7859.9746 8565.6914 -7871.2183 8576.9727 Y
-7870.4434 8577.2539 -7869.667 8577.6172 -7868.8984 8578.0537 C
-7855.4146 8564.5703 L
-7857.061 8564.0996 -7858.6406 8564.3555 -7859.687 8565.4043 c
f0.025 0.1 0.475 0 k
-7855.4146 8564.5703 m
-7868.8984 8578.0537 L
-7867.584 8578.8027 -7866.2969 8579.7754 -7865.1143 8580.957 c
-7865.084 8580.9863 -7865.0586 8581.0156 -7865.0278 8581.0449 C
-7851.3408 8567.3574 L
-7851.5264 8567.1328 -7851.7202 8566.9141 -7851.9302 8566.7012 c
-7853.0103 8565.623 -7854.2305 8564.9082 -7855.4146 8564.5703 C
fUu0.0115 0.046 0.2185 0 k
-7845.9346 8574.3926 m
-7843.5337 8571.9893 -7843.335 8568.0898 -7845.1382 8564.6973 C
-7846.2954 8565.1182 L
-7844.0938 8568.4961 -7843.8398 8572.2949 -7845.9346 8574.3926 c
f0.015 0.06 0.285 0 k
-7853.5337 8559.5957 m
-7852.582 8558.9258 L
-7855.2046 8558.3516 -7857.8306 8558.9141 -7859.6206 8560.7061 c
-7858.1719 8559.2578 -7855.9082 8558.9307 -7853.5337 8559.5957 C
f0.0295 0.118 0.5605 0 k
-7853.5337 8559.5957 m
-7855.9082 8558.9307 -7858.1719 8559.2578 -7859.6206 8560.7061 c
-7861.019 8562.1055 -7861.3706 8564.2637 -7860.7954 8566.5469 C
-7858.8672 8563.5449 -7855.4082 8564.5537 V
-7853.585 8559.6309 L
-7853.5337 8559.5957 L
f*u
1 D
0.048 0.192 0.912 0 k
-7845.9346 8574.3926 m
-7847.2817 8575.7383 -7849.332 8576.1133 -7851.5234 8575.627 C
-7861.6714 8585.7734 L
-7861.7695 8585.5684 -7861.7695 8585.5684 -7861.6714 8585.7734 c
-7860.2246 8588.8145 -7859.9702 8591.916 -7861.082 8594.2168 C
-7860.5176 8592.2461 -7861.1226 8589.5449 -7862.6855 8586.7891 c
-7863.5054 8585.3438 -7864.5918 8583.8848 -7865.9102 8582.5059 C
-7865.2153 8580.8633 L
-7865.1816 8580.8945 -7865.1465 8580.9238 -7865.1143 8580.957 c
-7865.084 8580.9883 -7865.0566 8581.0176 -7865.0273 8581.0469 c
-7865.0278 8581.0469 -7865.0278 8581.0469 -7865.0278 8581.0449 C
-7851.3408 8567.3574 L
-7846.3262 8565.1289 L
-7846.2954 8565.1182 L
-7844.0938 8568.4961 -7843.8398 8572.2949 -7845.9346 8574.3926 c
f*U
0 D
0.0215 0.086 0.4085 0 k
-7852.582 8558.9258 m
-7853.5337 8559.5957 L
-7851.6846 8560.1113 -7849.7656 8561.2285 -7848.1138 8562.8828 c
-7847.4063 8563.5889 -7846.7998 8564.3418 -7846.2954 8565.1182 C
-7845.1382 8564.6973 L
-7845.6553 8563.7246 -7846.3374 8562.793 -7847.1802 8561.9512 c
-7848.7695 8560.3594 -7850.6758 8559.3428 -7852.582 8558.9258 C
f0.0205 0.082 0.3895 0 k
-7846.2954 8565.1182 m
-7846.7998 8564.3418 -7847.4063 8563.5889 -7848.1138 8562.8828 c
-7849.7656 8561.2285 -7851.6846 8560.1113 -7853.5337 8559.5957 C
-7853.585 8559.6309 L
-7855.4082 8564.5537 L
-7854.2114 8564.9219 -7852.9878 8565.6436 -7851.9302 8566.7012 c
-7851.7202 8566.9141 -7851.5264 8567.1328 -7851.3408 8567.3574 C
-7846.3262 8565.1289 L
-7846.2954 8565.1182 L
fUu0.445 0.356 0.267 0 k
-7893.8496 8609.9961 m
-7871.957 8586.9688 L
-7872.2007 8586.6494 -7872.5752 8586.6133 -7872.8887 8586.6592 C
-7877.1802 8591.2891 -7888.3145 8603.4561 -7892.7266 8608.2793 C
-7893.5649 8609.3516 -7894 8609.9932 -7893.8496 8609.9961 C
f0.15 0.12 0.09 0 k
-7893.834 8609.9961 m
-7892.6606 8609.7031 -7871.6934 8588.0029 Y
-7871.6934 8587.502 -7871.7993 8587.1758 -7871.957 8586.9688 C
-7893.8496 8609.9961 L
-7893.8442 8609.9961 -7893.8418 8610 -7893.834 8609.9961 c
f0.2 0.16 0.12 0 k
-7892.7266 8608.2793 m
-7888.3145 8603.4561 -7877.1802 8591.2891 -7872.8887 8586.6592 C
-7873.2002 8586.7041 -7873.4526 8586.8301 Y
-7874.603 8587.1328 -7888.5742 8602.9619 -7892.7266 8608.2793 C
fUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 37)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7892.9502 8609.2324 m
-7843.0391 8609.2324 L
-7843.0391 8545.1152 L
-7892.9502 8545.1152 L
-7892.9502 8609.2324 L
nu0 O
0 0 0 1 k
0 R
0 0 0 1 K
0 w-7843.2358 8545.1152 m
-7843.6064 8545.248 -7843.9858 8545.2832 -7844.3833 8545.2031 c
-7844.4863 8545.168 l
-7844.5254 8545.1602 -7844.5703 8545.1787 -7844.6025 8545.1992 c
-7844.9434 8545.3926 l
-7848.7129 8547.2959 -7852.0962 8549.8965 -7854.5 8553.4473 c
-7855.9634 8555.5918 -7857.123 8557.8789 -7858.7993 8559.8564 c
-7859.1729 8560.209 -7859.1758 8560.7725 -7858.834 8561.1309 c
-7858.4951 8561.501 -7857.918 8561.5078 -7857.561 8561.165 c
-7857.4038 8561.21 l
-7857.2642 8561.1289 -7857.0742 8561.0703 -7857.0234 8560.957 c
-7855.853 8558.2031 -7855.1895 8555.5137 -7853.4336 8553.1387 c
-7851.1719 8550.0947 -7848.1777 8547.9941 -7845.0298 8546.0234 c
-7844.3672 8545.6055 L
-7844.4966 8545.6348 L
-7843.7695 8545.6426 l
-7843.791 8545.6113 -7843.8008 8545.5957 -7843.8223 8545.5645 C
-7843.6064 8545.5234 -7843.377 8545.4746 -7843.1626 8545.4336 c
-7843.0762 8545.4238 -7843.0186 8545.3389 -7843.0391 8545.2383 c
-7843.0503 8545.1523 -7843.1382 8545.1084 -7843.2358 8545.1152 c
-7843.2358 8545.1152 l
b-7859.2222 8558.9951 m
-7859.5742 8558.8066 -7859.9658 8558.6719 -7860.248 8558.3887 c
-7866.4521 8552.1719 -7876.6802 8551.2734 -7884.0488 8557.6855 C
-7884.1582 8557.7813 -7884.1582 8557.957 -7884.063 8558.0645 C
-7881.0527 8556.9434 -7872.8838 8558.375 -7869.3223 8561.4121 C
-7869.2534 8561.4668 -7869.1465 8561.4531 -7869.1055 8561.3711 C
-7869.0503 8561.3047 -7869.0664 8561.1953 -7869.1328 8561.1563 C
-7872.5625 8558.0859 -7877.0674 8556.29 -7881.6729 8556.748 C
-7878.8535 8555.1855 -7875.6313 8554.4941 -7872.3984 8554.6885 c
-7867.7144 8554.9717 -7863.4634 8557.1191 -7859.3711 8559.2793 c
-7859.291 8559.3193 -7859.1978 8559.293 -7859.1553 8559.2109 C
-7859.1016 8559.1309 -7859.1426 8559.0352 -7859.2222 8558.9951 c
b-7868.647 8560.3359 m
-7870.2266 8564.3613 -7872.3911 8568.3203 -7875.8018 8571.0762 c
-7875.9648 8571.2119 -7875.9946 8571.4492 -7875.8711 8571.6055 c
-7875.7344 8571.7676 -7875.5049 8571.7793 -7875.3481 8571.6563 c
-7871.123 8569.5967 -7868.1904 8565.1309 -7868.1626 8560.4014 c
-7868.1626 8560.4014 l
-7868.1328 8560.2676 -7868.2354 8560.1348 -7868.3633 8560.1221 c
-7868.5039 8560.1055 -7868.6318 8560.1973 -7868.647 8560.3359 c
-7868.647 8560.3359 l
b-7862.9414 8565.0176 m
-7863.042 8565.1816 -7863.1152 8565.3838 -7863.2617 8565.4824 c
-7866.0806 8567.3906 -7868.9785 8568.6309 -7871.8848 8570.1328 c
-7872.0503 8570.209 -7872.1118 8570.418 -7872.0313 8570.5703 c
-7871.9512 8570.7227 -7871.7559 8570.7793 -7871.5898 8570.7041 c
-7868.439 8569.3232 -7864.313 8568.5 -7862.6729 8565.1797 c
-7862.6289 8565.1113 -7862.6455 8565.0146 -7862.7266 8564.9648 c
-7862.7959 8564.9199 -7862.897 8564.9492 -7862.9414 8565.0176 c
-7862.9414 8565.0176 l
b-7862.6602 8565.918 m
-7862.4438 8566.4297 -7862.1431 8566.8896 -7862.0503 8567.4355 c
-7861.2183 8572.2773 -7861.1152 8577.042 -7862.248 8581.6875 c
-7862.248 8581.6875 l
-7862.3418 8581.9531 -7862.2114 8582.2441 -7861.9438 8582.3389 c
-7861.6777 8582.4336 -7861.3882 8582.3125 -7861.2935 8582.0479 c
-7859.293 8576.8115 -7859.897 8570.7373 -7862.3711 8565.7832 c
-7862.4063 8565.7002 -7862.498 8565.6689 -7862.582 8565.6914 c
-7862.6641 8565.7275 -7862.6978 8565.835 -7862.6602 8565.918 c
-7862.6602 8565.918 l
b-7861.5352 8581.5938 m
-7858.8984 8579.2275 -7856.6816 8576.252 -7855.853 8572.7363 c
-7855.853 8572.7363 l
-7855.7246 8572.1816 -7856.0742 8571.623 -7856.6416 8571.4902 c
-7857.1992 8571.375 -7857.7578 8571.7246 -7857.8862 8572.2793 c
-7858.5649 8575.5313 -7859.8711 8578.6729 -7861.7954 8581.3867 c
-7861.7954 8581.3867 l
-7861.8462 8581.4551 -7861.834 8581.5576 -7861.7695 8581.6201 c
-7861.6992 8581.6699 -7861.5977 8581.6582 -7861.5352 8581.5938 c
-7861.5352 8581.5938 l
b-7846.3711 8574.1826 m
-7847.7114 8569.8301 -7850.2598 8566.0693 -7853.689 8563.1533 C
-7853.729 8563.0723 -7853.8242 8563.0322 -7853.9038 8563.0859 C
-7853.9863 8563.127 -7854.0122 8563.2207 -7853.9722 8563.3018 C
-7853.957 8563.7891 -7853.7144 8564.2334 -7853.4458 8564.5313 c
-7848.4063 8570.1621 -7844.9902 8578.7197 -7847.3433 8585.9551 C
-7847.0762 8580.4512 -7848.7241 8574.3008 -7852.1362 8569.6738 c
-7853.1606 8568.2695 -7854.7422 8568.1211 -7856.3081 8568.2031 C
-7856.4023 8568.1895 -7856.4834 8568.2432 -7856.4961 8568.3369 c
-7856.5098 8568.4189 -7856.4551 8568.5137 -7856.3623 8568.5254 C
-7853.1479 8569.7695 -7851.4878 8573.2246 -7850.084 8576.1943 c
-7848.415 8579.7441 -7847.7017 8583.6387 -7848.0054 8587.5 C
-7848.0454 8587.6777 -7848.1138 8589.3975 -7847.9775 8589.4102 C
-7847.8306 8589.4395 -7847.709 8589.3438 -7847.6802 8589.1943 C
-7847.645 8589.0449 -7844.6426 8579.7988 -7846.3711 8574.1826 c
b-7854.4863 8561.4912 m
-7853.3945 8557.6211 -7851.1094 8554.251 -7848.4824 8551.2383 c
-7848.3306 8551.1045 -7848.3145 8550.8867 -7848.4502 8550.7354 c
-7848.5752 8550.6006 -7848.8047 8550.582 -7848.957 8550.7178 c
-7852.3306 8553.332 -7853.4487 8557.541 -7854.7954 8561.375 c
-7854.7954 8561.375 l
-7854.8262 8561.4648 -7854.7754 8561.5586 -7854.6982 8561.5869 c
-7854.6094 8561.6191 -7854.5166 8561.5684 -7854.4863 8561.4912 c
-7854.4863 8561.4912 l
b-7848.5313 8586.1094 m
-7848.5991 8586.0566 -7848.707 8586.083 -7848.748 8586.1504 C
-7848.9634 8586.4746 -7850.6914 8588.5195 -7851.3926 8589.1406 c
-7856.1719 8593.3945 -7859.5137 8597.9609 -7867.5391 8601.7227 c
-7874.4512 8604.9639 -7877.1113 8607.5957 -7884.3862 8605.8262 c
-7887.687 8605.0293 -7889.0313 8604.5313 -7890.4351 8599.4551 C
-7891.9473 8593.2988 -7890.8672 8595.7832 -7891.084 8588.4385 c
-7891.2222 8583.6973 -7894 8572.4551 -7881.5254 8558.2598 C
-7881.4199 8558.1484 -7881.4336 8557.9961 -7881.5337 8557.9072 C
-7881.6328 8557.8027 -7881.7959 8557.8164 -7881.8862 8557.916 C
-7887.5786 8562.7168 -7891.0234 8569.6582 -7892.3145 8576.9424 c
-7893.2871 8582.4668 -7892.9199 8587.25 -7892.666 8593.6367 c
-7892.5688 8596.0938 -7893.6855 8603.0723 -7888.9102 8607.0625 c
-7885.3926 8610 -7880.3911 8609.5469 -7876.3545 8608.1563 c
-7870.6992 8606.2119 -7865.9727 8603.1465 -7860.8711 8599.6094 c
-7857.2656 8597.125 -7849.2881 8587.2852 -7848.4785 8586.3262 C
-7848.4351 8586.2588 -7848.4502 8586.1504 -7848.5313 8586.1094 C
b-7883.0503 8573.3057 m
-7882.168 8572.5029 -7881.7017 8573.8457 -7881.4297 8574.6016 c
-7881.1626 8575.3574 -7880.189 8575.25 -7880.5127 8575.5732 c
-7880.8369 8575.8975 -7880.8369 8575.9521 -7881.3232 8575.5195 c
-7881.8086 8575.0879 -7881.8086 8575.7363 -7882.5649 8575.25 c
-7883.3198 8574.7627 -7883.645 8573.8457 -7883.0503 8573.3057 c
b-7875.6519 8577.9492 m
-7875.3657 8577.5918 -7874.6802 8577.5723 -7874.4648 8577.8945 c
-7874.25 8578.2197 -7873.3306 8578.2734 -7873.4937 8578.5967 c
-7873.6543 8578.9219 -7873.6016 8579.1387 -7874.0874 8578.9219 c
-7874.5737 8578.7051 -7874.4121 8579.2998 -7874.897 8579.084 c
-7875.3833 8578.8672 -7875.8687 8578.2197 -7875.6519 8577.9492 c
b-7867.6074 8583.0791 m
-7867.1206 8582.7559 -7865.8794 8583.5117 -7866.4727 8583.5117 c
-7867.0674 8583.5117 -7866.311 8584.2676 -7866.8521 8584.4834 c
-7867.3906 8584.6992 -7867.2832 8584.4297 -7867.6074 8584.6445 c
-7867.9297 8584.8613 -7868.3633 8585.2393 -7868.5239 8584.4297 c
-7868.6855 8583.6191 -7868.3633 8583.6191 -7867.9849 8583.3496 c
-7867.6074 8583.0791 -7867.6074 8583.0791 y
b-7882.2402 8583.3496 m
-7881.1074 8583.2422 -7881.8633 8583.998 -7881.269 8584.4834 c
-7880.6738 8584.9697 -7879.918 8585.6172 -7880.729 8585.4004 c
-7881.5391 8585.1855 -7882.9961 8585.6719 -7882.9434 8584.5381 c
-7882.8887 8583.4033 -7882.6328 8583.3867 -7882.2402 8583.3496 c
b-7876.5703 8591.6113 m
-7876.1016 8591.3438 -7876.6802 8591.7197 -7876.0303 8591.6113 c
-7875.3833 8591.5039 -7874.7886 8591.6113 -7875.2207 8591.8281 c
-7875.6519 8592.0439 -7876.3008 8592.1523 -7876.4634 8591.9893 c
-7876.625 8591.8281 -7876.9473 8591.8281 -7876.5703 8591.6113 c
b-7867.0674 8591.1797 m
-7867.4785 8590.1797 -7866.0962 8590.4238 -7865.4473 8590.7461 c
-7864.7998 8591.0723 -7863.8262 8590.4775 -7864.4209 8590.9102 c
-7865.0137 8591.3418 -7864.7998 8590.9102 -7865.3926 8591.2334 c
-7865.9873 8591.5566 -7866.6895 8592.0977 -7867.0674 8591.1797 c
b-7882.6738 8597.0664 m
-7882.7222 8596.0752 -7881.8086 8596.957 -7881.269 8597.0117 c
-7880.729 8597.0664 -7880.0801 8597.0664 -7880.2432 8597.2813 c
-7880.4038 8597.498 -7880.459 8597.498 -7881.1626 8597.7129 c
-7881.8633 8597.9297 -7882.6191 8598.1445 -7882.6738 8597.0664 c
b-7883.1582 8591.6113 m
-7884.0664 8591.9746 -7884.293 8591.8809 -7884.5625 8592.2051 c
-7884.834 8592.5293 -7885.1558 8593.2314 -7885.5352 8592.0977 c
-7885.9121 8590.9629 -7885.4282 8589.7764 -7885.0479 8589.9375 c
-7884.6714 8590.0996 -7884.293 8590.7461 -7883.8618 8590.9629 c
-7883.4297 8591.1797 -7882.6191 8591.3945 -7883.1582 8591.6113 c
bUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 41)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7894 8610 m
-7813 8610 L
-7813 8505 L
-7894 8505 L
-7894 8610 L
nuuu0 O
0 0 0 1 k
-7875.8057 8522.4258 m
-7876.0742 8520.6621 -7877.1602 8519.291 -7878.5239 8519.3965 c
-7879.8862 8519.502 -7880.707 8521.0234 -7880.7432 8522.8066 c
-7880.748 8523.0693 -7880.6743 8524.2441 -7880.6304 8524.4775 C
-7880.6382 8524.582 -7880.6191 8524.6738 -7880.6104 8524.7803 c
-7880.5142 8526.0254 -7879.3574 8527.3604 -7877.9414 8527.25 c
-7876.5249 8527.1406 -7875.4897 8525.8613 -7875.6367 8524.4727 c
-7875.644 8524.4072 -7875.6958 8523.626 -7875.707 8523.5625 C
-7875.6816 8523.2852 -7875.7598 8522.7256 -7875.8057 8522.4258 c
f-7886.2646 8531.7334 m
-7886.9946 8539.916 -7881.5015 8539.1191 v
-7878.3682 8538.0186 -7879.4414 8535.1211 v
-7879.6426 8533.752 -7881.7847 8532.498 v
-7882.146 8532.25 -7882.7632 8531.1016 v
-7883.1294 8529.5977 -7884.5186 8529.2979 v
-7886.0762 8529.251 -7886.2646 8531.7334 v
f-7860.7646 8540.4971 m
F-7860.0762 8538.3408 m
-7860.7847 8537.1934 -7863.8848 8537.6279 Y
-7864.811 8537.6885 -7865.3799 8537.1113 Y
-7867.8394 8533.0918 -7871.0386 8533.8857 -7871.4082 8533.9932 C
-7871.4097 8533.9863 L
-7874.999 8534.6045 -7875.2666 8539.6035 V
-7875.4912 8540.3828 -7876.335 8540.7695 V
-7879.2695 8541.8613 -7879.3481 8543.208 V
-7879.8999 8545.1152 -7877.6006 8545.7422 V
-7875.6792 8546.2568 -7873.7886 8543.8945 V
-7872.6113 8542.6797 -7869.5762 8541.9395 V
-7869.5728 8541.9531 L
-7866.3594 8541.0459 -7864.6392 8541.5889 Y
-7861.8521 8542.7676 -7860.4063 8541.4014 Y
-7858.6826 8539.7559 -7860.0762 8538.3408 Y
f-7873.9834 8521.8789 m
-7874.5854 8520.2002 -7874.2822 8518.4775 -7873.0327 8517.9229 c
-7871.7842 8517.3672 -7870.3384 8518.3164 -7869.4585 8519.8672 c
-7869.3286 8520.0957 -7868.8359 8521.165 -7868.7632 8521.3906 C
-7868.7065 8521.4785 -7868.6792 8521.5684 -7868.6362 8521.667 c
-7868.1289 8522.8086 -7868.5122 8524.5303 -7869.8105 8525.1074 c
-7871.1089 8525.6855 -7872.6279 8525.0527 -7873.1582 8523.7617 c
-7873.1831 8523.7002 -7873.5078 8522.9883 -7873.5298 8522.9268 C
-7873.6831 8522.6963 -7873.8809 8522.166 -7873.9834 8521.8789 c
f-7859.7129 8524.9316 m
-7855.1802 8531.7822 -7860.3911 8533.6943 v
-7863.6714 8534.2168 -7864.103 8531.1572 v
-7864.5786 8529.8564 -7863.29 8527.7354 v
-7863.0903 8527.3447 -7863.0938 8526.04 v
-7863.4858 8524.5449 -7862.4082 8523.6182 v
-7861.0591 8522.8359 -7859.7129 8524.9316 v
fUu-7834.7358 8574.1074 m
-7834.3687 8572.3623 -7834.9048 8570.6963 -7836.2183 8570.3164 c
-7837.5322 8569.9375 -7838.8345 8571.0752 -7839.4937 8572.7324 c
-7839.5903 8572.9775 -7839.9326 8574.1025 -7839.9746 8574.3369 C
-7840.0176 8574.4326 -7840.0322 8574.5244 -7840.0625 8574.6279 c
-7840.4087 8575.8271 -7839.7935 8577.4805 -7838.4282 8577.875 c
-7837.063 8578.2695 -7835.645 8577.4365 -7835.2969 8576.085 c
-7835.2793 8576.0205 -7835.0552 8575.2705 -7835.0425 8575.207 C
-7834.9214 8574.9551 -7834.7983 8574.4053 -7834.7358 8574.1074 c
f-7848.2705 8578.6172 m
-7851.8242 8586.0244 -7846.3999 8587.2061 v
-7843.0801 8587.2754 -7843.0688 8584.1846 v
-7842.7778 8582.8311 -7844.3433 8580.9072 v
-7844.5942 8580.5459 -7844.7695 8579.2539 v
-7844.5854 8577.7188 -7845.7793 8576.9492 v
-7847.2222 8576.3594 -7848.2705 8578.6172 v
f-7827.4648 8595.7695 m
F-7826.063 8593.9912 m
-7826.3247 8592.6689 -7829.3799 8591.9883 Y
-7830.27 8591.7197 -7830.5986 8590.9795 Y
-7831.4922 8586.3535 -7834.7666 8585.9746 -7835.1494 8585.9453 C
-7835.1494 8585.9395 L
-7838.7271 8585.2588 -7840.731 8589.8467 V
-7841.2153 8590.4961 -7842.1416 8590.5625 V
-7845.272 8590.5557 -7845.8169 8591.7891 V
-7847.0039 8593.3809 -7845.0713 8594.7764 V
-7843.4526 8595.9316 -7840.853 8594.3818 V
-7839.3242 8593.6582 -7836.2222 8594.0293 V
-7836.2231 8594.042 L
-7832.896 8594.3213 -7831.4766 8595.4326 Y
-7829.2793 8597.5146 -7827.4463 8596.7432 Y
-7825.2554 8595.8057 -7826.063 8593.9912 Y
f-7832.8374 8574.2354 m
-7832.813 8572.4512 -7831.9258 8570.9453 -7830.5601 8570.8633 c
-7829.1943 8570.7803 -7828.1743 8572.1768 -7827.895 8573.9385 c
-7827.854 8574.1973 -7827.7666 8575.3711 -7827.7778 8575.6094 C
-7827.7559 8575.7109 -7827.7617 8575.8037 -7827.7559 8575.9121 c
-7827.6807 8577.1592 -7828.644 8578.6367 -7830.0625 8578.7217 c
-7831.4814 8578.8066 -7832.6826 8577.6826 -7832.7246 8576.2871 c
-7832.7271 8576.2217 -7832.7822 8575.4404 -7832.7798 8575.375 C
-7832.8433 8575.1045 -7832.8423 8574.54 -7832.8374 8574.2354 c
f-7821.0186 8581.5625 m
-7819.1777 8589.5684 -7824.7271 8589.5303 v
-7827.9834 8588.8691 -7827.3154 8585.8516 v
-7827.3032 8584.4668 -7825.353 8582.9326 v
-7825.0278 8582.6377 -7824.5742 8581.415 v
-7824.417 8579.876 -7823.083 8579.3877 v
-7821.5454 8579.1279 -7821.0186 8581.5625 v
fUU1 Ap
-7894 8610 m
-7894 8505 L
-7813 8505 L
-7813 8610 L
-7894 8610 L
nUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 42)
0 A
u0 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7867.4609 8583.085 m
-7895 8583.085 L
-7895 8610.624 L
-7867.4609 8610.624 L
-7867.4609 8583.085 L
n0 O
0 0.55 1 0.12 k
-7881.7598 8601.3623 m
-7881.7598 8611 L
-7880.6343 8611 L
-7880.6343 8601.3623 L
-7881.7598 8601.3623 L
f0 0.55 1 0.3 k
-7885.4233 8596.876 m
-7884.3096 8595.1553 -7880.8809 8593.457 -7876.4966 8593.457 c
-7872.1152 8593.457 -7868.6138 8595.1064 -7867.5718 8596.874 C
-7867.5718 8596.874 L
-7868.6138 8598.6006 -7872.1152 8600.2979 -7876.4966 8600.2979 c
-7880.875 8600.2979 -7884.3242 8598.5615 -7885.4233 8596.876 C
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 45)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7895 8567.918 m
-7895 8611 L
-7808.2217 8611 L
-7808.2217 8567.918 L
-7895 8567.918 L
nuu0 O
0 0 0 1 k
-7835.2217 8597.2363 m
-7835.2217 8605.0742 L
-7823.2217 8598.1445 L
-7811.2217 8591.2168 L
-7823.2217 8584.2891 L
-7835.2217 8577.3613 L
-7835.2217 8585.4824 L
-7893.9351 8571.7168 L
-7880.9878 8590.8027 L
-7895 8611 L
-7835.2217 8597.2363 L
f0 1 1 0.1 k
0 R
0 0 0 1 K
-7833.2217 8594.2363 m
-7833.2217 8602.0742 L
-7821.2217 8595.1445 L
-7809.2217 8588.2168 L
-7821.2217 8581.2891 L
-7833.2217 8574.3613 L
-7833.2217 8582.4824 L
-7891.9351 8568.7168 L
-7877.2754 8588.3594 L
-7891.9351 8608 L
-7833.2217 8594.2363 L
bUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 5)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7736.3994 8611 m
-7736.3994 8597.4199 L
-7895 8597.4199 L
-7895 8611 L
-7736.3994 8611 L
nuu0 O
0.285 0.228 0.171 0 k
-7751.0786 8609.4844 m
-7751.043 8610.6895 L
-7737.5103 8611.5176 -7736.8418 8610.2822 v
-7736.7441 8610.1016 -7736.647 8609.7148 -7736.561 8609.1934 C
-7738.584 8609.8242 -7748.291 8609.5713 -7751.0786 8609.4844 C
f0.44 0.352 0.264 0 k
-7751.4063 8598.0234 m
-7751.3711 8599.2676 L
-7748.4912 8599.0488 -7738.1914 8598.3164 -7736.543 8598.8652 C
-7736.7031 8598.2188 -7736.9199 8597.7646 -7737.2046 8597.6152 c
-7738.8306 8596.7656 -7751.4063 8598.0234 Y
f0.145 0.116 0.087 0 k
-7751.3711 8599.2676 m
-7751.0786 8609.4844 L
-7748.291 8609.5713 -7738.584 8609.8242 -7736.561 8609.1934 C
-7736.1519 8606.7773 -7735.9258 8601.3604 -7736.543 8598.8652 C
-7738.1914 8598.3164 -7748.4912 8599.0488 -7751.3711 8599.2676 C
fUu0.155 0.124 0.093 0 k
-7776.9375 8603.2734 m
-7775.897 8603.6563 L
-7757.0728 8599.1465 L
-7757.481 8598.3145 L
-7776.3633 8600.7246 L
-7777.252 8601.0059 L
-7777.6504 8600.8936 -7778.1934 8600.8242 V
-7777.6094 8601.2373 -7777.1426 8602.1406 -7776.9375 8603.2734 C
fu0.085 0.068 0.051 0 k
-7781.7993 8607.666 m
-7782.5977 8607.7217 -7779.749 8607.6641 Y
-7780.3481 8607.0176 -7780.771 8605.8203 -7780.8105 8604.4375 c
-7780.8169 8604.2246 -7780.8105 8604.0176 -7780.7993 8603.8135 C
-7781.041 8603.707 -7781.0918 8603.7734 -7781.6289 8603.5645 C
-7781 8607.6113 -7781.7993 8607.666 v
f0.305 0.244 0.183 0 k
-7780.3442 8600.8672 m
-7780.5527 8600.8105 -7780.4937 8602.9307 Y
-7779.4785 8603.7588 L
-7777.8359 8602.9434 L
-7776.9375 8603.2734 L
-7777.1426 8602.1406 -7777.6094 8601.2373 -7778.1934 8600.8242 C
-7778.6094 8600.7715 -7779.874 8600.7998 -7780.3442 8600.8672 C
fU0.115 0.092 0.069 0 k
-7776.9375 8603.2734 m
-7777.8359 8602.9434 L
-7779.4785 8603.7588 L
-7780.4937 8602.9307 L
-7780.793 8603.708 -7780.7993 8603.8135 V
-7779.5137 8604.3789 -7778.1831 8604.7402 -7776.8398 8604.9258 C
-7776.79 8604.7275 -7776.7842 8604.543 -7776.79 8604.3369 c
-7776.7998 8603.9717 -7776.8218 8603.6182 -7776.9375 8603.2734 C
f0.41 0.328 0.246 0 k
-7757.4512 8599.3965 m
-7759.377 8600.6426 -7768.3862 8606.0986 -7776.8398 8604.9258 C
-7776.9038 8606.0928 -7777.248 8607.0908 -7777.75 8607.6631 C
-7777.1895 8607.6621 L
-7756.7402 8610.7559 L
-7757.0366 8600.4258 L
-7757.0728 8599.1465 L
-7757.2046 8599.2373 -7757.4512 8599.3965 v
f0.395 0.316 0.237 0 k
-7780.8105 8604.4375 m
-7780.771 8605.8203 -7780.3481 8607.0176 -7779.749 8607.6641 C
-7777.6807 8607.6631 L
-7777.1782 8607.0908 -7776.8218 8606.0713 -7776.8398 8604.9258 C
-7778.1831 8604.7402 -7779.5137 8604.3789 -7780.7993 8603.8135 C
-7780.8105 8604.0176 -7780.8169 8604.2246 -7780.8105 8604.4375 c
fUu0 0 0 0.11 k
-7751.2642 8598.2012 m
-7750.2407 8598.0352 L
-7751.2642 8598.2012 L
-7751.2642 8598.2012 L
f0 0 0 0.34 k
-7757.481 8598.3145 m
-7757.0728 8599.1465 L
-7755.6714 8598.918 L
-7754.5234 8598.7314 L
-7752.6758 8598.4307 L
-7751.2642 8598.2012 L
-7750.2407 8598.0352 L
-7750.2954 8597.7168 -7750.3672 8597.498 -7750.4648 8597.4199 C
-7757.481 8598.3145 L
f0 0 0 0.32 k
-7755.8042 8603.207 m
-7756.041 8610.8613 L
-7750.7144 8611 L
-7749.7266 8607.5146 -7750.1816 8603.1543 V
-7755.8042 8603.207 L
fU0.025 0.02 0.015 0 k
-7749.3223 8600.3848 m
-7746.373 8600.9199 -7743.2402 8601.1602 -7740.3159 8600.3613 c
-7740.2856 8600.3496 -7740.2754 8600.3184 -7740.2871 8600.2969 c
-7740.2881 8600.2656 -7740.3198 8600.2559 -7740.3418 8600.2559 c
-7743.2422 8601.0645 -7746.375 8600.8242 -7749.3042 8600.2783 c
-7749.3262 8600.2793 -7749.3574 8600.291 -7749.3672 8600.3223 c
-7749.3662 8600.3438 -7749.355 8600.375 -7749.3223 8600.3848 c
-7749.3223 8600.3848 l
f-7747.8374 8599.3076 m
-7747.7295 8599.3789 -7747.6313 8599.4941 -7747.5234 8599.502 c
-7743.7886 8599.832 -7740.1631 8599.7813 -7736.4746 8599.6641 c
-7736.4526 8599.6641 -7736.4209 8599.6426 -7736.4214 8599.6211 c
-7736.4214 8599.5879 -7736.4551 8599.5684 -7736.4766 8599.5684 c
-7739.3223 8599.6816 -7742.1401 8599.6992 -7745.0039 8599.5352 c
-7745.9336 8599.4766 -7746.9082 8599.7402 -7747.7778 8599.2207 c
-7747.7993 8599.2109 -7747.8306 8599.2109 -7747.8506 8599.2334 c
-7747.8618 8599.2559 -7747.8594 8599.2871 -7747.8374 8599.3076 c
-7747.8374 8599.3076 l
f-7743.373 8601.3672 m
-7741.5098 8602.6797 -7739.3022 8603.374 -7737.1001 8603.8867 c
-7737.0679 8603.8965 -7737.0474 8603.8848 -7737.0366 8603.8535 c
-7737.0273 8603.8203 -7737.0488 8603.8008 -7737.0703 8603.79 c
-7739.2617 8603.2656 -7741.459 8602.6035 -7743.3105 8601.2803 c
-7743.3433 8601.2598 -7743.375 8601.2715 -7743.3848 8601.293 c
-7743.4058 8601.3145 -7743.3945 8601.3457 -7743.373 8601.3672 c
-7743.373 8601.3672 l
f-7748.9321 8608.0566 m
-7746.7295 8608.5703 -7744.5298 8609.0303 -7742.2798 8609.2754 c
-7742.2598 8609.2852 -7742.229 8609.2637 -7742.229 8609.2422 c
-7742.2183 8609.209 -7742.2407 8609.1777 -7742.2729 8609.1787 c
-7744.5122 8608.8809 -7746.7305 8608.5176 -7748.9126 8607.9502 c
-7748.9351 8607.9512 -7748.9673 8607.9629 -7748.9766 8607.9941 c
-7748.9751 8608.0156 -7748.9648 8608.0479 -7748.9321 8608.0566 c
-7748.9321 8608.0566 l
f-7748.439 8607.3604 m
-7746.3457 8608.1973 -7744.1016 8607.9297 -7741.9023 8607.9629 c
-7741.8706 8607.9609 -7741.8496 8607.9395 -7741.8506 8607.9082 c
-7741.8521 8607.875 -7741.873 8607.8555 -7741.8945 8607.8555 c
-7744.0928 8607.8438 -7746.3374 8608.0996 -7748.4209 8607.2529 c
-7748.4434 8607.2539 -7748.4746 8607.2656 -7748.4834 8607.2969 c
-7748.4834 8607.3184 -7748.4722 8607.3506 -7748.439 8607.3604 c
-7748.439 8607.3604 l
f-7747.707 8608.7051 m
-7746.3833 8608.752 -7745.1504 8608.5469 -7743.8271 8608.209 c
-7743.3594 8608.0996 -7742.9199 8608.2266 -7742.4609 8608.2129 c
-7741.897 8608.1973 l
-7741.874 8608.1963 -7741.8633 8608.1855 -7741.8535 8608.1738 c
-7741.834 8608.1523 -7741.8442 8608.1211 -7741.8662 8608.0996 c
-7742.0625 8607.9453 l
-7742.0742 8607.9453 -7742.085 8607.9355 -7742.0962 8607.9355 c
-7742.5 8607.9473 l
-7743.9551 8608.1914 -7745.457 8608.6719 -7746.8926 8608.0742 c
-7746.9258 8608.0645 -7746.957 8608.0859 -7746.9673 8608.1074 c
-7746.9673 8608.1396 -7746.9551 8608.1602 -7746.9336 8608.1709 c
-7745.647 8608.6992 -7744.1714 8608.4756 -7742.8818 8608.0547 c
-7742.0918 8608.043 L
-7742.124 8608.0332 L
-7741.9282 8608.1875 L
-7741.8984 8608.0898 L
-7742.4639 8608.1064 l
-7742.9321 8608.1406 -7743.3848 8607.9834 -7743.8398 8608.1035 c
-7745.1543 8608.4609 -7746.3975 8608.625 -7747.71 8608.5986 c
-7747.7422 8608.5996 -7747.7642 8608.6211 -7747.7617 8608.6533 c
-7747.7617 8608.6855 -7747.7402 8608.7061 -7747.707 8608.7051 c
-7747.707 8608.7051 l
f-7748.5718 8609.0605 m
-7745.8711 8610.2207 -7742.9023 8609.5703 -7740.1279 8609.1816 c
-7739.7832 8609.2891 l
-7739.7617 8609.2988 -7739.7417 8609.2871 -7739.7207 8609.2656 c
-7739.71 8609.2441 -7739.7217 8609.2129 -7739.7422 8609.2021 c
-7740.0801 8609.0098 l
-7742.7754 8608.3926 -7745.5391 8608.7813 -7748.271 8608.7852 c
-7748.3022 8608.7871 -7748.3232 8608.8086 -7748.3223 8608.8398 c
-7748.3198 8608.8721 -7748.2983 8608.8926 -7748.2681 8608.8926 c
-7745.6738 8608.9355 -7743.0303 8608.4434 -7740.4727 8609.0742 c
-7739.7954 8609.2891 L
-7739.7534 8609.1914 L
-7740.1406 8609.0859 l
-7742.9058 8609.4424 -7745.8418 8610.1348 -7748.5313 8608.9746 c
-7748.5537 8608.9648 -7748.585 8608.9648 -7748.5962 8608.998 c
-7748.6055 8609.0195 -7748.605 8609.0508 -7748.5718 8609.0605 c
-7748.5718 8609.0605 l
f-7745.6895 8602.3945 m
-7744.3945 8602.9004 -7742.9834 8602.6465 -7741.6802 8602.3438 c
-7741.647 8602.3418 -7741.6367 8602.3203 -7741.6382 8602.2891 c
-7741.6504 8602.2568 -7741.6714 8602.2461 -7741.7031 8602.248 c
-7742.998 8602.5303 -7744.377 8602.8154 -7745.6504 8602.2969 c
-7745.6826 8602.2871 -7745.7144 8602.2988 -7745.7246 8602.3311 c
-7745.7222 8602.3525 -7745.7114 8602.3848 -7745.6895 8602.3945 c
-7745.6895 8602.3945 l
f-7746.1401 8604.2207 m
-7744.2266 8604.6895 -7742.3145 8605.1035 -7740.355 8605.3242 c
-7740.3242 8605.334 -7740.3022 8605.3125 -7740.293 8605.2803 c
-7740.2954 8605.2598 -7740.3159 8605.2285 -7740.3374 8605.2285 c
-7742.2959 8605.0078 -7744.209 8604.582 -7746.1206 8604.1133 c
-7746.1426 8604.1152 -7746.1738 8604.126 -7746.1831 8604.1582 c
-7746.1831 8604.1797 -7746.1719 8604.2109 -7746.1401 8604.2207 c
-7746.1401 8604.2207 l
f-7746.9336 8606.6348 m
-7744.499 8607.4609 -7741.8647 8607.0547 -7739.3457 8607.0879 c
-7739.313 8607.0879 -7739.293 8607.0664 -7739.293 8607.0332 c
-7739.2954 8607.0117 -7739.3159 8606.9922 -7739.3481 8606.9922 c
-7741.8574 8606.916 -7744.481 8607.3848 -7746.8945 8606.5264 c
-7746.9282 8606.5273 -7746.959 8606.5391 -7746.9688 8606.5605 c
-7746.9678 8606.5918 -7746.9561 8606.624 -7746.9336 8606.6348 c
-7746.9336 8606.6348 l
f-7742.0542 8607.8496 m
-7740.6582 8608.5449 -7739.0503 8608.4033 -7737.5342 8608.4668 c
-7737.502 8608.4648 -7737.4824 8608.4434 -7737.4824 8608.4121 c
-7737.4834 8608.3906 -7737.5054 8608.3594 -7737.5366 8608.3594 c
-7739.0137 8608.2207 -7740.6489 8608.5234 -7742.0039 8607.7617 c
-7742.0366 8607.7529 -7742.0679 8607.7637 -7742.0786 8607.7861 c
-7742.0879 8607.8076 -7742.0767 8607.8398 -7742.0542 8607.8496 c
-7742.0542 8607.8496 l
f-7741.3418 8604.4248 m
-7740.3926 8604.3975 -7739.4336 8604.3701 -7738.4839 8604.3428 c
-7738.4526 8604.3418 -7738.4312 8604.3203 -7738.4336 8604.2881 c
-7738.4336 8604.2559 -7738.4551 8604.2354 -7738.4878 8604.2363 c
-7739.437 8604.2637 -7740.397 8604.291 -7741.3457 8604.3184 c
-7741.377 8604.3184 -7741.3975 8604.3418 -7741.3975 8604.373 c
-7741.397 8604.4043 -7741.374 8604.4258 -7741.3418 8604.4248 c
-7741.3418 8604.4248 l
f-7739.1592 8602.0361 m
-7738.6895 8602.0645 -7738.209 8602.0723 -7737.7383 8602.0918 c
-7737.7168 8602.0908 -7737.6855 8602.0684 -7737.6865 8602.0371 c
-7737.687 8602.0039 -7737.71 8601.9844 -7737.7417 8601.9844 c
-7738.2114 8601.9873 -7738.6816 8601.9375 -7739.1514 8601.9395 c
-7739.1831 8601.9297 -7739.2031 8601.9512 -7739.2134 8601.9844 c
-7739.2129 8602.0156 -7739.1914 8602.0371 -7739.1592 8602.0361 c
-7739.1592 8602.0361 l
f-7746.9702 8604.2344 m
-7746.5688 8604.5107 -7746.125 8604.6797 -7745.645 8604.751 c
-7745.6113 8604.7607 -7745.5918 8604.7383 -7745.5806 8604.7168 c
-7745.5703 8604.6855 -7745.5928 8604.6543 -7745.6152 8604.6543 c
-7746.0854 8604.5723 -7746.5176 8604.4023 -7746.9209 8604.1475 c
-7746.9521 8604.1377 -7746.9849 8604.1387 -7746.9946 8604.1709 c
-7747.0039 8604.1934 -7746.9922 8604.2246 -7746.9702 8604.2344 c
-7746.9702 8604.2344 l
f-7748.1904 8610.085 m
-7745.7344 8610.5273 -7743.2983 8611.001 -7740.7993 8610.7266 c
-7740.7778 8610.7266 -7740.7568 8610.7041 -7740.7578 8610.6719 c
-7740.7578 8610.6406 -7740.7798 8610.6191 -7740.8022 8610.6191 c
-7743.291 8610.873 -7745.7344 8610.4844 -7748.1719 8609.9775 c
-7748.1934 8609.9785 -7748.2256 8609.9902 -7748.2344 8610.0215 c
-7748.2344 8610.043 -7748.2222 8610.0752 -7748.1904 8610.085 c
-7748.1904 8610.085 l
f0.195 0.156 0.117 0 k
-7748.166 8598.6445 m
-7745.7969 8598.2676 -7743.4058 8598.3477 -7741.0298 8598.5898 c
-7740.998 8598.5879 -7740.9766 8598.5664 -7740.9766 8598.5352 c
-7740.9785 8598.5137 -7741 8598.4824 -7741.0215 8598.4824 c
-7743.4082 8598.2422 -7745.791 8598.1602 -7748.1694 8598.5391 c
-7748.2026 8598.5391 -7748.2222 8598.5605 -7748.2217 8598.5938 c
-7748.2207 8598.625 -7748.1992 8598.6465 -7748.166 8598.6445 c
-7748.166 8598.6445 l
f0.335 0.268 0.201 0 k
-7747.4351 8598.1113 m
-7744.9282 8598.1152 -7742.4146 8598.2773 -7739.918 8597.8965 c
-7739.8862 8597.8945 -7739.8647 8597.873 -7739.8662 8597.8418 c
-7739.8672 8597.8086 -7739.8896 8597.7891 -7739.9209 8597.7891 c
-7742.418 8598.1699 -7744.9297 8598.0293 -7747.4375 8598.0059 c
-7747.46 8598.0059 -7747.481 8598.0273 -7747.4785 8598.0596 c
-7747.4785 8598.0918 -7747.457 8598.1123 -7747.4351 8598.1113 c
-7747.4351 8598.1113 l
f0.205 0.164 0.123 0 k
-7748.9766 8598.3262 m
-7747.5039 8598.668 -7746.0078 8598.4023 -7744.5391 8598.2207 c
-7744.5078 8598.2207 -7744.4873 8598.1973 -7744.499 8598.166 c
-7744.5 8598.1348 -7744.5215 8598.1133 -7744.5537 8598.125 c
-7746.0103 8598.2842 -7747.4961 8598.583 -7748.9473 8598.2188 c
-7748.9785 8598.2207 -7749.0103 8598.2324 -7749.0098 8598.2637 c
-7749.019 8598.2852 -7748.998 8598.3164 -7748.9766 8598.3262 c
-7748.9766 8598.3262 l
f-7742.3535 8597.7949 m
-7741.1978 8597.9219 -7740.0273 8597.8145 -7738.8926 8597.5898 c
-7738.8711 8597.5781 -7738.8506 8597.5566 -7738.8618 8597.5244 c
-7738.8623 8597.5029 -7738.8945 8597.4824 -7738.916 8597.4941 c
-7740.0503 8597.7402 -7741.1914 8597.7939 -7742.3462 8597.6885 c
-7742.3794 8597.6895 -7742.3984 8597.7109 -7742.4087 8597.7324 c
-7742.4082 8597.7646 -7742.3862 8597.7852 -7742.3535 8597.7949 c
-7742.3535 8597.7949 l
f0.335 0.268 0.201 0 k
-7749.2681 8600.4473 m
-7747.9214 8601.1885 -7746.3066 8600.5977 -7744.855 8600.6416 c
-7744.8223 8600.6406 -7744.8022 8600.6191 -7744.8022 8600.5859 c
-7744.8042 8600.5654 -7744.8262 8600.5449 -7744.8574 8600.5449 c
-7746.2886 8600.4902 -7747.8823 8601.0801 -7749.2168 8600.3506 c
-7749.2383 8600.3398 -7749.2695 8600.3516 -7749.291 8600.374 c
-7749.3008 8600.3955 -7749.2886 8600.4277 -7749.2681 8600.4473 c
-7749.2681 8600.4473 l
f-7747.8945 8602.5645 m
-7745.6719 8603.0449 -7743.3896 8602.6162 -7741.1504 8602.5625 c
-7741.1177 8602.5615 -7741.0977 8602.5391 -7741.0977 8602.5078 c
-7741.1001 8602.4863 -7741.1318 8602.4668 -7741.1519 8602.4668 c
-7743.3833 8602.4775 -7745.6519 8602.9805 -7747.875 8602.457 c
-7747.8975 8602.457 -7747.9287 8602.4688 -7747.9375 8602.502 c
-7747.9375 8602.5225 -7747.9258 8602.5547 -7747.8945 8602.5645 c
-7747.8945 8602.5645 l
f-7742.0273 8599.1406 m
-7740.3496 8599.9688 -7738.499 8600.502 -7736.603 8600.3613 c
-7736.5718 8600.3613 -7736.5513 8600.3389 -7736.5527 8600.3066 c
-7736.5527 8600.2754 -7736.5742 8600.2539 -7736.6074 8600.2559 c
-7738.481 8600.416 -7740.3198 8599.8604 -7741.9873 8599.0547 c
-7742.0078 8599.0449 -7742.041 8599.0449 -7742.0503 8599.0781 c
-7742.061 8599.0996 -7742.061 8599.1309 -7742.0273 8599.1406 c
-7742.0273 8599.1406 l
fu0.5 0.85 1 0.45 k
-7895 8605.9082 m
-7895.0254 8606.4883 -7894.5664 8607.1875 -7893.167 8607.9902 C
-7892.8521 8608.0029 -7891.3945 8608.0234 -7889.0889 8608.0488 C
-7889.0889 8605.8223 L
-7891.1382 8605.8457 -7893.1177 8605.8867 -7895 8605.9082 C
f-7894.5088 8604.9688 m
-7889.0889 8604.8447 L
-7889.0889 8603.8145 L
-7892.644 8603.959 L
-7893.8145 8604.3301 -7894.5088 8604.9688 V
f0.5 0.85 1 0.32 k
-7889.0889 8604.8252 m
-7894.4746 8604.9434 L
-7894.7695 8605.2148 -7894.9849 8605.5566 -7895 8605.9277 C
-7893.1177 8605.9063 -7891.1382 8605.8848 -7889.0889 8605.8613 C
-7889.0889 8604.8252 L
f0.5 0.85 1 0.45 k
-7784.1504 8604.6172 m
-7862.3584 8605.541 -7889.1079 8605.8418 V
-7889.1079 8608.0488 L
-7872.8145 8608.2324 -7813.9902 8608.707 Y
-7779.749 8607.6641 L
-7780.457 8604.5684 L
-7784.1504 8604.6172 L
f0.5 0.85 1 0.12 k
-7889.1079 8603.8145 m
-7889.1079 8604.8447 L
-7780.4258 8603 L
-7780.3833 8600.8633 L
-7813.6553 8600.7129 L
-7889.1079 8603.8145 L
fu0.065 0.052 0.039 0 k
-7757.0728 8599.1465 m
-7757.0366 8600.4258 L
-7757.2954 8599.1172 L
-7775.897 8603.6563 L
-7776.9375 8603.2734 L
-7776.8794 8603.6055 -7776.8398 8603.957 -7776.8306 8604.3223 c
-7776.8242 8604.5283 -7776.8281 8604.7285 -7776.8398 8604.9258 C
-7768.3862 8606.0986 -7758.9634 8601.6719 -7757.0366 8600.4258 C
-7756.7402 8610.7559 L
-7756.041 8610.8613 L
-7755.8042 8603.207 L
-7750.1816 8603.1543 L
-7750.0898 8601.0137 -7750.0718 8599.0215 -7750.2407 8598.0352 C
-7757.0728 8599.1465 L
f0.4 0.7 1 0 k
-7780.457 8604.5879 m
-7780.4258 8602.9805 L
-7889.1079 8604.8252 L
-7889.1079 8605.8613 L
-7862.3584 8605.5605 -7780.457 8604.5879 Y
fUU0.025 0.02 0.015 0 k
-7744.7344 8607.0293 m
-7744.7344 8607.0625 -7744.7129 8607.082 -7744.6802 8607.082 c
-7741.6714 8607.1133 -7739.4214 8606.9453 -7736.415 8606.8594 C
-7736.4087 8606.7656 L
-7739.3262 8606.8701 -7741.7607 8607.0078 -7744.6841 8606.9746 C
-7744.7168 8606.9766 -7744.7358 8606.998 -7744.7344 8607.0293 C
f-7736.3994 8606.7656 m
-7736.4082 8606.7441 L
-7736.4087 8606.7656 L
-7736.4063 8606.7656 -7736.4033 8606.7656 -7736.3994 8606.7656 C
f-7740.4487 8605.4238 m
-7741.4458 8605.292 -7742.3394 8605.7656 -7743.2114 8606.1973 C
-7743.2441 8606.208 -7743.2534 8606.2402 -7743.2422 8606.2715 C
-7743.2305 8606.293 -7743.1982 8606.3027 -7743.1777 8606.291 c
-7742.3262 8605.8301 -7741.4312 8605.4199 -7740.4678 8605.5195 c
-7739.1079 8605.6621 -7737.9038 8606.375 -7736.5254 8606.4531 C
-7736.4463 8606.3594 L
-7738.04 8606.2656 -7738.8647 8605.623 -7740.4487 8605.4238 c
fUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 50)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7894 8610 m
-7766.877 8610 L
-7766.877 8562.415 L
-7894 8562.415 L
-7894 8610 L
nu*u
0 O
0.9529 0.949 0.1961 0.0745 k
-7867.793 8594.417 m
-7867.8232 8594.2676 L
-7869.9849 8588.3643 -7870.9438 8585.6377 -7871.2754 8584.2891 c
-7871.3657 8584.2891 L
-7871.6953 8585.6074 -7872.7754 8588.335 -7874.9673 8594.2676 c
-7874.9966 8594.417 L
-7867.793 8594.417 l
f1 D
-7878.1182 8602.9678 m
-7879.6191 8606.5371 -7880.3994 8608.709 -7878.1182 8608.917 c
-7878.1182 8609.9678 L
-7880.6992 8609.9375 -7883.5806 8609.917 -7886.3418 8609.917 c
-7890.0649 8609.917 -7892.5273 8609.9375 -7894 8609.9678 c
-7894 8608.917 L
-7892.1064 8608.709 -7891.0542 8606.5674 -7883.5513 8589.5029 c
-7871.6953 8562.415 L
-7869.8638 8562.415 L
-7858.1582 8589.5029 L
-7850.8047 8606.5078 -7849.7246 8608.709 -7847.8887 8608.917 c
-7847.8887 8609.9678 L
-7849.5142 8609.9375 -7851.916 8609.917 -7855.5767 8609.917 c
-7858.5488 8609.917 -7861.6694 8609.9375 -7864.7026 8609.9678 c
-7864.7026 8608.917 L
-7862.481 8608.709 -7863.3218 8606.5078 -7864.7617 8602.9678 C
-7878.1182 8602.9678 l
f*U
*u
0 D
-7823.0762 8578.0811 m
-7823.0762 8574.4717 -7825.3535 8572.0947 -7829.1294 8572.0947 c
-7830.2383 8572.0947 -7831.0767 8572.2158 -7831.5273 8572.2451 c
-7831.5273 8584.5479 L
-7830.8672 8584.6084 -7830.208 8584.6084 -7829.729 8584.6084 c
-7828.2002 8584.6084 -7826.7026 8584.127 -7825.6841 8583.4053 c
-7824.3945 8582.5332 -7823.0762 8580.7881 -7823.0762 8578.1416 C
-7823.0762 8578.0811 l
f1 D
-7842.0806 8582.3926 m
-7842.0806 8566.6445 -7842.0806 8564.4287 -7844.542 8564.2783 c
-7844.542 8563.3184 L
-7843.042 8563.2588 -7840.3174 8563.1992 -7837.5664 8563.1689 c
-7835.6538 8563.1084 -7832.3945 8563.0186 -7830.1479 8562.9775 c
-7826.582 8562.9775 -7823.585 8563.4258 -7821.0049 8564.2627 c
-7816.353 8565.8477 -7811.9702 8569.8525 -7811.9702 8577.6602 c
-7811.9702 8582.7432 -7814.4014 8586.3193 -7816.5034 8588.0605 c
-7817.583 8589.0215 -7818.8135 8589.832 -7819.7744 8590.3125 c
-7819.7744 8590.4629 L
-7817.5234 8593.4912 -7815.6025 8596.0625 -7809.3906 8604.6426 c
-7807.5 8607.0645 -7805.9102 8608.7383 -7804.7402 8608.9775 c
-7804.7402 8610 L
-7806.6602 8610 -7809 8609.8848 -7811.1294 8609.8848 c
-7813.3511 8609.8848 -7814.8521 8610 -7816.4424 8610 c
-7817.6729 8610 -7818.7241 8609.9404 -7819.5039 8609.2725 c
-7823.0151 8603.8477 -7826.9121 8597.7559 -7830.1182 8592.7139 c
-7830.5078 8592.7139 -7830.957 8592.7139 -7831.5273 8592.7139 c
-7831.5273 8595.2852 L
-7831.5273 8606.5264 -7831.437 8608.7686 -7829.1895 8608.9775 c
-7829.1895 8609.9697 L
-7830.6279 8609.9404 -7833.9194 8609.915 -7836.6992 8609.915 c
-7839.9287 8609.915 -7842.8921 8609.9404 -7844.5122 8609.9697 c
-7844.5122 8608.9775 L
-7842.0518 8608.7686 -7842.0806 8606.5264 -7842.0806 8589.5918 C
-7842.0806 8582.3926 l
f*U
*u
0 D
-7791.4561 8589.5928 m
-7791.4561 8606.4941 -7791.4561 8608.6484 -7794.2832 8608.9775 C
-7794.2832 8609.9697 l
-7792.3887 8609.9404 -7789.0542 8609.915 -7785.7822 8609.915 c
-7782.6294 8609.915 -7779.5688 8609.9404 -7777.2881 8609.9697 C
-7777.2881 8608.9775 l
-7780.2578 8608.9775 -7780.2881 8606.5244 -7780.2881 8589.5928 C
-7780.2881 8572.1514 L
-7772.8193 8572.1514 l
-7769.999 8572.1514 -7768.5298 8572.96 -7767.8994 8575.2627 C
-7766.9072 8575.2627 l
-7766.9072 8570.4697 -7766.877 8566.415 -7766.877 8563.1709 c
-7771.3486 8563.2012 -7776.748 8563.2314 -7782.0601 8563.2314 C
-7789.7446 8563.2314 l
-7794.5537 8563.2314 -7799.9966 8563.2012 -7804.9614 8563.1709 c
-7804.9614 8566.3848 -7804.9326 8570.4697 -7804.9326 8575.2627 C
-7803.9072 8575.2627 l
-7803.3657 8573.1094 -7801.771 8572.1514 -7798.9438 8572.1514 C
-7791.4561 8572.1514 l
-7791.4561 8589.5928 L
f*U
UU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 6)
0 A
u1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7894.75 8587 m
-7894.75 8611 L
-7884.75 8611 L
-7884.75 8587 L
-7894.75 8587 L
n0 Ap
0 O
1 g
-7884.75 8589 m
-7885.0703 8589 -7885.3857 8589.0186 -7885.6982 8589.0479 c
-7887.5879 8589.2256 -7889.3198 8589.9346 -7890.7559 8591.0176 c
-7892.2529 8592.1465 -7893.4199 8593.6816 -7894.0942 8595.4639 c
-7894.5122 8596.5645 -7894.75 8597.7529 -7894.75 8599 c
-7894.75 8600.8623 -7894.2319 8602.5996 -7893.3457 8604.0918 c
-7891.6025 8607.0273 -7888.4102 8609 -7884.75 8609 C
-7884.75 8589 L
f0 R
0 G
1 J 1 j 0.5 w-7884.75 8608.6816 m
-7887.7793 8607.7256 -7890.6074 8606.0674 -7893.3457 8604.0918 C
S-7884.75 8603.0488 m
-7887.8999 8600.6436 -7890.957 8597.9131 -7894.0942 8595.4639 C
S-7890.7559 8591.0176 m
-7888.6904 8592.1084 -7886.7017 8593.4668 -7884.75 8594.957 C
S-7885.6982 8589.0479 m
-7885.3809 8589.1309 -7885.063 8589.2148 -7884.75 8589.3145 C
S-7890.7559 8591.0176 m
-7889.3193 8589.9355 -7887.5879 8589.2256 -7885.6982 8589.0479 C
S-7894.0942 8595.4639 m
-7894.5122 8596.5645 -7894.75 8597.7529 -7894.75 8599 c
-7894.75 8600.8623 -7894.231 8602.5996 -7893.3457 8604.0918 C
S-7884.75 8589 m
-7885.0703 8589 -7885.3857 8589.0186 -7885.6982 8589.0479 C
S-7890.7559 8591.0176 m
-7892.2529 8592.1465 -7893.4199 8593.6816 -7894.0942 8595.4639 C
S-7893.3457 8604.0918 m
-7891.6025 8607.0273 -7888.4102 8609 -7884.75 8609 C
SU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 62)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7895 8611 m
-7895 8572.7305 L
-7856.7305 8572.7305 L
-7856.7305 8611 L
-7895 8611 L
n0 O
1 0.14 0.09 0 k
-7856.7305 8593.9043 m
-7856.7305 8585.3408 L
-7895 8585.3408 L
-7895 8593.9043 L
-7856.7305 8593.9043 L
f-7856.7305 8597.0967 m
-7856.7305 8596.4229 L
-7895 8596.4229 L
-7895 8597.0967 L
-7856.7305 8597.0967 L
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 63)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7895 8611 m
-7895 8572.7305 L
-7856.7305 8572.7305 L
-7856.7305 8611 L
-7895 8611 L
n0 O
1 0.14 0.09 0 k
-7856.7305 8589.8262 m
-7856.7305 8598.3896 L
-7869.3408 8598.3896 L
-7869.3408 8611 L
-7877.9038 8611 L
-7877.9063 8589.8262 L
-7877.9038 8589.8262 L
-7877.9038 8589.8252 L
-7856.7305 8589.8262 L
f-7856.7305 8587.3076 m
-7880.4233 8587.3076 L
-7880.4233 8611 L
-7881.0967 8611 L
-7881.0977 8586.6328 L
-7856.7305 8586.6328 L
-7856.7305 8587.3076 L
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 64)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7895 8610.999 m
-7895 8572.7285 L
-7856.7305 8572.7285 L
-7856.7305 8610.999 L
-7895 8610.999 L
n0 O
1 0.14 0.09 0 k
-7856.7305 8585.3389 m
-7882.3896 8585.3389 L
-7882.3896 8610.999 L
-7873.8262 8611 L
-7873.8262 8593.9033 L
-7856.7305 8593.9033 L
-7856.7305 8585.3389 L
f-7856.7305 8596.4219 m
-7871.3081 8596.4219 L
-7871.3081 8611 L
-7870.6338 8611 L
-7870.6338 8597.0957 L
-7856.7305 8597.0957 L
-7856.7305 8596.4219 L
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 65)
0 A
u1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7867.0625 8583.4609 m
-7894.6025 8583.4609 L
-7894.6025 8611 L
-7867.0625 8611 L
-7867.0625 8583.4609 L
n0 O
0 0.55 1 0.12 k
-7866.8418 8596.7002 m
-7895 8596.7002 L
-7895 8597.8252 L
-7866.8418 8597.8252 L
-7866.8418 8596.7002 L
fu0 0.55 1 0.3 k
-7893.9814 8584.5215 m
-7894.4102 8586.5254 -7893.1865 8590.1514 -7890.0874 8593.251 c
-7886.9878 8596.3496 -7883.3457 8597.6602 -7881.3594 8597.1455 C
-7881.3594 8597.1455 L
-7880.875 8595.1895 -7882.1519 8591.5117 -7885.25 8588.4141 c
-7888.3457 8585.3184 -7892.0122 8584.1064 -7893.9814 8584.5215 C
f0 0.39 0.7 0.12 k
-7893.9814 8609.9912 m
-7894.4102 8607.9883 -7893.1865 8604.3613 -7890.0874 8601.2617 c
-7886.9878 8598.1641 -7883.3457 8596.8535 -7881.3594 8597.3672 C
-7881.3594 8597.3672 L
-7880.875 8599.3242 -7882.1519 8603.001 -7885.25 8606.0996 c
-7888.3457 8609.1953 -7892.0122 8610.4063 -7893.9814 8609.9912 C
fUu0 0.55 1 0.3 k
-7880.1782 8609.9912 m
-7880.6074 8607.9883 -7879.3838 8604.3613 -7876.2842 8601.2617 c
-7873.1855 8598.1641 -7869.543 8596.8535 -7867.5576 8597.3672 C
-7867.5566 8597.3672 L
-7867.0718 8599.3242 -7868.3496 8603.001 -7871.4473 8606.0996 c
-7874.543 8609.1953 -7878.209 8610.4063 -7880.1782 8609.9912 C
f0 0.39 0.7 0.12 k
-7880.1782 8584.5215 m
-7880.6074 8586.5254 -7879.3838 8590.1514 -7876.2842 8593.251 c
-7873.1855 8596.3496 -7869.543 8597.6602 -7867.5576 8597.1455 C
-7867.5566 8597.1455 L
-7867.0718 8595.1895 -7868.3496 8591.5117 -7871.4473 8588.4141 c
-7874.543 8585.3184 -7878.209 8584.1064 -7880.1782 8584.5215 C
fUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 67)
0 A
u0 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7867.4609 8583.085 m
-7895 8583.085 L
-7895 8610.624 L
-7867.4609 8610.624 L
-7867.4609 8583.085 L
n0 O
0 0.55 1 0.12 k
-7881.7598 8601.3623 m
-7881.7598 8611 L
-7880.6343 8611 L
-7880.6343 8601.3623 L
-7881.7598 8601.3623 L
f0 0.55 1 0.3 k
-7885.4233 8596.876 m
-7884.3096 8595.1553 -7880.8809 8593.457 -7876.4966 8593.457 c
-7872.1152 8593.457 -7868.6138 8595.1064 -7867.5718 8596.874 C
-7867.5718 8596.874 L
-7868.6138 8598.6006 -7872.1152 8600.2979 -7876.4966 8600.2979 c
-7880.875 8600.2979 -7884.3242 8598.5615 -7885.4233 8596.876 C
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 69)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7867.4609 8583.4609 m
-7895 8583.4609 L
-7895 8611 L
-7867.4609 8611 L
-7867.4609 8583.4609 L
n0 O
0 0.55 1 0.3 k
-7885.4233 8597.252 m
-7884.3096 8595.5313 -7880.8809 8593.833 -7876.4966 8593.833 c
-7872.1152 8593.833 -7868.6138 8595.4824 -7867.5718 8597.25 C
-7867.5718 8597.25 L
-7868.6138 8598.9766 -7872.1152 8600.6738 -7876.4966 8600.6738 c
-7880.875 8600.6738 -7884.3242 8598.9375 -7885.4233 8597.252 C
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 8)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7893.9521 8608.3125 m
-7786.7954 8608.3125 L
-7786.7954 8594.1855 L
-7893.9521 8594.1855 L
-7893.9521 8608.3125 L
nu0 O
0 0 0 1 k
-7892.2832 8607.623 m
-7892.8535 8610 -7892.8184 8606.0039 V
-7893.0479 8602.8027 L
-7893.6167 8600.4551 L
-7893.4502 8598.123 L
-7891.9502 8597.4551 -7875.2832 8596.123 V
-7868.6167 8594.7891 -7859.6167 8594.7891 V
-7794.3936 8595.4766 -7789.4912 8596.8848 v
-7830.3882 8594.875 -7832.9688 8595.5117 v
-7793.8569 8597.1602 -7790.8545 8598.4316 v
-7828.79 8596.5469 -7832.167 8598.1777 v
-7797.249 8599.9102 -7793.021 8601.5313 v
-7799.7217 8600.8828 -7801.5127 8601.082 v
-7798.3896 8601.5703 l
-7803.4194 8601.502 l
-7806.3218 8601.1289 l
-7798.4521 8602.2422 -7797.9033 8602.8086 v
-7794.3154 8602.1309 -7808.5186 8602.3848 v
-7842.1177 8598.4551 -7892.2832 8607.623 V
f/BBAccumRotation (5.805971) XT
0 R
0 0 0 0.5 K
0.025 w-7893.9502 8597.123 m
-7873.667 8595.2949 -7853.9727 8594.2207 v
-7811.1514 8594.502 -7806.5737 8594.9004 v
-7794.1631 8595.0313 -7786.7959 8596.0273 v
S/BBAccumRotation (5.805971) XT
0 0 0 1 K
-7831.8369 8594.4082 m
-7835.2959 8594.0273 -7861.2607 8594.2793 Y
-7871.627 8594.1602 -7893.9502 8597.123 Y
S/BBAccumRotation (5.805971) XT
-7830.9873 8597.6641 m
-7800.3608 8598.582 -7793.6606 8599.2324 v
S/BBAccumRotation (5.805971) XT
0 0 0 0.5 K
-7839.6201 8602.2051 m
-7804.3706 8603.6172 -7801.4058 8604.1406 v
S/BBAccumRotation (5.805971) XT
UU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 83)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7894 8609.9355 m
-7680.4009 8609.9355 L
-7680.4009 8602.1348 L
-7894 8602.1348 L
-7894 8609.9355 L
n0 O
0 0 0 1 k
-7894 8606.0352 m
-7883.9858 8608.5273 -7877.187 8609.875 -7865.2007 8609.9355 c
-7852.2183 8610 -7787.2002 8609.9355 y
-7722.1816 8610 -7709.2002 8609.9355 v
-7697.2129 8609.875 -7690.415 8608.5273 -7680.4009 8606.0352 C
-7690.415 8603.543 -7697.2129 8602.1953 -7709.2002 8602.1348 c
-7722.1816 8602.0693 -7787.2002 8602.1348 y
-7852.2183 8602.0693 -7865.2007 8602.1348 v
-7877.187 8602.1953 -7883.9858 8603.543 -7894 8606.0352 C
fU%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 6 pt Flat / Adobe Calligraphic Brush T) -
(ool/ 10 pt Oval/ Adobe Calligraphic Brush Tool/ 12 pt Oval / Adobe Cal) -
(ligraphic Brush Tool/ 20 pt Oval/ Adobe Calligraphic Brush Tool/ 25 pt) -
( Round / Adobe Calligraphic Brush Tool/ 50 pt Flat/ Adobe Scatter Brus) -
(h Tool/ Dog Tracks/ Adobe Scatter Brush Tool/ Fall Leaf/ Adobe Scatter) -
( Brush Tool/ Ladybug/ Adobe Scatter Brush Tool/ Push Pin/ Adobe Scatte) -
(r Brush Tool/ Strawberry/ Adobe Scatter Brush Tool/ Twinkle Star / Ado) -
(be ArtOnPath Brush Tool/ Marker/ Adobe ArtOnPath Brush Tool/ Tapered S) -
(troke/ Adobe ArtOnPath Brush Tool/ Arrow/ Adobe ArtOnPath Brush Tool/ ) -
(Paintbrush/ Adobe ArtOnPath Brush Tool/ Type/ Adobe PatternOnPath Brus) -
(h Tool/ Double Lines/ Adobe PatternOnPath Brush Tool/ Laurel/ Adobe Pa) -
(tternOnPath Brush Tool/ Rope /) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Dog Tracks)
(1 /New Pattern 41/ 1 0 0 0 1 / 0 1 1 0 1 1 0 0 0 0 -90 -90 0 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Fall Leaf)
(1 /New Pattern 34/ 1 0.0745 0.9 0.9019 0.18 / 0 0.602793 1 1 0.1 1 1 -) -
(1 1 1 -180 180 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Ladybug)
(1 /New Pattern 10/ 5 0.898039 0 0 / 0 1 1 0 0.803911 1.2 1 -1.55 1.55 ) -
(1 -180 180 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Push Pin)
(1 /New Pattern 36/ 1 0.025 0.1 0.475 0 / 0 1 1 0 0.401676 1 1 -1.06145) -
( 1.06 1 -180 180 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Strawberry)
(1 /New Pattern 37/ 1 0 0 0 1 / 0 0.803911 1 1 0.803911 1 1 -0.5 0.5 1 ) -
(-75 75.419 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Scatter Brush Tool)
(Twinkle Star )
(1 /New Pattern 2/ 0 1 / 1 0.5 1 1 0.25 1 1 -0.5 0.5 1 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(10 pt Oval)
(1 1 19 15 15 130 130 2 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(12 pt Oval )
(1 7 17 45 45 0 0 2 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(20 pt Oval)
(1 20 20 20 100 40 80 0 2 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(25 pt Round )
(1 10 40 100 100 0 0 2 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(50 pt Flat)
(1 40 60 0 0 44 44 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(6 pt Flat )
(1 4 8 10 10 90 90 2 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Arrow)
(1 / New Pattern 45/ / / / / 5 0.898039 0 0 /  2 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Marker)
(1 / New Pattern 8/ / / / / 0 0 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Paintbrush)
(1 / New Pattern 5/ / / / / 1 0.5 0.85 1 0.45 /  0 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Tapered Stroke)
(1 / New Pattern 83/ / / / / 1 0 0 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Type)
(1 / New Pattern 50/ / / / / 1 0.952941 0.94902 0.196078 0.0745098 /  1) -
( 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Double Lines)
(1 / New Pattern 62/ New Pattern 63/ New Pattern 64/ / / 1 1 0.14 0.09 ) -
(0 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Laurel)
(1 / New Pattern 65/ New Pattern 42/ New Pattern 67/ / New Pattern 69/ ) -
(1 0 0.55 1 0.3 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Rope )
(1 / New Pattern 1/ / / New Pattern 3/ New Pattern 6/ 5 0 0 0 /  1 0 1 ) -
(0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration]) Pc
0 0 0 0 k
(C=0 M=0 Y=0 K=0) Pc
0 0 0 1 k
(C=0 M=0 Y=0 K=100) Pc
0 0.1 1 0 k
(C=0 M=10 Y=100 K=0) Pc
0 0.5 0 0 k
(C=0 M=50 Y=0 K=0) Pc
0 0.5 1 0 k
(C=0 M=50 Y=100 K=0) Pc
1 0.55 1 0 k
(C=100 M=55 Y=100 K=0) Pc
1 0.9 0.1 0 k
(C=100 M=90 Y=10 K=0) Pc
0.15 1 1 0 k
(C=15 M=100 Y=100 K=0) Pc
0.45 0.9 0 0 k
(C=45 M=90 Y=0 K=0) Pc
0.5 0.4 0.3 0 k
(C=50 M=40 Y=30 K=0) Pc
0.5 0.85 1 0 k
(C=50 M=85 Y=100 K=0) Pc
0.75 0.05 1 0 k
(C=75 M=5 Y=100 K=0) Pc
0.75 0.9 0 0 k
(C=75 M=90 Y=0 K=0) Pc
0.8 0.05 0 0 k
(C=80 M=5 Y=0 K=0) Pc
Bb
2 (Black, White) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Black, White) Pc
Bb
2 (Chrome) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Chrome) Pc
Bb
2 (Rainbow) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Rainbow) Pc
Bb
0 0 0 0 Bh
2 (Yellow & Orange Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Yellow & Orange Radial) Pc
(Brick) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Brick) Pc
(Confetti) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Confetti) Pc
(Leaves - Fall ) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Leaves - Fall ) Pc
(Stripes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Stripes) Pc
PB
%AI5_EndPalette
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI5_End_NonPrinting--
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
1 Ap
0 O
0 0 0 0 k
0 R
0 0 0 1 K
1 J 1 j 2.8346 w 4 M []0 d0 XR
543.333 424 m
-20.667 424 L
-20.667 840 L
543.333 840 L
543.333 424 L
bu0.9137 0.1922 0.0549 0.0039 k
0 J 0 j 1 w369.334 626.5024 m
369.334 623.3843 366.7832 620.833 363.6641 620.833 c
155.0029 620.833 l
151.8848 620.833 149.3335 623.3843 149.3335 626.5024 c
149.3335 656.6636 l
149.3335 659.7817 151.8848 662.333 155.0029 662.333 c
363.6641 662.333 l
366.7832 662.333 369.334 659.7817 369.334 656.6636 c
369.334 626.5024 l
f0 R
0 0 0 1 K
1 J 1 j 2 w369.334 626.5024 m
369.334 623.3843 366.7832 620.833 363.6641 620.833 c
155.0029 620.833 l
151.8848 620.833 149.3335 623.3843 149.3335 626.5024 c
149.3335 656.6636 l
149.3335 659.7817 151.8848 662.333 155.0029 662.333 c
363.6641 662.333 l
366.7832 662.333 369.334 659.7817 369.334 656.6636 c
369.334 626.5024 l
sU0 O
0.9137 0.1922 0.0549 0.0039 k
2.8346 w408.4033 774.1328 m
408.4033 760.6274 398.3584 749.5767 386.0811 749.5767 c
137.7554 749.5767 l
125.4785 749.5767 115.4336 760.6274 115.4336 774.1328 c
115.4336 787.6392 125.4785 798.689 137.7554 798.689 c
386.0811 798.689 l
398.3584 798.689 408.4033 787.6392 408.4033 774.1328 c
b400.4033 714.4658 m
400.4033 706.2764 390.7012 699.5762 378.8428 699.5762 c
138.9937 699.5762 l
127.1357 699.5762 117.4336 706.2764 117.4336 714.4658 c
117.4336 722.6558 127.1357 729.3555 138.9937 729.3555 c
378.8428 729.3555 l
390.7012 729.3555 400.4033 722.6558 400.4033 714.4658 c
b504.4033 567.6328 m
504.4033 550.5522 490.8271 536.5767 474.2334 536.5767 c
138.603 536.5767 l
122.0103 536.5767 108.4336 550.5522 108.4336 567.6328 c
108.4336 584.7139 122.0103 598.689 138.603 598.689 c
474.2334 598.689 l
490.8271 598.689 504.4033 584.7139 504.4033 567.6328 c
buu0 Ap
185.4341 641.4258 m
162.7573 641.4258 l
159.6392 641.4258 157.0884 638.875 157.0884 635.7568 c
157.0884 632.9219 l
157.0884 629.8037 159.6392 627.2529 162.7573 627.2529 c
185.4341 627.2529 L
S0 0 0 0 K
183.7334 643.126 m
161.0566 643.126 l
157.9385 643.126 155.3877 640.5752 155.3877 637.457 c
155.3877 634.6221 l
155.3877 631.5039 157.9385 628.9531 161.0566 628.9531 c
183.7334 628.9531 L
SUu0 0 0 1 K
198.1899 641.4258 m
195.0728 641.4258 192.521 638.875 192.521 635.7568 c
192.521 632.9219 l
192.521 629.8037 195.0728 627.2529 198.1899 627.2529 c
215.1978 627.2529 l
218.3169 627.2529 220.8677 629.8037 220.8677 632.9219 c
220.8677 635.7568 l
220.8677 638.875 218.3169 641.4258 215.1978 641.4258 c
198.1899 641.4258 l
s0 0 0 0 K
196.4893 643.126 m
193.3721 643.126 190.8203 640.5752 190.8203 637.457 c
190.8203 634.6221 l
190.8203 631.5039 193.3721 628.9531 196.4893 628.9531 c
213.4971 628.9531 l
216.6162 628.9531 219.167 631.5039 219.167 634.6221 c
219.167 637.457 l
219.167 640.5752 216.6162 643.126 213.4971 643.126 c
196.4893 643.126 l
sUu0 0 0 1 K
269.0562 641.4258 m
265.939 641.4258 263.3862 638.875 263.3862 635.7568 c
263.3862 632.9219 l
263.3862 629.8037 265.939 627.2529 269.0562 627.2529 c
286.0659 627.2529 l
289.1831 627.2529 291.7339 629.8037 291.7339 632.9219 c
291.7339 635.7568 l
291.7339 638.875 289.1831 641.4258 286.0659 641.4258 c
269.0562 641.4258 l
s0 0 0 0 K
267.355 643.126 m
264.2378 643.126 261.6851 640.5752 261.6851 637.457 c
261.6851 634.6221 l
261.6851 631.5039 264.2378 628.9531 267.355 628.9531 c
284.3647 628.9531 l
287.4819 628.9531 290.0327 631.5039 290.0327 634.6221 c
290.0327 637.457 l
290.0327 640.5752 287.4819 643.126 284.3647 643.126 c
267.355 643.126 l
sUu0 0 0 1 K
304.4902 641.4258 m
301.3711 641.4258 298.8203 638.875 298.8203 635.7568 c
298.8203 632.9219 l
298.8203 629.8037 301.3711 627.2529 304.4902 627.2529 c
321.498 627.2529 l
324.6152 627.2529 327.166 629.8037 327.166 632.9219 c
327.166 635.7568 l
327.166 638.875 324.6152 641.4258 321.498 641.4258 c
304.4902 641.4258 l
s0 0 0 0 K
302.7891 643.126 m
299.6699 643.126 297.1191 640.5752 297.1191 637.457 c
297.1191 634.6221 l
297.1191 631.5039 299.6699 628.9531 302.7891 628.9531 c
319.7969 628.9531 l
322.9141 628.9531 325.4648 631.5039 325.4648 634.6221 c
325.4648 637.457 l
325.4648 640.5752 322.9141 643.126 319.7969 643.126 c
302.7891 643.126 l
sUu0 0 0 1 K
256.3003 641.4258 m
233.6235 641.4258 l
230.5063 641.4258 227.9546 638.875 227.9546 635.7568 c
227.9546 632.9219 l
227.9546 629.8037 230.5063 627.2529 233.6235 627.2529 c
256.3003 627.2529 L
S0 0 0 0 K
254.5996 643.126 m
231.9229 643.126 l
228.8057 643.126 226.2539 640.5752 226.2539 637.457 c
226.2539 634.6221 l
226.2539 631.5039 228.8057 628.9531 231.9229 628.9531 c
254.5996 628.9531 L
SUu0 0 0 1 K
361.1836 627.2529 m
361.1836 635.7568 l
361.1836 638.875 358.6328 641.4258 355.5137 641.4258 c
334.2539 641.4258 L
334.2539 627.2529 l
S0 0 0 0 K
359.4824 628.9531 m
359.4824 637.457 l
359.4824 640.5752 356.9316 643.126 353.8125 643.126 c
332.5527 643.126 L
332.5527 628.9531 l
SUu1 Ap
0 0 0 1 K
284.6479 634.3398 m
284.6479 634.3398 l
284.6479 634.3398 l
284.6479 634.3398 l
284.6479 634.3398 l
s0 0 0 0 K
282.9468 636.04 m
282.9468 636.04 l
282.9468 636.04 l
282.9468 636.04 l
282.9468 636.04 l
sUu0 0 0 1 K
305.9063 634.3398 m
305.9063 634.3398 l
305.9063 634.3398 l
305.9063 634.3398 l
305.9063 634.3398 l
s0 0 0 0 K
304.2051 636.04 m
304.2051 636.04 l
304.2051 636.04 l
304.2051 636.04 l
304.2051 636.04 l
sUu0 0 0 1 K
213.7808 634.3398 m
213.7808 634.3398 l
213.7808 634.3398 l
213.7808 634.3398 l
213.7808 634.3398 l
s0 0 0 0 K
212.0801 636.04 m
212.0801 636.04 l
212.0801 636.04 l
212.0801 636.04 l
212.0801 636.04 l
sUUuu0 Ap
0 0 0 1 K
185.6006 780.5928 m
162.9238 780.5928 l
159.8057 780.5928 157.2549 778.042 157.2549 774.9238 c
157.2549 772.0889 l
157.2549 768.9707 159.8057 766.4199 162.9238 766.4199 c
185.6006 766.4199 L
S0 0 0 0 K
183.8999 782.293 m
161.2231 782.293 l
158.105 782.293 155.5542 779.7422 155.5542 776.624 c
155.5542 773.7891 l
155.5542 770.6709 158.105 768.1201 161.2231 768.1201 c
183.8999 768.1201 L
SUu0 0 0 1 K
198.3564 780.5928 m
195.2393 780.5928 192.6875 778.042 192.6875 774.9238 c
192.6875 772.0889 l
192.6875 768.9707 195.2393 766.4199 198.3564 766.4199 c
215.3643 766.4199 l
218.4834 766.4199 221.0342 768.9707 221.0342 772.0889 c
221.0342 774.9238 l
221.0342 778.042 218.4834 780.5928 215.3643 780.5928 c
198.3564 780.5928 l
s0 0 0 0 K
196.6558 782.293 m
193.5386 782.293 190.9868 779.7422 190.9868 776.624 c
190.9868 773.7891 l
190.9868 770.6709 193.5386 768.1201 196.6558 768.1201 c
213.6636 768.1201 l
216.7827 768.1201 219.3335 770.6709 219.3335 773.7891 c
219.3335 776.624 l
219.3335 779.7422 216.7827 782.293 213.6636 782.293 c
196.6558 782.293 l
sUu0 0 0 1 K
269.2227 780.5928 m
266.1055 780.5928 263.5527 778.042 263.5527 774.9238 c
263.5527 772.0889 l
263.5527 768.9707 266.1055 766.4199 269.2227 766.4199 c
286.2324 766.4199 l
289.3496 766.4199 291.9004 768.9707 291.9004 772.0889 c
291.9004 774.9238 l
291.9004 778.042 289.3496 780.5928 286.2324 780.5928 c
269.2227 780.5928 l
s0 0 0 0 K
267.5215 782.293 m
264.4043 782.293 261.8516 779.7422 261.8516 776.624 c
261.8516 773.7891 l
261.8516 770.6709 264.4043 768.1201 267.5215 768.1201 c
284.5313 768.1201 l
287.6484 768.1201 290.1992 770.6709 290.1992 773.7891 c
290.1992 776.624 l
290.1992 779.7422 287.6484 782.293 284.5313 782.293 c
267.5215 782.293 l
sUu0 0 0 1 K
304.6563 780.5928 m
301.5371 780.5928 298.9863 778.042 298.9863 774.9238 c
298.9863 772.0889 l
298.9863 768.9707 301.5371 766.4199 304.6563 766.4199 c
321.6641 766.4199 l
324.7813 766.4199 327.332 768.9707 327.332 772.0889 c
327.332 774.9238 l
327.332 778.042 324.7813 780.5928 321.6641 780.5928 c
304.6563 780.5928 l
s0 0 0 0 K
302.9551 782.293 m
299.8359 782.293 297.2852 779.7422 297.2852 776.624 c
297.2852 773.7891 l
297.2852 770.6709 299.8359 768.1201 302.9551 768.1201 c
319.9629 768.1201 l
323.0801 768.1201 325.6309 770.6709 325.6309 773.7891 c
325.6309 776.624 l
325.6309 779.7422 323.0801 782.293 319.9629 782.293 c
302.9551 782.293 l
sUu0 0 0 1 K
256.4668 780.5928 m
233.79 780.5928 l
230.6729 780.5928 228.1211 778.042 228.1211 774.9238 c
228.1211 772.0889 l
228.1211 768.9707 230.6729 766.4199 233.79 766.4199 c
256.4668 766.4199 L
S0 0 0 0 K
254.7661 782.293 m
232.0894 782.293 l
228.9722 782.293 226.4204 779.7422 226.4204 776.624 c
226.4204 773.7891 l
226.4204 770.6709 228.9722 768.1201 232.0894 768.1201 c
254.7661 768.1201 L
SUu0 0 0 1 K
361.3496 766.4199 m
361.3496 774.9238 l
361.3496 778.042 358.7988 780.5928 355.6797 780.5928 c
334.4199 780.5928 L
334.4199 766.4199 l
S0 0 0 0 K
359.6484 768.1201 m
359.6484 776.624 l
359.6484 779.7422 357.0977 782.293 353.9785 782.293 c
332.7188 782.293 L
332.7188 768.1201 l
SUu1 Ap
0 0 0 1 K
284.8145 773.5068 m
284.8145 773.5068 l
284.8145 773.5068 l
284.8145 773.5068 l
284.8145 773.5068 l
s0 0 0 0 K
283.1133 775.207 m
283.1133 775.207 l
283.1133 775.207 l
283.1133 775.207 l
283.1133 775.207 l
sUu0 0 0 1 K
306.0723 773.5068 m
306.0723 773.5068 l
306.0723 773.5068 l
306.0723 773.5068 l
306.0723 773.5068 l
s0 0 0 0 K
304.3711 775.207 m
304.3711 775.207 l
304.3711 775.207 l
304.3711 775.207 l
304.3711 775.207 l
sUu0 0 0 1 K
213.9473 773.5068 m
213.9473 773.5068 l
213.9473 773.5068 l
213.9473 773.5068 l
213.9473 773.5068 l
s0 0 0 0 K
212.2466 775.207 m
212.2466 775.207 l
212.2466 775.207 l
212.2466 775.207 l
212.2466 775.207 l
sUUuu0 Ap
0 0 0 1 K
169.6499 720.5933 m
141.9043 720.5933 l
138.0894 720.5933 134.9683 718.043 134.9683 714.9243 c
134.9683 712.0894 l
134.9683 708.9707 138.0894 706.4204 141.9043 706.4204 c
169.6499 706.4204 L
S0 0 0 0 K
167.5693 722.2935 m
139.8237 722.2935 l
136.0088 722.2935 132.8877 719.7432 132.8877 716.6245 c
132.8877 713.7896 l
132.8877 710.6714 136.0088 708.1206 139.8237 708.1206 c
167.5693 708.1206 L
SUu0 0 0 1 K
185.2573 720.5933 m
181.4434 720.5933 178.3213 718.043 178.3213 714.9243 c
178.3213 712.0894 l
178.3213 708.9707 181.4434 706.4204 185.2573 706.4204 c
206.0669 706.4204 l
209.8828 706.4204 213.0039 708.9707 213.0039 712.0894 c
213.0039 714.9243 l
213.0039 718.043 209.8828 720.5933 206.0669 720.5933 c
185.2573 720.5933 l
s0 0 0 0 K
183.1763 722.2935 m
179.3623 722.2935 176.2407 719.7432 176.2407 716.6245 c
176.2407 713.7896 l
176.2407 710.6714 179.3623 708.1206 183.1763 708.1206 c
203.9858 708.1206 l
207.8022 708.1206 210.9233 710.6714 210.9233 713.7896 c
210.9233 716.6245 l
210.9233 719.7432 207.8022 722.2935 203.9858 722.2935 c
183.1763 722.2935 l
sUu0 0 0 1 K
271.9639 720.5933 m
268.1499 720.5933 265.0269 718.043 265.0269 714.9243 c
265.0269 712.0894 l
265.0269 708.9707 268.1499 706.4204 271.9639 706.4204 c
292.7754 706.4204 l
296.5894 706.4204 299.7109 708.9707 299.7109 712.0894 c
299.7109 714.9243 l
299.7109 718.043 296.5894 720.5933 292.7754 720.5933 c
271.9639 720.5933 l
s0 0 0 0 K
269.8828 722.2935 m
266.0688 722.2935 262.9453 719.7432 262.9453 716.6245 c
262.9453 713.7896 l
262.9453 710.6714 266.0688 708.1206 269.8828 708.1206 c
290.6943 708.1206 l
294.5083 708.1206 297.6289 710.6714 297.6289 713.7896 c
297.6289 716.6245 l
297.6289 719.7432 294.5083 722.2935 290.6943 722.2935 c
269.8828 722.2935 l
sUu0 0 0 1 K
315.3164 720.5933 m
311.502 720.5933 308.3809 718.043 308.3809 714.9243 c
308.3809 712.0894 l
308.3809 708.9707 311.502 706.4204 315.3164 706.4204 c
336.127 706.4204 l
339.9395 706.4204 343.0625 708.9707 343.0625 712.0894 c
343.0625 714.9243 l
343.0625 718.043 339.9395 720.5933 336.127 720.5933 c
315.3164 720.5933 l
s0 0 0 0 K
313.2363 722.2935 m
309.4199 722.2935 306.2988 719.7432 306.2988 716.6245 c
306.2988 713.7896 l
306.2988 710.6714 309.4199 708.1206 313.2363 708.1206 c
334.0449 708.1206 l
337.8594 708.1206 340.9805 710.6714 340.9805 713.7896 c
340.9805 716.6245 l
340.9805 719.7432 337.8594 722.2935 334.0449 722.2935 c
313.2363 722.2935 l
sUu0 0 0 1 K
256.3569 720.5933 m
228.6113 720.5933 l
224.7974 720.5933 221.6753 718.043 221.6753 714.9243 c
221.6753 712.0894 l
221.6753 708.9707 224.7974 706.4204 228.6113 706.4204 c
256.3569 706.4204 L
S0 0 0 0 K
254.2759 722.2935 m
226.5303 722.2935 l
222.7163 722.2935 219.5942 719.7432 219.5942 716.6245 c
219.5942 713.7896 l
219.5942 710.6714 222.7163 708.1206 226.5303 708.1206 c
254.2759 708.1206 L
SUu0 0 0 1 K
384.6836 706.4204 m
384.6836 714.9243 l
384.6836 718.043 381.5625 720.5933 377.7461 720.5933 c
351.7344 720.5933 L
351.7344 706.4204 l
S0 0 0 0 K
382.6016 708.1206 m
382.6016 716.6245 l
382.6016 719.7432 379.4805 722.2935 375.6641 722.2935 c
349.6523 722.2935 L
349.6523 708.1206 l
SUu1 Ap
0 0 0 1 K
291.0405 713.5078 m
291.0405 713.5078 l
291.0405 713.5078 l
291.0405 713.5078 l
291.0405 713.5078 l
s0 0 0 0 K
288.9595 715.2075 m
288.9595 715.2075 l
288.9595 715.2075 l
288.9595 715.2075 l
288.9595 715.2075 l
sUu0 0 0 1 K
317.0508 713.5078 m
317.0508 713.5078 l
317.0508 713.5078 l
317.0508 713.5078 l
317.0508 713.5078 l
s0 0 0 0 K
314.9688 715.2075 m
314.9688 715.2075 l
314.9688 715.2075 l
314.9688 715.2075 l
314.9688 715.2075 l
sUu0 0 0 1 K
204.333 713.5078 m
204.333 713.5078 l
204.333 713.5078 l
204.333 713.5078 l
204.333 713.5078 l
s0 0 0 0 K
202.2524 715.2075 m
202.2524 715.2075 l
202.2524 715.2075 l
202.2524 715.2075 l
202.2524 715.2075 l
sUUuu0 Ap
0 0 0 1 K
4 w185.3848 566.1685 m
147.0908 566.1685 l
141.8252 566.1685 137.5176 562.479 137.5176 557.9688 c
137.5176 553.8682 l
137.5176 549.3574 141.8252 545.668 147.0908 545.668 c
185.3848 545.668 L
S0 0 0 0 K
182.5127 568.6279 m
144.2188 568.6279 l
138.9531 568.6279 134.6455 564.9385 134.6455 560.4277 c
134.6455 556.3271 l
134.6455 551.8169 138.9531 548.1274 144.2188 548.1274 c
182.5127 548.1274 L
SUu0 0 0 1 K
206.9258 566.1685 m
201.6616 566.1685 197.3525 562.479 197.3525 557.9688 c
197.3525 553.8682 l
197.3525 549.3574 201.6616 545.668 206.9258 545.668 c
235.6465 545.668 l
240.9141 545.668 245.2217 549.3574 245.2217 553.8682 c
245.2217 557.9688 l
245.2217 562.479 240.9141 566.1685 235.6465 566.1685 c
206.9258 566.1685 l
s0 0 0 0 K
204.0537 568.6279 m
198.7896 568.6279 194.4805 564.9385 194.4805 560.4277 c
194.4805 556.3271 l
194.4805 551.8169 198.7896 548.1274 204.0537 548.1274 c
232.7749 548.1274 l
238.042 548.1274 242.3496 551.8169 242.3496 556.3271 c
242.3496 560.4277 l
242.3496 564.9385 238.042 568.6279 232.7749 568.6279 c
204.0537 568.6279 l
sUu0 0 0 1 K
326.5977 566.1685 m
321.333 566.1685 317.0225 562.479 317.0225 557.9688 c
317.0225 553.8682 l
317.0225 549.3574 321.333 545.668 326.5977 545.668 c
355.3213 545.668 l
360.5859 545.668 364.8936 549.3574 364.8936 553.8682 c
364.8936 557.9688 l
364.8936 562.479 360.5859 566.1685 355.3213 566.1685 c
326.5977 566.1685 l
s0 0 0 0 K
323.7246 568.6279 m
318.4609 568.6279 314.1494 564.9385 314.1494 560.4277 c
314.1494 556.3271 l
314.1494 551.8169 318.4609 548.1274 323.7246 548.1274 c
352.4492 548.1274 l
357.7129 548.1274 362.0205 551.8169 362.0205 556.3271 c
362.0205 560.4277 l
362.0205 564.9385 357.7129 568.6279 352.4492 568.6279 c
323.7246 568.6279 l
sUu0 0 0 1 K
386.4336 566.1685 m
381.167 566.1685 376.8594 562.479 376.8594 557.9688 c
376.8594 553.8682 l
376.8594 549.3574 381.167 545.668 386.4336 545.668 c
415.1563 545.668 l
420.4199 545.668 424.7275 549.3574 424.7275 553.8682 c
424.7275 557.9688 l
424.7275 562.479 420.4199 566.1685 415.1563 566.1685 c
386.4336 566.1685 l
s0 0 0 0 K
383.5615 568.6279 m
378.2939 568.6279 373.9863 564.9385 373.9863 560.4277 c
373.9863 556.3271 l
373.9863 551.8169 378.2939 548.1274 383.5615 548.1274 c
412.2832 548.1274 l
417.5469 548.1274 421.8545 551.8169 421.8545 556.3271 c
421.8545 560.4277 l
421.8545 564.9385 417.5469 568.6279 412.2832 568.6279 c
383.5615 568.6279 l
sUu0 0 0 1 K
305.0566 566.1685 m
266.7622 566.1685 l
261.4985 566.1685 257.189 562.479 257.189 557.9688 c
257.189 553.8682 l
257.189 549.3574 261.4985 545.668 266.7622 545.668 c
305.0566 545.668 L
S0 0 0 0 K
302.1846 568.6279 m
263.8901 568.6279 l
258.6265 568.6279 254.3174 564.9385 254.3174 560.4277 c
254.3174 556.3271 l
254.3174 551.8169 258.6265 548.1274 263.8901 548.1274 c
302.1846 548.1274 L
SUu0 0 0 1 K
482.1729 545.668 m
482.1729 557.9688 l
482.1729 562.479 477.8652 566.1685 472.5977 566.1685 c
436.6963 566.1685 L
436.6963 545.668 l
S0 0 0 0 K
479.2998 548.1274 m
479.2998 560.4277 l
479.2998 564.9385 474.9922 568.6279 469.7256 568.6279 c
433.8242 568.6279 L
433.8242 548.1274 l
SUu1 Ap
0 0 0 1 K
352.9268 555.9189 m
352.9268 555.9189 l
352.9268 555.9189 l
352.9268 555.9189 l
352.9268 555.9189 l
s0 0 0 0 K
350.0547 558.3784 m
350.0547 558.3784 l
350.0547 558.3784 l
350.0547 558.3784 l
350.0547 558.3784 l
sUu0 0 0 1 K
388.8252 555.9189 m
388.8252 555.9189 l
388.8252 555.9189 l
388.8252 555.9189 l
388.8252 555.9189 l
s0 0 0 0 K
385.9521 558.3784 m
385.9521 558.3784 l
385.9521 558.3784 l
385.9521 558.3784 l
385.9521 558.3784 l
sUu0 0 0 1 K
233.2539 555.9189 m
233.2539 555.9189 l
233.2539 555.9189 l
233.2539 555.9189 l
233.2539 555.9189 l
s0 0 0 0 K
230.3818 558.3784 m
230.3818 558.3784 l
230.3818 558.3784 l
230.3818 558.3784 l
230.3818 558.3784 l
sUUu0 Ap
0 0 0 1 K
2 w163.1582 649.647 m
180.3291 649.647 l
183.4473 649.647 185.9985 650.9043 185.9985 652.4414 c
185.9985 653.9785 183.4473 655.2358 180.3291 655.2358 c
163.1582 655.2358 L
S193.7012 655.2358 m
193.7012 653.9785 193.7012 652.4414 v
193.7012 650.9043 196.2524 649.647 199.3706 649.647 c
203.4385 649.647 l
206.5566 649.647 209.1079 650.9043 209.1079 652.4414 c
209.1079 653.9785 209.1079 655.2358 Y
S216.8101 655.2358 m
216.8101 649.647 l
S224.5127 655.2358 m
224.5127 653.9785 224.5127 652.4414 v
224.5127 650.9043 227.064 649.647 230.1821 649.647 c
239.9185 649.647 L
S239.9185 655.2358 m
255.3237 655.2358 l
S247.6211 649.647 m
247.6211 655.2358 l
S1 Ap
216.8101 658.4595 m
216.8101 658.4595 l
216.8101 658.4595 l
216.8101 658.4595 l
216.8101 658.4595 l
sUu0 Ap
278.2646 652.7759 m
278.2646 649.9814 l
S301.2793 655.5698 m
301.2793 649.981 l
S332.0898 655.5698 m
332.0898 649.981 l
S332.0898 652.7754 m
347.4951 652.7754 l
S347.4961 655.5698 m
347.4961 649.981 l
S308.9805 655.5698 m
324.3877 655.5698 l
S316.6855 649.981 m
316.6855 655.5698 l
S270.4678 655.5708 m
270.4678 654.313 270.4678 652.7764 v
270.4678 651.2393 273.0186 649.9814 276.1367 649.9814 c
287.9082 649.9814 l
291.0264 649.9814 293.5771 651.2393 293.5771 652.7764 c
293.5771 654.313 293.5771 655.5708 Y
S1 Ap
301.2793 658.7935 m
301.2793 658.7935 l
301.2793 658.7935 l
301.2793 658.7935 l
301.2793 658.7935 l
sUu0 Ap
3 w177.748 587.7261 m
174.6299 587.7261 172.0786 585.459 172.0786 582.6875 c
172.0786 579.9165 174.6299 577.6494 177.748 577.6494 c
194.7554 577.6494 l
197.8735 577.6494 200.4248 579.9165 200.4248 582.6875 c
200.4248 585.459 197.8735 587.7261 194.7554 587.7261 c
177.748 587.7261 l
s207.5112 587.7261 m
207.5112 585.459 207.5112 582.6875 v
207.5112 579.9165 210.0625 577.6494 213.1807 577.6494 c
230.188 577.6494 l
233.3062 577.6494 235.8574 579.9165 235.8574 582.6875 c
235.8574 585.459 235.8574 587.7261 Y
S221.6841 582.688 m
221.6841 577.6494 l
S271.291 587.7261 m
248.6143 587.7261 l
245.4961 587.7261 242.9448 585.459 242.9448 582.6875 c
242.9448 579.9165 245.4961 577.6494 248.6143 577.6494 c
271.291 577.6494 L
S242.9448 582.688 m
250.0313 582.688 l
S342.1572 587.7261 m
319.4805 587.7261 l
316.3623 587.7261 313.8115 585.459 313.8115 582.6875 c
313.8115 579.9165 316.3623 577.6494 319.4805 577.6494 c
342.1572 577.6494 L
S313.8115 582.688 m
320.8975 582.688 l
S278.377 587.7261 m
301.0547 587.7261 l
304.1729 587.7261 306.7236 586.5928 306.7236 585.207 c
306.7236 583.8213 304.1729 582.688 301.0547 582.688 c
298.2197 582.688 l
295.1021 582.688 294.9546 581.8335 297.8926 580.7891 c
306.7236 577.6494 L
S136.6455 587.7261 m
159.3228 587.7261 l
162.4409 587.7261 164.9922 586.5928 164.9922 585.207 c
164.9922 583.8213 162.4409 582.688 159.3228 582.688 c
156.4883 582.688 l
153.3701 582.688 150.8188 581.5542 150.8188 580.1689 c
150.8188 578.7832 150.8188 577.6494 Y
S349.2432 587.7261 m
371.9209 587.7261 l
375.0391 587.7261 377.5898 585.459 377.5898 582.6875 c
377.5898 579.9165 375.0391 577.6494 371.9209 577.6494 c
349.2432 577.6494 L
S349.2432 587.7261 m
349.2432 577.6499 l
S413.0225 587.7261 m
435.7002 587.7261 l
438.8184 587.7261 441.3691 585.459 441.3691 582.6875 c
441.3691 579.9165 438.8184 577.6494 435.7002 577.6494 c
413.0225 577.6494 L
S434.2822 582.688 m
441.3691 582.688 l
S448.4561 587.7261 m
448.4561 586.5928 448.4561 585.207 v
448.4561 583.8213 451.0068 582.688 454.125 582.688 c
471.1328 582.688 l
474.251 582.688 476.8018 583.8213 476.8018 585.207 c
476.8018 586.5928 476.8018 587.7261 Y
S462.6289 582.688 m
462.6289 577.6494 l
SUu0 0 0 0 K
176.748 590.7261 m
173.6299 590.7261 171.0786 588.459 171.0786 585.6875 c
171.0786 582.9165 173.6299 580.6494 176.748 580.6494 c
193.7554 580.6494 l
196.8735 580.6494 199.4248 582.9165 199.4248 585.6875 c
199.4248 588.459 196.8735 590.7261 193.7554 590.7261 c
176.748 590.7261 l
s206.5112 590.7261 m
206.5112 588.459 206.5112 585.6875 v
206.5112 582.9165 209.0625 580.6494 212.1807 580.6494 c
229.188 580.6494 l
232.3062 580.6494 234.8574 582.9165 234.8574 585.6875 c
234.8574 588.459 234.8574 590.7261 Y
S220.6841 585.688 m
220.6841 580.6494 l
S270.291 590.7261 m
247.6143 590.7261 l
244.4961 590.7261 241.9448 588.459 241.9448 585.6875 c
241.9448 582.9165 244.4961 580.6494 247.6143 580.6494 c
270.291 580.6494 L
S241.9448 585.688 m
249.0313 585.688 l
S341.1572 590.7261 m
318.4805 590.7261 l
315.3623 590.7261 312.8115 588.459 312.8115 585.6875 c
312.8115 582.9165 315.3623 580.6494 318.4805 580.6494 c
341.1572 580.6494 L
S312.8115 585.688 m
319.8975 585.688 l
S277.377 590.7261 m
300.0547 590.7261 l
303.1729 590.7261 305.7236 589.5928 305.7236 588.207 c
305.7236 586.8213 303.1729 585.688 300.0547 585.688 c
297.2197 585.688 l
294.1021 585.688 293.9546 584.8335 296.8926 583.7891 c
305.7236 580.6494 L
S135.6455 590.7261 m
158.3228 590.7261 l
161.4409 590.7261 163.9922 589.5928 163.9922 588.207 c
163.9922 586.8213 161.4409 585.688 158.3228 585.688 c
155.4883 585.688 l
152.3701 585.688 149.8188 584.5542 149.8188 583.1689 c
149.8188 581.7832 149.8188 580.6494 Y
S348.2432 590.7261 m
370.9209 590.7261 l
374.0391 590.7261 376.5898 588.459 376.5898 585.6875 c
376.5898 582.9165 374.0391 580.6494 370.9209 580.6494 c
348.2432 580.6494 L
S348.2432 590.7261 m
348.2432 580.6499 l
S412.0225 590.7261 m
434.7002 590.7261 l
437.8184 590.7261 440.3691 588.459 440.3691 585.6875 c
440.3691 582.9165 437.8184 580.6494 434.7002 580.6494 c
412.0225 580.6494 L
S433.2822 585.688 m
440.3691 585.688 l
S447.4561 590.7261 m
447.4561 589.5928 447.4561 588.207 v
447.4561 586.8213 450.0068 585.688 453.125 585.688 c
470.1328 585.688 l
473.251 585.688 475.8018 586.8213 475.8018 588.207 c
475.8018 589.5928 475.8018 590.7261 Y
S461.6289 585.688 m
461.6289 580.6494 l
SULB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
