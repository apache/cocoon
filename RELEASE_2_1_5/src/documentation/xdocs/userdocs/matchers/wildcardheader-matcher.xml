<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 1999-2004 The Apache Software Foundation

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.0//EN" "document-v10.dtd">

<!--
  <![CDATA[ CVS Version: $Id: wildcardheader-matcher.xml,v 1.6 2004/05/08 08:57:58 crossley Exp $ 
  ]]>
-->

<document>
  <header>
    <title>WildcardHeader-Matcher in Cocoon</title>
    <version>0.9</version>
    <type>Technical document</type>
    <authors>
      <person name="Bernhard Huber" email="huber@apache.org"/>
    </authors>
    <abstract>This document describes the WildcardHeaderMatcher of Cocoon.</abstract>
  </header>
  <body>
    <s1 title="WildcardHeaderMatcher">
      <table>
        <tr>
          <td>NAME</td><td>header-match, referer-match</td>
        </tr>
        <tr>
          <td>WHAT</td><td>The <code>WildcardHeaderMatcher</code> matches a header value
            against a wildcard expression..
          </td>
        </tr>
        <tr>
          <td>TYPE</td><td>Matcher, Sitemap Component</td>
        </tr>
        <tr>
          <!-- choose Core, the block name, or Scratchpad 
            depending on where WildcardHeaderMatcher sources live
          -->
          <td>BLOCK</td><td>Core</td>
        </tr>
        <tr>
          <td>CLASS</td><td>org.apache.cocoon.matching.WildcardHeaderMatcher</td>
        </tr>
        <!-- uncomment folling tr iff WildcardHeaderMatcher is deprecated -->
        <!--tr>
          <td>DEPRECATED</td><td>Cocoon 2.0, 2.1</td>
        </tr-->
        <tr>
          <td>SINCE</td><td>Cocoon 2.0</td>
        </tr>
        <tr>
          <td>CACHEABLE</td><td>not applicable</td>
        </tr>
      </table>
    </s1>
    <s1 title="Description">
      <p>
        The <code>WildcardHeaderMatcher</code> matches a wildcard pattern against a 
        header value of the request.
      </p>
    </s1>
    <s1 title="Usage">
      <p>
        The <code>WildcardHeaderMatcher</code> is used to apply the same sitemap processing
        to a group of requested URIs. A requested URI belongs to this group iff
        the header value is matched by the specified pattern.  
      </p>
      <p>
        The snippet below applies to all requested URIs having a header referer value matching
        the wildcard pattern <code>http://foo.bar:8080/documentation/*.html</code> the specified pipeline processing.
      </p>
      <p>
        The generator retrieves the xml document having extension <code>.xml</code>,
        its basename is the request URI path, stripped off the prefix <code>page-</code>.
      </p>
      <s2 title="Sitemap pipeline examples">
        <p>
          The snippet below uses the <code>WildcardHeaderMatcher</code> for matching
          the referer header value.
        </p>
        <source><![CDATA[
<map:pipelines>
  <map:pipeline>
    ....
    <map:match type="referer-match" pattern=http://foo.bar:8080/documentation/*.html">
      <!-- pipeline processing generator, transformer, serializing
      <map:generator src="xdocs/{../1}.xml"/>
      <map:transformer src="stylesheet/document2html"/>
        <map:parameter name="prev" value="{1}.html"/>
      <map:transformer/>
      <map:serialize/>
    </map:match>
    ...
  </map:pipeline>
  ...
        ]]></source>
      </s2>
      <s2 title="Sitemap component configuration example">
        <p>
          The <code>WildcardHeaderMatcher</code> sitemap configuration consists of
          choosing a name, and specifying the src attribute of the fully qualified name of the 
          WildcardHeaderMatcher class.
        </p>
        <p>
          Moreover sub element name <code>header-name</code> specifies the name of the
          header. Its value is matched against the specified pattern.
        </p>
        <source><![CDATA[
<map:matchers...
  <map:matcher name="referer-match" 
    src="org.apache.cocoon.matching.WildcardHeaderMatcher"
    logger="sitemap.matcher.referer-match" 
  />
    <header-name>referer</header-name>
    ...
  </map:matcher>
...
]]></source>
      </s2>
      <s2 title="Configuration">
        <p>
          The <code>WildcardHeaderMatcher</code> is configured by the 
          subelement <code>header-name</code>, specifying the name of the header attribute
          name.
        </p>
      </s2>
      <s2 title="Setup">
        <p>
          The <code>WildcardHeaderMatcher</code> gets the wildcard pattern from
          its pattern attribute.
        </p>
      </s2>
      <s2 title="Effect on Object Model and Sitemap Parameters">
        <p>
          See a detailed discussion in
          <link href="wildcarduri-matcher.html">WildcardURIMatcher</link>
        </p>
      </s2>
    </s1>
    <s1 title="Bugs/Caveats">
      <p>
        The use of <code>parameter-name</code> instead of <code>header-name</code> is deprecated. 
      </p>
    </s1>
    <s1 title="History">
      <p>
        12-28-02: initial creation
      </p>
    </s1>
    <s1 title="See also">
      <p>
        A general documentation about matchers is available at
        <link href="../concepts/matchers_selectors.html">Matchers and Selectors</link>.
      </p>
      <p>
        For a reference of available header names
        see <link href="http://www.ietf.org/rfc/rfc2068.txt">RFC 2068</link>, especially
        if Cocoon's run time environment is an http servlet environment. 
      </p>
    </s1>
  </body>
</document>

