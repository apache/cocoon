<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 1999-2004 The Apache Software Foundation

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.0//EN" "document-v10.dtd">

<document>
 <header>
   <title>Linkstatus - assess and mend any broken hyperlinks</title>
  <subtitle>Overview</subtitle>
  <authors>
   <person name="David Crossley" email="crossley@apache.org"/>
  </authors>
 </header>

 <body>

<s1 title="Overview">

<p>
Cocoon has various tools to ensure the internal links. However, there will
still be occasional problems. Please help to keep it robust.
</p>

<p>
External links are a bit trickier. It is not really fair to banish them just
because they were not accessible on the day that a link verification was run.
Actually the external link situation is going to become an
issue, now that we have accepted a whole section of 
<link href="http://cocoon.apache.org/link/index.html">Cocoon Links</link>
docs devoted to external resources.
</p>

<p>
Robust internal links is the main issue. However, how far
do we go down the road of external link management? Please help to develop
automated solutions.
</p>
</s1>

<s1 title="Assessment tools">
<s2 title="build docs">

<p>
Please do "build docs" before creating or committing a patch. The build will
fail on internal breaks. (Not sure about links to and within Javadocs.)
</p>
</s2>

<s2 title="LinkStatus Generator">
<p>
This Cocoon Sample will start at the home page of the local documentation
webapp and traverse each internal link, reporting its status in a colour-coded
table.
</p>

<p>
See <link href="../overview.html#samples">Cocoon Samples</link> in your
local webapp distribution via
<code>http://localhost:8080/cocoon/samples/linkstatus/</code>
(v2.1 only)
</p>
</s2>

<s2 title="LinkAlarm web service">

<note>We cannot rely on using the LinkAlarm service (a fee-based professional
service). We need to develop our own capability.
</note>

<p>
The excellent LinkAlarm service is used after each public release of Cocoon
to help discover any broken external links on the final website. 
Please see the README file at
<link href="linkalarm-readme.txt">linkalarm-readme.txt</link>
and help to attend to any issues.
</p>

<p>
The LinkAlarm service traverses the Cocoon website occasionally. The full
set of reports are at
<link href="http://reports.linkalarm.com/373104199608/">http://reports.linkalarm.com/373104199608/</link>
</p>

<p>
There is a new webapp sample that retrieves the summary report
<code>links.broken.txt</code> and pretty-prints the list.
See <link href="../overview.html#samples">Cocoon Samples</link> in your
local webapp distribution via
<code>http://localhost:8080/cocoon/samples/linkstatus/</code>
(v2.1 only)
</p>
</s2>
</s1>

<s1 title="Further development">
<p>
We need to take more advantage of the capabilities of Cocoon's LinkStatus
Generator. Perhaps this can be incorporated into a custom build target for
docs.
</p>
   
</s1>

 </body>
</document>
