<?xml version="1.0" encoding="ISO-8859-1"?>

<xsp:page language="java" xmlns:xsp="http://apache.org/xsp">

  <page>
    <title>Welcome to Cocoon XML Search using Lucene</title>
    <content>
      <a href="http://jakarta.apache.org/lucene/"><img border="0" alt="Lucene Logo" src="images/lucene_green_300.gif"/></a>
      
      <h1>XML Search</h1>
      
      <p>
        Welcome to Cocoon XML Search. This page introduces Cocoon searching
        and offers the following samples:
      </p>
      <ul>
        <li>Creating a Lucene index to enable searching
        </li>
        <li>Searching through a once created Lucene index using various means:
        </li>
        <li>Searching a Lucene index using <em>XSP</em>
        </li>
        <li>Searching a Lucene index using <em>SearchGenerator</em>
        </li>
      </ul>
      
      <h2>Creating an Index</h2>
      <p>
        You must create a Lucene index first, before you can do the searching.
        You can create a Lucene index either by crawling, or by using
        LuceneIndexTransformer.
      </p>

      <h3>Creating Index By Crawling</h3>
      <p>
        Create an index by specifying a base url from which to start
        crawling (the indexer will follow the links to build its content).
        The base url should be 
        <a href="../../docs/userdocs/concepts/views.html">cocoon-view</a>
        aware of content-labels
        <strong>links</strong>, and <strong>content</strong>.
        For example you might use the base URL 
        <code>http://localhost:8888/docs/index.html</code>
      </p>
      <p>
        This following page allows you to <a href="create">create</a> an
        index, named index.
      </p>

      <h3>Creating Index2 By Transforming</h3>
      <p>
        Create an index by using LuceneIndexTransformer. 
        An XSP Page gathers all files of directory docs/xdocs, includes all
        the files and pipes it through LuceneIndexTransformer, creating an
        index, named index2.
      </p>
      <p>
        This following page allows you to <a href="document-files.xsp">create</a> an
        index, named index2.
      </p>

      <h2>Searching</h2>
      <p>
        If you have created a Lucene index, you can search the created index.
      </p>
      <h3>Searching Index</h3>
      <p>
        Enter a query and search the Lucene index that you have created
        - using <a href="search?queryString=lucene">XSP</a>.
      </p>
      <p>
        Enter a query and search the Lucene index that you have created
        - using <a href="findIt?queryString=lucene">Cocoon Generators</a>.
      </p>

      <h3>Searching Index2</h3>
      <p>
        Enter a query and search the Lucene index2 that you have created
        - using <a href="findIt2?queryString=cocoon">Cocoon Generators</a>.
      </p>
      
      <h2>Internals</h2>
      <p>
        Cocoon XML search uses the
        <a href="http://jakarta.apache.org/lucene/">Jakarta Lucene</a>
        indexing and search engine.
        The Cocoon documentation
        <a href="../../docs/userdocs/concepts/xmlsearching.html">explains</a> how it is implemented within Cocoon. Look behind the scenes of this
        example to find out more.
      </p>

      <!--center>
        <form name="search" action="search" method="get">
          <table>
            <tr><td></td>
              <td>
                <input name="queryString" size="44"/>&#160;<input type="submit" value="Search"/>
              </td>
            </tr>
            <tr>
              <td>Index</td>
              <td>
                <select name="index">
                  <option value="index">index</option>
                  <option value="index-1">index-1</option>
                  <option value="index-2">index-2</option>
                  <option value="index-3">index-3</option>
                </select>
              </td>
            </tr>
            <tr>
              <td>Analyzer Class</td>
              <td>
                <select name="analyzerClassName">
                  <option value="org.apache.lucene.analysis.StopAnalyzer">StopAnalyzer</option>
                  <option value="org.apache.lucene.analysis.standard.StandardAnalyzer">StandardAnalyzer</option>
                  <option value="org.apache.lucene.analysis.de.GermanAnalyzer">GermanAnalyzer</option>
                  <option value="org.apache.lucene.analysis.SimpleAnalyzer">SimpleAnalyzer</option>
                </select>
              </td>
            </tr>
          </table>
        </form>
      </center-->
    </content>
  </page>
</xsp:page>

