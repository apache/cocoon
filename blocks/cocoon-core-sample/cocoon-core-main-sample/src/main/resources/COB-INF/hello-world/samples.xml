<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<!--
  - $Id$
  -->
<samples name="Hello, World!">

  <links>
    <link role="see-also" href="sitemap.xmap">Sitemap</link>
  </links>

  <group name="Back">
    <sample name="Back" href="../">
      Back to the samples home page.
    </sample>
  </group>

  <group name="About">
    <note>All examples on this page have been created using a single data source,
      hello.xml file.
    </note>
    <sample name="XML" href="hello.xml">
      Hello world XML document.
    </sample>
  </group>

  <group name="Multichannel Hello World!">
    <sample name="HTML" href="hello.html">
      This page shows how a simple XML page can be presented in HTML.
    </sample>
    <sample name="XHTML" href="hello.xhtml">
      This is the same page as above, but rendered in XHTML (which is the
      well-formed XML version of HTML). Note that both the page and the
      stylesheet used to transform it didn't change from the previous
      example, Cocoon does everything for you by setting a different serializer.
    </sample>
    <sample name="WML" href="hello.wml">
      By changing the stylesheet, it's possible to render the same content
      for consumption on different devices. Here, for example, it's rendered
      in WML (Wireless Markup Language) which is the markup language used
      in WAP-enabled agents (such as PDA or cell phones).
    </sample>
    <sample name="CHTML" href="hello.chtml">
      Or, as CHTML (Compact HTML), which is used by i-Mode compatible cell phones.
    </sample>
    <sample name="SVG" href="hello.svg">
      Given the power of XSLT and the fact that many presentation languages are
      based on the XML syntax, it is possible to generate even vector graphics
      from your content. Here is an example that renders to SVG (Scalable Vector
      Graphics). (You need an SVG plugin, or an SVG-capable browser to see this.)
    </sample>
    <sample name="SWF" href="hello.swf">
      Flash is everywhere. In fact many people have the plugin installed.
      Let Cocoon configure your flash movie. A little action script and you set.
      See this sample how it works.
    </sample>
    <sample name="Plain Text" href="hello.txt">
      Sometimes you don't need to be very fancy, so here is a plain text
      version of your content.
    </sample>
    <sample name="VRML" href="hello.wrl">
      But sometimes you need to be fancy to impress people, so here is a 3D
      version of your content (you need a VRML plugin in your browser to visualize
      this).
    </sample>
    <sample name="VoiceML" href="hello.vml">
      Or sometimes you don't even have a display in front of you, so you want to
      hear your content, so here is a VoiceML representation of your content (you
      need a VoiceML-capable agent to hear this).
    </sample>
    <sample name="Zip archive" href="hello.zip">
      Or you might want your information nicely packaged as a zip file.
    </sample>
  </group>

  <group name="Hello Office!">
    <sample name="OpenOffice Writer" href="hello.sxw">
      This document shows how a simple XML page can be presented in OpenOffice Writer file format.
    </sample>
    <sample name="OpenOffice Calc" href="hello.sxc">
      This spreadsheet shows how a simple XML page can be presented in OpenOffice Calc file format.
    </sample>
    <sample name="OpenOffice Impress" href="hello.sxi">
      This presentation shows how a simple XML page can be presented in OpenOffice Impress file format.
    </sample>
    <sample name="OpenOffice Draw" href="hello.sxd">
      This drawing shows how a simple XML page can be presented in OpenOffice Draw file format.
    </sample>
    <sample name="MS Word 2003" href="hello-worldml.doc">
      This document shows how a simple XML page can be presented in MS Word 2003 XML file format.
    </sample>
  </group>

  <group name="Hello World Web Service">
    <sample name="Web Service" href="hello.service">
      Here is a super-simple web service that says hi!
    </sample>
    <sample name="Web Service WSDL Descriptor" href="hello.service/WSDL">
      And this is the corresponding WSDL descriptor.
    </sample>
  </group>

  <!--
    TODO
    These samples will need to add the blocks to the pom as dependency
    and to add them to the servlet:connection.
    Is this what we want here?
  -->
  <!--
  <group name="Blocks Hello World!">
    <note>
      These samples only work if the corresponding blocks are activated
      at build time.
    </note>
    <sample name="RTF" href="servlet:jfor:/hello.rtf">
      Hello from the jfor block in Rich Text Format.
    </sample>
    <sample name="PDF" href="servlet:fop:/hello.pdf">
      Hello from the fop block in Portable Document Format.
    </sample>
    <sample name="PS" href="servlet:fop:/hello.ps">
      Hello from the fop block in PostScript format.
    </sample>
    <sample name="PDF" href="servlet:itext:/hello.pdf">
      Another hello in Portable Document Format, from the itext block.
    </sample>
    <sample name="JPEG" href="servlet:batik:/hello.jpeg">
      Hello from the batik block in JPEG.
    </sample>
    <sample name="PNG" href="servlet:batik:/hello.png">
      Hello from the batik block in PNG.
    </sample>
    <sample name="XLS" href="servlet:poi:/hello.xls">
      Hello in Excel spreadsheet format from the POI block.
    </sample>
    <sample name="HTML" href="servlet:stx:/hello.html">
      Hello in the HTML format, but now with help from stx block.
    </sample>
  </group>
  -->
</samples>
