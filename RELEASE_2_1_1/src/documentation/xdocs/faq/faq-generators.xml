<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE faqs PUBLIC "-//APACHE//DTD FAQ V1.0//EN" "../dtd/faq-v10.dtd">

<faqs title="Cocoon Sitemap Generator FAQs">

<faq>
 <question>
  What is a generator?
 </question>

 <answer>
  <p>A generator is the starting point of an xml pipeline. It generates XML content as SAX events and initializes pipeline processing. Every pipeline match containing a generator must be terminated by a serializer.
  </p>
  <p>
In the sitemap file, each generator has a unique name which is mapped to a java class. One generator name must be declared as the default generator. Each generator may have additional configuration information specified in child elements.
  </p>
  <p>
For conceptual information on generators see the user's guide document <link href="../userdocs/user/sitemap/preface.html">The Sitemap</link>. For detailed descriptions about all of the available Cocoon generators, see the user's guide document <link href="../userdocs/user/sitemap/sitemap.html">Generators in Cocoon</link>. You may also wish to consult the Cocoon API documentation.
  </p>
</answer>
</faq>

<faq>
 <question>
  How can I write my own generator?
 </question>

 <answer>
  <p>See the tutorial <link href="../tutorial/tutorial-rmi-generator.html">Writing a Cocoon 2 generator</link>.
  </p>
</answer>
</faq>

<faq>
 <question>
  How can I dynamically specify the source for my generator?
 </question>

 <answer>
  <p>For example, I want the &lt;generate&gt;'s src attribute to be defined based on a request.
  </p>
  <p>
Here are two solutions (depending on your version of Cocoon):
  </p>

  <p>
(1) RequestParamAction (2.0.x + 2.1)
  </p>

<source><![CDATA[
 <map:match pattern="tba/*">
    <map:act type="request">
	  <map:parameter name="parameters" value="true"/>
	  <map:generate src="{page}"/>
 	  <map:transform src="docs/samples/tba/redirect.xsl"/>
 	  <map:serialize type="html"/>
    </map:act>
    <!-- else ? -->
 </map:match>
]]></source>

  <p>     
Adding &lt;map:act type="request"&gt; and 
&lt;map:parameter name="parameters" value="true"/&gt; makes it
possible to get the page request attribute.
Then, you can define the src attribute by using the value of the page attribute
like this: &lt;map:generate src="{page}"/&gt;.
  </p>

  <p>
(2) InputModules (2.1)
  </p>
  
<source><![CDATA[
 <map:match pattern="tba/*">
 	<map:generate src="{request:page}"/>
 	<map:transform src="docs/samples/tba/redirect.xsl"/>
 	<map:serialize type="html"/>
 </map:match>
]]></source>

  <p>
In addition, you may want to use ResourceExistsAction to check whether 
the provided page exists.  
  </p>
</answer>
</faq>
</faqs>

 
