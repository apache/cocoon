<?xml version="1.0" encoding="UTF-8"?><!--
      Licensed to the Apache Software Foundation (ASF) under one
      or more contributor license agreements.  See the NOTICE file
      distributed with this work for additional information
      regarding copyright ownership.  The ASF licenses this file
      to you under the Apache License, Version 2.0 (the
      "License"); you may not use this file except in compliance
      with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing,
      software distributed under the License is distributed on an
      "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
      KIND, either express or implied.  See the License for the
      specific language governing permissions and limitations
      under the License.
    --><document xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/XDOC/2.0" xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd"><properties><title>Cocoon Core - Introduction</title><author email="cocoon-docs@apache.org">Apache Cocoon Documentation Team</author></properties><body>
         <div id="contentBody"><div id="bodyText"><h1 class="docTitle">Introduction</h1><p>Cocoon has advanced control flow, the ability to describe the order of Web
pages that have to be sent to the client, at any given point in time in an
application.</p><p>Traditional Web applications try to model the control flow of a Web
application by modeling the application as a finite state machine (FSM). In this
model, the Web application is composed of multiple states, but the application
can be only in one state at a time. Any request received by the application
transitions it into a different state. During such a transition, the application
may perform various side-effects, such as updating objects either in memory or
in a database. Another important side-effect of such a transition is that a Web
page is sent back to the client browser.</p><p>For simple Web applications, this model works fine. However, as the
application grows, the number of states and transitions between them grows as
well, and it becomes hard to visualize what's happening in the application.</p><p>Moreover, the interactions in some applications are more complex than a
simple finite state machine. In such cases it's much easier to think of and
implement the application as a program, rather than a FSM.</p><p>By using a high level programming concept called <em>continuations</em>,
Cocoon tries to solve this problem, and promises to allow the control flow in
Web applications to be modeled as a normal program.</p></div></div>
       </body></document>