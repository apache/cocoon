<?xml version="1.0" encoding="UTF-8"?><!--
      Licensed to the Apache Software Foundation (ASF) under one
      or more contributor license agreements.  See the NOTICE file
      distributed with this work for additional information
      regarding copyright ownership.  The ASF licenses this file
      to you under the Apache License, Version 2.0 (the
      "License"); you may not use this file except in compliance
      with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing,
      software distributed under the License is distributed on an
      "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
      KIND, either express or implied.  See the License for the
      specific language governing permissions and limitations
      under the License.
    --><document xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/XDOC/2.0" xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd"><properties><title>Cocoon Core - SessionStateAction</title><author email="cocoon-docs@apache.org">Apache Cocoon Documentation Team</author></properties><body>
         <div id="contentBody"><div id="bodyText"><h1 class="docTitle">SessionStateAction</h1><h1>Summary</h1><p>Store the session's current state in a session attribute.</p><h1>Basic information</h1><table class="bodyTable"><tbody><tr class="a"><th>Component type</th><td>Action</td></tr><tr class="b"><th>Cocoon block</th><td>core</td></tr><tr class="a"><th>Java class</th><td>org.apache.cocoon.acting.SessionStateAction</td></tr><tr class="b"><th>Name in Sitemap</th><td/></tr><tr class="a"><th>Cacheable</th><td/></tr></tbody></table><h1>Documentation</h1><p>To keep track of the state of a user's session, a string is<br/>
stored in a session attribute in order to allow to chose between<br/>
different pipelines in the sitemap accordingly.&lt;/p&gt;</p><p>For added flexibility it is possible to use sub states as<br/>
well. For this declare your own name for the session state<br/>
attribute and give the number of sublevels plus the level to<br/>
modify. (This is <strong>one</strong> based!) Sub states below the current<br/>
one are removed from the session so that the default sub state will<br/>
be reentered when the user returns. If you don't like this<br/>
behaviour and prefer independent sub states, use this action<br/>
several times with different attribute names rather than sub<br/>
levels.</p><p><strong>Global and local parameters:</strong></p><table class="bodyTable">
<tbody>
<tr class="b">
<td><tt>state-key-prefix</tt></td>
<td>
<p>String that identifies the attribute that stores the session state in the
<br/>
          session object. When sublevels are used, this is a prefix ie. the
<br/>
          number of the level is appended to the prefix. Example prefix is<br/>
          "<tt>__sessionState</tt>", sub-levels is 2, attributes<br/>
          "<tt>__sessionState1</tt>", "<tt>__sessionState2</tt>", and<br/>
          "<tt>__sessionState3</tt>" will be used to store the<br/>
          information.</p>
</td>
</tr>
<tr class="a">
<td><tt>new-state</tt></td>
<td>
<p>String that identifies the current state</p>
</td>
</tr>
<tr class="b">
<td><tt>sub-levels</tt></td>
<td>
<p>Number of sub levels to  use</p>
</td>
</tr>
<tr class="a">
<td><tt>state-level</tt></td>
<td>
<p>Sub level to modify, this is <strong>one</strong> based</p>
</td>
</tr>
</tbody>
</table></div></div>
       </body></document>