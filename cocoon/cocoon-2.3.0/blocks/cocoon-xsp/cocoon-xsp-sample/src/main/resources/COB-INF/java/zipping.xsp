<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<!-- CVS $Id$ -->

<!--
  This XSP produces markup for the ZipArchiveSerializer to zip all java/*.xsp files.
  
  Note that this simple example could as well be implemented using the
  DirectoryGenerator and transformed by a stylesheet to zip: markup.
-->
 
<xsp:page language="java"
          xmlns:zip="http://apache.org/cocoon/zip-archive/1.0"
          xmlns:xsp="http://apache.org/xsp">

  <xsp:structure>
    <xsp:include>org.apache.excalibur.source.impl.FileSource</xsp:include>
    <xsp:include>java.io.File</xsp:include>
  </xsp:structure>
  
  <zip:archive>
    <xsp:logic>
    
      // Get the samples/java directory.
      // File URIs are resolved relative to the location of the sitemap.xmap.
      
      FileSource source = null;
      File dir = null;
      try {
        source = (FileSource) resolver.resolveURI("java");
        dir = source.getFile();
      }
      finally {
        resolver.release(source);
      }
        
      // Scan directory for *.xsp files.
      
      File[] files = dir.listFiles();

      boolean found = false;
      for ( int i = 0, n = files.length; i &lt; n; i++ ) {
        File file = files[i];
        String filename = file.getName();
        if ( !filename.endsWith(".xsp") ) continue;
        found = true;
      
        <zip:entry>
          <xsp:attribute name="name"><xsp:expr>filename</xsp:expr></xsp:attribute>
          <xsp:attribute name="src"><xsp:expr>file.getPath()</xsp:expr></xsp:attribute>
        </zip:entry>
      } // for files

      // ZIP files cannot be completely empty.      
      if ( !found ) {
        <zip:entry name="README.txt" serializer="text">
          No match for *.xsp in <xsp:expr>dir.getPath()</xsp:expr>.
        </zip:entry>
      } // if !found
    </xsp:logic>
  </zip:archive>
</xsp:page>
