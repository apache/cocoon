<?xml version="1.0"?>
<!--
  Copyright 1999-2004 The Apache Software Foundation

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<document>
  <header>
    <title>Jakarta Slide Block Samples</title>
  </header>
  <body>
    <row>
      <column title="Back">
        <p>
          <a href="${base}/../../">Back</a> - to Cocoon Samples main page
        </p>
        <p>
          <a href="${base}/../">Back</a> - to Cocoon Blocks Samples main page
        </p>
      </column>
      <column title="Login">
        <p>
         These samples examplify an administration application for Slide. The
         administration functionality is directly built on Slide's internal API.
         Showing the use of the Slide source and namespace access. A different approach
         would be to let all communication take place over WebDAV.
        </p>
        <p>
         In order to configure WebDAV access for Slide you can uncomment the example
         servlet declaration and servlet-mapping in web.xml.
         You can then connect your favorite WebDAV client to
         http://localhost:8888/webdav/.
        </p>
        <p>
         By default write privileges are only granted to
         authenticated users. This means that you would have to configure authentication
         in order to login and start editing files over WebDAV.<br/>
         You can find more info on how to do this for both Jetty and Tomcat in the
         <a href="http://jakarta.apache.org/slide/howto-jaas.html">Slide documentation</a>.
         <br/>
         Alternatively you could grant the desired privileges to the unauthenticated user
         via the administration app.
        </p>
        <p class="samplesNote">
         In order to use the upload feature within these samples
         you will need to set enable-uploads parameter in web.xml to true.
        </p>
        <table border="0" cellspacing="0" cellpadding="2">
          <form action="${request.contextPath}${base}/login.cont" method="post">
            <input type="hidden" name="continuationId" value="${continuation.id}"/>
            <tr>
              <td>Username</td>
              <td>
                <input name="userid" value="${userid}" type="text" size="15" maxlength="40"/>
              </td>
            </tr>
            <tr>
              <td>Password</td>
              <td>
                <input name="password" type="password" size="15" maxlength="40"/>
              </td>
            </tr>
            <tr>
              <td/>
              <td>
                <input type="submit" name="cocoon-login" value="Login"/>
              </td>
            </tr>
            <tr>
              <td/>
              <td>Try root,root or john,john</td>
            </tr>
          </form>
        </table>
      </column>
    </row>
  </body>
</document>
