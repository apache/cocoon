<!--<?xml version="1.0"?>
<project default="webapp" basedir="." name="Apache Cocoon Targets">-->
  <!-- Webapp targets ==================================================== -->

  <target name="prepare-webapp" depends="blocks, package">
    <mkdir dir="${build.webapp}"/>

    <copy file="${webapp}/welcome.xml" tofile="${build.webapp}/welcome.xml" filtering="on"/>
    <copy file="${webapp}/welcome.xslt" tofile="${build.webapp}/welcome.xslt" filtering="on"/>
    <copy file="${resources.logos}/cocoon-button-powered-158.gif" tofile="${build.webapp}/resources/images/powered.gif"/>
    <copy file="${resources.logos}/cocoon.ico" tofile="${build.webapp}/resources/images/cocoon.ico"/>
    <copy file="${resources.styles}/cocoon.css" tofile="${build.webapp}/resources/styles/cocoon.css"/>

    <copy file="${webapp}/sitemap.xmap" tofile="${build.webapp}/sitemap.xmap"/>

    <copy todir="${build.webapp}/stylesheets">
      <fileset dir="${webapp}/stylesheets">
        <include name="**/*.xslt"/>
      </fileset>
    </copy>
        
    <copy todir="${build.webapp}/WEB-INF" filtering="on">
      <fileset dir="${webapp}/WEB-INF">
        <include name="entities/**"/>
        <include name="classes/**"/>
        <include name="*.x*"/>
      </fileset>
    </copy>

    <copy file="${build}/${name}.jar" tofile="${build.webapp.lib}/${name}-${version}.jar"/>

    <copy todir="${build.webapp.lib}">
      <fileset dir="${lib}/endorsed">
        <include name="*.jar"/>
        <exclude name="servlet*.jar"/>
      </fileset>
      <fileset dir="${lib.core}">
        <include name="*.jar"/>
        <exclude name="servlet*.jar"/>
      </fileset>
      <fileset dir="${lib.core}/jvm${target.vm}">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="${lib.optional}">
        <include name="*.jar"/>
        <exclude name="servlet*.jar"/>
      </fileset>
      <fileset dir="${lib.local}">
        <include name="*.jar"/>
        <exclude name="servlet*.jar"/>
      </fileset>
    </copy>

    <copy todir="${build.webapp.lib}">
      <fileset dir="${build.blocks}">
        <include name="*-block.jar"/>
      </fileset>
      <mapper type="glob" from="*-block.jar" to="cocoon-*-block.jar"/>
    </copy>

    <ant antfile="${build.temp}/blocks-build.xml"
         inheritAll="true"
         inheritRefs="false"
         target="lib"/>

    <ant antfile="${build.temp}/blocks-build.xml"
         inheritAll="true"
         inheritRefs="false"
         target="patch"/>
  </target>

  <target name="prepare-webapp-samples" depends="prepare-webapp, samples, block-samples, scratchpad-samples" unless="unless.exclude.webapp.samples"/>
 
  <target name="prepare-webapp-scratchpad" depends="prepare-webapp, compile-scratchpad" unless="unless.exclude.webapp.scratchpad">
    <copy file="${build}/${name}-scratchpad.jar" tofile="${build.webapp.lib}/${name}-${version}-scratchpad.jar"/>
  </target>
 
  <target name="prepare-webapp-deprecated" depends="prepare-webapp,init-xpatch" unless="unless.exclude.deprecated">
    <copy file="${build}/${name}-deprecated.jar" tofile="${build.webapp.lib}/${name}-${version}-deprecated.jar"/>
    <xpatch directory="${deprecated.conf}" extension="xconf" configuration="${build.webapp}/WEB-INF/cocoon.xconf"/>
  </target>

  <target name="prepare-webapp-idldocs" depends="idldocs" unless="unless.exclude.webapp.idldocs">
    <mkdir dir="${build.webapp.idldocs}"/>

    <copy todir="${build.webapp.idldocs}" filtering="off">
      <fileset dir="${build.idldocs}"/>
    </copy>

    <!-- patch the welcome page to tell we have idldocs to show -->
    <xpatch directory="${idl}" extension="xwelcome" configuration="${build.webapp}/welcome.xml"/>    
  </target>
  
  <target name="prepare-webapp-javadocs" depends="javadocs" unless="unless.exclude.webapp.javadocs">
    <mkdir dir="${build.webapp.javadocs}"/>

    <copy todir="${build.webapp.javadocs}" filtering="off">
      <fileset dir="${build.javadocs}"/>
    </copy>

    <!-- patch the welcome page to tell we have javadocs to show -->
    <xpatch directory="${resources.javadoc}" extension="xwelcome" configuration="${build.webapp}/welcome.xml"/>    
  </target>
    
  <target name="prepare-webapp-docs" depends="validate-xdocs" unless="unless.exclude.webapp.documentation">
    <mkdir dir="${build.webapp.docs}"/>
    
    <copy todir="${build.webapp.docs}" filtering="on">
      <fileset dir="${documentation}">
        <exclude name="**/*.jpg"/>
        <exclude name="**/*.gif"/>
        <exclude name="**/*.png"/>
      	<exclude name="*.xwelcome"/>
      </fileset>
    </copy>

    <copy todir="${build.webapp.docs}" filtering="off">
      <fileset dir="${documentation}">
        <include name="**/*.jpg"/>
        <include name="**/*.gif"/>
        <include name="**/*.png"/>
      </fileset>
    </copy>

    <!-- patch the welcome page to tell we have documentation to show -->
    <xpatch directory="${documentation}" extension="xwelcome" configuration="${build.webapp}/welcome.xml"/>    
  </target>
  
  <target name="webapp" depends="prepare-webapp,prepare-webapp-samples,prepare-webapp-docs,prepare-webapp-javadocs,prepare-webapp-idldocs,prepare-webapp-deprecated,prepare-webapp-scratchpad,validate-config,init-loader"/>

  <target name="war" depends="webapp">
    <!-- A task to create manifest for webapp. -->
    <taskdef name="manifest" classname="ManifestToolTask" classpath="${tools.tasks.dest}"/>
    <!-- Create WAR manifest -->
    <manifest directory="${build.webapp.lib}" manifest="${build.webapp}/WEB-INF/Manifest.mf"/>
    <!-- Package WAR file -->
    <jar jarfile="${build.war}"  manifest="${build.webapp}/WEB-INF/Manifest.mf">
      <fileset dir="${build.webapp}"/>
    </jar>
  </target>

<!--</project>-->
