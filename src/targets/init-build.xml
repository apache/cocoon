  <!-- Initialization Targets ================================================ -->

  <target name="init">

    <!-- Set the timestamps -->
    <tstamp/>

    <!-- Get the (constant) cocoon properties -->
    <property file="src/java/org/apache/cocoon/cocoon.properties"/>

    <!-- Detecting the current jvm -->
    <condition property="target.vm" value="1.4">
      <equals arg1="1.4" arg2="${ant.java.version}"/>
    </condition>
    <condition property="target.vm" value="1.3">
      <not>
        <equals arg1="1.4" arg2="${ant.java.version}"/>
      </not>
    </condition>

    <!-- The location of tools.jar, relative to the JAVA_HOME home. -->
    <property name="tools.jar" value="${java.home}/../lib/tools.jar"/>
    <available file="${tools.jar}" property="tools.jar.present"/>

    <!-- Allow users a chance to override without editing the main file -->
    <property file="${user.home}/cocoon.build.properties"/>
    <property file="local.build.properties"/>

    <!-- Get the build properties from an external file -->
    <property file="build.properties"/>

    <!-- Allow users a chance to override without editing the main file -->
    <property file="${user.home}/cocoon.blocks.properties"/>
    <property file="local.blocks.properties"/>

    <!-- Get the block properties from an external file -->
    <property file="blocks.properties"/>

    <!-- Use unless.exclude.XXX shadow props used in the
      unless target attributes -->
    <condition property="unless.exclude.webapp.documentation">
      <istrue value="${exclude.webapp.documentation}"/>
    </condition>
    <condition property="unless.exclude.webapp.javadocs">
      <istrue value="${exclude.webapp.javadocs}"/>
    </condition>
    <condition property="unless.exclude.webapp.idldocs">
      <istrue value="${exclude.webapp.idldocs}"/>
    </condition>
    <condition property="unless.exclude.webapp.scratchpad">
      <istrue value="${exclude.webapp.scratchpad}"/>
    </condition>
    <condition property="unless.exclude.webapp.samples">
      <istrue value="${exclude.webapp.samples}"/>
    </condition>
    
    <condition property="unless.exclude.scratchpad">
      <istrue value="${exclude.scratchpad}"/>
    </condition>
    <condition property="unless.exclude.deprecated">
      <istrue value="${exclude.deprecated}"/>
    </condition>
    <condition property="unless.exclude.javadocs">
      <istrue value="${exclude.javadocs}"/>
    </condition>
    <condition property="unless.exclude.idldocs">
      <istrue value="${exclude.idldocs}"/>
    </condition>

    <condition property="exclude.validate.config">
      <isfalse value="${validate.config}"/>
    </condition>
    <condition property="exclude.validate.xdocs">
      <isfalse value="${validate.xdocs}"/>
    </condition>
            
    <filter token="Name"                value="${fullname}"/>
    <filter token="name"                value="${fullname}"/>
    <filter token="year"                value="${year}"/>
    <filter token="version"             value="${version}"/>
    <filter token="date"                value="${TODAY}"/>
    <filter token="released.version"    value="${released.version}"/>

    <!-- Set classpath -->
    <path id="classpath">
      <fileset dir="${lib}">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="${lib.endorsed}">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="${lib.core}">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="${lib.core}/jvm${target.vm}">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="${lib.optional}">
        <include name="*.jar"/>
      </fileset>
      <path location="${build.mocks}"/>
      <path location="${build.dest}"/>
    </path>

    <!-- Set classpath for building ant tasks -->
    <path id="tasks.classpath">
      <path refid="classpath"/>
      <fileset dir="${tools.lib}">
        <include name="*.jar"/>
      </fileset>
      <path location="${tools.tasks.dest}"/>
    </path>

    <!-- Set classpath for scratchpad -->
    <path id="scratchpad.classpath">
      <path refid="classpath"/>
      <fileset dir="./src/scratchpad/lib">
        <include name="*.jar"/>
      </fileset>
    </path>
  </target>
  
  <target name="init-loader" depends="init">
    <!-- compile the loader -->
    <mkdir dir="${tools.loader.dest}"/>
    <javac srcdir="${tools.loader.src}"
           destdir="${tools.loader.dest}"
           debug="off"
           optimize="on"
           deprecation="on"
           target="1.3"
           nowarn="on"
           compiler="${compiler}"/>
  </target>
  
  <target name="init-tasks" depends="init">
    <!-- compile the ant tasks -->
    <mkdir dir="${tools.tasks.dest}"/>
    <javac srcdir="${tools.tasks.src}"
           destdir="${tools.tasks.dest}"
           debug="off"
           optimize="on"
           deprecation="on"
           target="1.3"
           nowarn="on"
           compiler="${compiler}"
           classpathref="tasks.classpath"/>
  </target>
  
  <target name="init-xpatch" depends="init-tasks">
    <!-- A task to patch xml files -->
    <taskdef name="xpatch" classname="XConfToolTask" classpath="${tools.tasks.dest}"/>
  </target>
  
  <target name="init-jing" depends="init">
    <!-- Jing is used in various targets for XML validation with RELAX NG -->
    <taskdef name="jing" classname="com.thaiopensource.relaxng.util.JingTask" classpathref="classpath"/>
  </target>

<!-- Preparation Targets =================================================== -->

  <!-- Prepare the build directory -->
  <target name="prepare" depends="init">
    <echo>+-------------------------------------------------------------------------------+</echo>
    <echo>                        ${fullname} ${version} [${year}]</echo>
    <echo>+-------------------------------------------------------------------------------+</echo>
    <echo> Building with ${ant.version}</echo>
    <echo> using build file ${ant.file}</echo>
    <echo> Compiling with debug ${compiler.debug}, optimize ${compiler.optimize}, deprecation ${compiler.deprecation}</echo>
    <echo>+-----------------------------| W A R N I N G |---------------------------------+</echo>
    <echo>               This build is targeted for use with JVM ${target.vm}</echo>
    <echo>          Using this build on a virtual machine other than the one</echo>
    <echo>             it is targeted for may result in runtime errors.</echo>
    <echo>+-------------------------------------------------------------------------------+</echo>

    <mkdir dir="${build}"/>
  </target>

<!-- Clean Targets ========================================================= -->

  <!-- Clean -->
  <target name="clean" depends="clean-cocoon,clean-webapp" description="Cleans the cocoon build and the webapp"/>

  <!-- Clean the cocoon build -->
  <target name="clean-cocoon" depends="init" description="Cleans the cocoon build">
    <!-- Delete the build directory -->
    <delete dir="${build}"/>
  </target>

  <!-- Clean the webapp -->
  <target name="clean-webapp" depends="init" description="Cleans the webapp">
    <delete dir="${build.webapp}"/>
  </target>

  <!-- Clean the distribution -->
  <target name="distclean" depends="clean" description="Cleans everything and brings back to original 'CVS checkout' state">
    <delete dir="${build.root}"/>
    <delete dir="${tools.tasks.dest}"/>
    <delete dir="${tools.loader.dest}"/>
    <delete file="${dist}/${Name}-${version}.tar.gz"/>
    <delete file="${dist}/${Name}-${version}.tar"/>
    <delete file="${dist}/${Name}-${version}.zip"/>
    <delete file="${dist}/${Name}-${version}-src.tar.gz"/>
    <delete file="${dist}/${Name}-${version}-src.tar"/>
    <delete file="${dist}/${Name}-${version}-src.zip"/>
    <delete file="${dist}/${Name}-${version}-bin.tar.gz"/>
    <delete file="${dist}/${Name}-${version}-bin.tar"/>
    <delete file="${dist}/${Name}-${version}-bin.zip"/>
    <delete file="${dist}/${Name}-${version}-samples.tar.gz"/>
    <delete file="${dist}/${Name}-${version}-samples.tar"/>
    <delete file="${dist}/${Name}-${version}-samples.zip"/>
    <delete dir="${dist.root}"/>
  </target>

