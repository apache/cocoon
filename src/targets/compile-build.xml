<?xml version="1.0"?>
<project default="webapp" basedir="." name="Compile targets">
  <!-- Compilation Targets =================================================== -->

  <!-- compiles everything -->
  <target name="compile" depends="compile-core, compile-scratchpad, compile-deprecated"/>

  <!-- compiles the core -->
  <target name="compile-core" depends="prepare-core">

    <!-- copy those files that need to be in the classpath -->
    <copy todir="${build.dest}">
      <fileset dir="${java}">
        <include name="**/*.xsl"/>
        <include name="**/*.roles"/>
        <include name="**/*.xml"/>
        <include name="**/*.properties"/>
        <include name="**/*.js"/>
      </fileset>
    </copy>

    <!-- compile mock classes -->
    <javac srcdir="${mocks}"
           destdir="${build.mocks}"
           debug="${compiler.debug}"
           optimize="${compiler.optimize}"
           deprecation="${compiler.deprecation}"
           target="${target.vm}"
           nowarn="${compiler.nowarn}"
           compiler="${compiler}"
           classpathref="classpath"/>

    <!-- compile core source files -->
    <javac srcdir="${java}"
           destdir="${build.dest}"
           debug="${compiler.debug}"
           optimize="${compiler.optimize}"
           deprecation="${compiler.deprecation}"
           target="${target.vm}"
           nowarn="${compiler.nowarn}"
           compiler="${compiler}"
           classpathref="classpath"/>
 
  </target>

  <!-- compiles the scratchpad -->
  <target name="compile-scratchpad" depends="prepare" unless="unless.exclude.scratchpad">
    <mkdir dir="${build.scratchpad.src}"/>
    <mkdir dir="${build.scratchpad.dest}"/>
   
    <available classpathref="classpath"
               property="activation.present"
               classname="javax.activation.DataSource"/>
                   
    <copy todir="${build.scratchpad.src}" filtering="on">
      <fileset dir="${scratchpad.src}">
        <exclude name="**/components/axis/**" unless="activation.present"/>
        <exclude name="**/reading/AxisRPCReader.java" unless="activation.present"/>
        <exclude name="**/webservices/**" unless="activation.present"/>
      </fileset>
    </copy>

    <copy todir="${build.scratchpad.dest}">
      <fileset dir="${build.scratchpad.src}">
        <include name="**/*.xsl"/>
        <include name="**/*.wsdd"/>
        <include name="**/*.roles"/>
      </fileset>
    </copy>

    <javac srcdir="${build.scratchpad.src}"
           destdir="${build.scratchpad.dest}"
           debug="${compiler.debug}"
           optimize="${compiler.optimize}"
           deprecation="${compiler.deprecation}"
           target="${target.vm}"
           compiler="${compiler}"
           classpathref="scratchpad.classpath"/>
  </target>

  <!-- compiles deprecated code -->
  <target name="compile-deprecated" depends="prepare,init-xpatch" unless="unless.exclude.deprecated">
    <mkdir dir="${build.deprecated}"/>

    <xpatch configuration="${build.dest}/org/apache/cocoon/cocoon.roles" 
            directory="${deprecated.conf}" 
            extension="xroles"/>
            
    <javac srcdir="${deprecated.src}"
           destdir="${build.deprecated}"
           debug="${compiler.debug}"
           optimize="${compiler.optimize}"
           deprecation="${compiler.deprecation}"
           target="${target.vm}"
           compiler="${compiler}"
           classpathref="classpath"/>
  </target>

<!-- Package Targets ======================================================= -->

  <!-- packages everything -->
  <target name="package" depends="package-core, package-scratchpad, package-deprecated"/>

  <!-- package the core -->
  <target name="package-core" depends="compile-core,block-roles">
    <jar jarfile="${build}/${name}.jar" manifest="${java}/Manifest.mf">
      <fileset dir="${build.dest}"/>
    </jar>
  </target>

  <!-- package the scratchpad -->
  <target name="package-scratchpad" depends="compile-scratchpad" unless="unless.exclude.scratchpad">
    <jar jarfile="${build}/${name}-scratchpad.jar">
      <fileset dir="${build.scratchpad.dest}"/>
    </jar>
  </target>

  <!-- package deprecated code -->
  <target name="package-deprecated" depends="compile-deprecated" unless="unless.exclude.deprecated">
    <jar jarfile="${build}/${name}-deprecated.jar">
      <fileset dir="${build.deprecated}"/>
    </jar>
  </target>

<!-- Block Targets ========================================================= -->

  <!-- prepares the blocks build -->
  <target name="prepare-blocks" depends="init">
    <mkdir dir="${build.blocks}"/>

    <xslt in="${gump.descriptor}"
          out="${build.temp}/blocks-build.xml"
          processor="trax"
          style="${tools}/src/blocks-build.xsl"/>
  </target>

  <!-- patch the cocoon role file -->
  <target name="block-roles" depends="prepare-blocks,init-xpatch">
    <ant antfile="${build.temp}/blocks-build.xml"
         inheritAll="true"
         inheritRefs="false"
         target="roles"/>
  </target>

  <!-- compiles and packages a single block -->
  <target name="block" depends="compile, prepare-blocks">
    <ant antfile="${build.temp}/blocks-build.xml"
         inheritAll="true"
         inheritRefs="false"
         target="${block-name}-compile"/>
  </target>
  
  <!-- compiles and packages all blocks -->
  <target name="blocks" depends="compile,prepare-blocks">
    <ant antfile="${build.temp}/blocks-build.xml"
         inheritAll="true"
         inheritRefs="false"
         target="compile"/>
  </target>

</project>
