<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.0//EN" "../../dtd/document-v10.dtd">

<document>
  <header>
    <title>XMLForm Wizard How-To</title>

    <authors>
      <person name="Heidi-Marie Brannan"
              email="heidi@wkwyw.net" />
    </authors>
  </header>

  <body>
    <s1 title="Notice">
      <note>
        This document is out of date. XMLForm is not supported anymore starting from
        the Cocoon 2.1 release. Alternatively, you can use <link
          href="../../userdocs/flow/jxforms.html">JXForms</link>, which is conceptually the
        same but offers a more robust implementation. Another emerging form
        framework is <link
          href="http://wiki.cocoondev.org/Wiki.jsp?page=Woody">Woody</link>.
      </note>

      <p>This How-To is based on components included in the Cocoon 2.1
      distribution. If you don&#39;t have this version, you can obtain it from
      the <link href="../../index.html">Apache Cocoon</link> web site.
      </p>

      <p> Some user accessible points in the Cocoon 2.1 distribution should be
      considered &#34;alpha&#34;. This means that the developer team is not
      investing _any_ effort to provide backward compatibility between alpha
      releases for these parts. This software will continue to be released as
      &#34;alpha&#34; until its code, schemas, and APIs are considered stable.
      </p>

      <p>Until then, there will be no warranty that newer versions will
      maintain backward compatibility for such parts, even in the most simple
      cases. Of course Cocoon will be compatible to latest release, 2.0.x
      release. However, once &#34;beta&#34; status is reached, backward
      incompatible changes will be made only when absolutely necessary to
      reach &#34;final&#34; status. </p>

      <p>The Cocoon development team understands the importance of reliable
      software as well protecting user investments through the creation of a
      solid development platform that doesn&#39;t change. On the other hand,
      the Cocoon project is a pioneer in many fields. Most of the technologies
      it uses are at a &#34;working draft&#34; phase only. Thus, reliability
      cannot be guaranteed before the software achieves its &#34;final&#34;
      status. </p>

      <p>Until then, no effort will be provided to guarantee backward
      compatibility for any parts considered alpha. </p>

      <p>You have been warned.</p>
    </s1>

    <s1 title="Overview">

      <p>XMLForm is a Cocoon form extension mechanism which was inspired by
      <link href="http://jakarta.apache.org/struts/">Struts</link> and <link
      href="http://www.w3.org/MarkUp/Forms/">XForms</link>. You will learn how
      to automate two-way mapping between the HTML forms, XML, and JavaBeans.
      XML schema languages are used to validate the form input. The forms can
      display different options depending on the users previous input. For example
      if a user ticks the checkbox to say they are interest in Cooking then they
      will later have the option to join Cookery mailing lists. If they did not tick
      the Cookery box they will not see the cookery mailing lists page.
      </p>
    </s1>

    <s1 title="Purpose">
      <p>
      Form creation and validation can be a quick and easy addition to your site, once you learn
      how to apply and use the XMLForm wizard. This How-To will guide you through
      the steps needed to create a validating form which saves the data it
      collects as a JavaBean. It will also describe <link
      href="http://www.ascc.net/xml/resource/schematron/schematron.html">Schematron</link>
      validation and the XMLForm wizard components needed to accomplish this
      within the Cocoon framework.
      </p>
    </s1>

    <s1 title="Intended audience">
      <p>This How-To is aimed at users who have developed an understanding of
      the basics of Cocoon and wish to incorporate dynamic and self-validating
      forms into their sites.</p>
    </s1>

    <s1 title="Requirements">
      <p>You will need the following:</p>

      <ul>
        <li>A servlet engine such as Tomcat.</li>

        <li>JDK 1.2 or later</li>

		<li>commons-jxpath.jar, included in the current Cocoon 2.1 lib/optional  directory</li>

      </ul>

      <p>Cocoon 2.1 CVS to be installed with the command:</p>

      <source>build webapp</source>

      <p>You will need to understand and be familiar with XML, XSL, HTML,
      Java, JavaBeans, XForms, XPath, Schematron and Cocoon actions. If you
      are unfamiliar with these technologies, it is advised that you learn
      such concepts first.</p>
    </s1>

    <s1 title="Steps">
      <p>Follow these steps to create your own forms using the XMLForm Wizard:</p>

      <ul>
        <li><link href="howto-xmlform-wizard-1.html">Step 1: XMLForm markup
        language</link></li>

        <li><link href="howto-xmlform-wizard-2.html">Step 2: Validation</link></li>

        <li><link href="howto-xmlform-wizard-3.html">Step 3: JavaBean</link></li>

        <li><link href="howto-xmlform-wizard-4.html">Step 4:
        HowtoWizardAction.java</link></li>

        <li><link href="howto-xmlform-wizard-5.html">Step 5: Sitemap</link></li>
      </ul>
    </s1>

    <s1 title="Summary">
      <p>Now that you have created the Mailing list forms in this How-To, you
      can proceed to create your own validating forms. The possibilities for
      adding dynamic form capabilities to your Cocoon-based web site are
      endless. For example, you could:</p>

      <ul>
        <li>create a simple shopping cart using an XML database such as <link
        href="http://xml.apache.org/xindice/">Xindice</link>;</li>

        <li>design your site to become more personalised and interactive for
        your visitors;</li>

        <li>run surveys and tests from your site;</li>

        <li>add a voting system for new features to be added on your site;</li>

        <li>add a suggestions/feedback form, for example, a simple form
        soliciting more user feedback about your products;</li>

        <li>develop even more exciting things, such as <strong>Web Services</strong>
        (think <link
        href="http://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm">REST</link>);
        and</li>

        <li>include Remote Portal Forms, by taking <link
        href="http://my.netscape.com/publish/formats/rss-spec-0.91.html#example1">RSS</link>
        to the next generation of dynamic federated content.</li>
      </ul>

      <p>
       See XMLForm in action in version 2.1 of Cocoon 
       from your local webapp distribution in 2.1 via
       <code>http://localhost:8080/cocoon/samples/xmlform/</code>.
      </p>

      <p>Consider examining the XMLForm Feedback Wizard demo in your Cocoon
      distribution, found at <code>src/webapp/samples/xmlform/</code>.
      It includes a variety
      of XMLForm widgets. Additionally, it illustrates access to other Form
      models, not only JavaBeans (as demonstrated in this How-To) but also DOM
      nodes.</p>
    </s1>

    <s1 title="Tips">
      <p>If you have a problem running the How-To example, try the following.</p>

      <ul>
        <li>Check the logs. Sometimes they have contain information than what
        is displayed in your browser.</li>

        <li>Check the mail archives at <link
        href="http://marc.theaimsgroup.com/">MARC: Mailing list ARChives at
        AIMS</link>. Chances are somebody else has already experienced a
        similar problem!</li>

        <li>Try posting a description of your problem to the <link
        href="http://cocoon.apache.org/community/mail-lists.html">Cocoon users email
        list</link>. Remember to include the whole error message. For a prompt
        reply, make sure you supply all relevant information.</li>

        <li>If you think you found a bug in the implementation, contact the
        XMLForm author, <link href="mailto:ivelin@apache.org">Ivelin Ivanov
        </link>, or submit a patch via Bugzilla.</li>
      </ul>
    </s1>

    <s1 title="Related resources/documents">
      <s2 title="Cocoon">
        <p>For all Cocoon basics see the
        <link href="../../index.html">Cocoon documentation</link>. The
        <link href="../../userdocs/concepts/xmlform.html">XMLForm Handling</link> and the 
        <link href="../../userdocs/concepts/actions.html">actions page</link>
        are especially helpful. Actions are Avalon Components, so you may want
        to read the Avalon
        <link href="http://jakarta.apache.org/avalon/developing/">white paper</link> for more information.</p>
      </s2>

      <s2 title="XPath">
        <p>XPath and the basics of JXPath are simple to learn. The W3C has a
        helpful <link href="http://www.w3schools.com/xpath/">tutorial</link>.</p>
      </s2>
    </s1>

    <s1 title="Comments">
      <p>Needless to say this How-To was written with no intentional mistakes
      or errors. However, if you find any faults or can suggest any
      improvements, please email me, <link href="mailto:heidi@kutcha.org">Heidi-Marie Brannan</link>.
      I will do my utmost to keep this How-To up to date and error free.</p>
    </s1>
  </body>
</document>

