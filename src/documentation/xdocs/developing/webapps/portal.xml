<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 1999-2004 The Apache Software Foundation

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.0//EN" "../../dtd/document-v10.dtd">
<document>
    <header>
        <title>Building Portals with Cocoon</title>
        <authors>
            <person name="Carsten Ziegeler" email="cziegeler@s-und-n.de"/>
        </authors>
    </header>
    <body>
  <s1 title="Introduction">
     <note>This is the description of the "old" portal framework, please also have
      a look at the newer <link href="../portal/index.html">portal block</link>.</note>
     <p>The portal engine of Cocoon provides the required
        functionality to display user dependent content with a user defineable
        layout.</p>
     <p>The Cocoon portal defintion framework is an XML description of the
        portal and the contained content. The rendering of the portal to the needed
        format (such as HTML) is done through stylesheets and is therefore very
        flexible.</p>
     <p>A portal definition can be configured for all users (global), for
        groups of users (group or role) and for the individual user. The portal
        admininstrator can use the provided tools to configure every aspect of the
        portal (from colours to content).</p>
     <p>Each "blob" of portal content is contained in a "coplet" (<em>Co</em>coon <em>p</em>ort<em>let</em>). coplets can
        be configured into the portal on a per-user or per-group basis allowing a
        flexible content definition.</p>
     <p>coplets can be minimized, maximized or even removed by the user if he
        does not wish to see the content. However, the administrator may configure
        coplets to be mandatory, in which case they may not be removed.</p>
     <p>The different portals are administrated by authentication applications. Each
        application can have its own portal.</p>
     <p>This documentation explains the different resources for the portal, the
        configuration of a portal and how it creates the portal view derived from
        this information. After that all is put together by creating the needed entries
        in the sitemap for using and displaying a portal.</p>
  </s1>
  <s1 title="The Profile">
     <p>A portal is built upon a profile which contains all necessary
        information: the portal possibilites (the available coplets, the possible
        changes to the layout etc.) and the portal view (the layout for this user and
        the coplets he chose for himself). This profile is generated when a user logs
        into the application the portal belongs to. The building of the profile is a
        very flexible process which allows to have different configurations for
        different users.</p>
     <p>In general the building of the profile consists of four steps:</p>
     <ol>
        <li>Building the base profile. This profile defines which
          possibilites the portal has, which coplets are available to the portal and
          which parts of the profile can be changed by the user.
        </li>
        <li>Building the global profile. The base profile is enhanced by a
          global delta which contains a predefined portal view. This predefined portal
          view is a starting point for all users.
        </li>
        <li>Building the role profile. The global profile is enhanced by a
          role delta which contains a predefined portal view. This predefined portal view
          is a starting point for all users of that role.
        </li>
        <li>Building the user profile. The role profile is augmented by a
          user delta which contains the portal for this specific user. An optional user
          status profile with often changing information can optional be appended to the
          profile.
        </li>
     </ol>
     <p>Only step 1 and 2 are mandatory for the building process. Steps 3 and
        4 are optional and depend on the configuration of the users and roles in the
        system.</p>
     <p>Each delta (steps 2, 3 and 4) can modify the possibilites of the
        portal and the configuration of the coplets. But it is not allowed to add new
        features or coplets. In addition a delta may contain a predefined portal
        view.</p>
     <p>This building process is invoked each time the user logs into the
        application. So a change to any profile (delta) is incorporated into the user
        profile: If e.g. a coplet , which a user has choosen for his portal view, is
        removed from the system, it is not available to the user anymore and therefore
        also removed from his portal view.</p>
     <p>The global delta, the role delta and the user delta are very similar.
        They only differ in the name of the root node.</p>
     <s2 title="The Base Profile">
        <p>The base profile consists of three data sources:</p>
        <ol>
          <li> The layout profile describes the possibilites and layout of
             the portal.
          </li>
          <li>The coplets profile defines all available coplets for the
             portal view.
          </li>
          <li>The type profile describes the parts of the profile which can
             be changed by the user.
          </li>
        </ol>
        <s3 title="The Layout Profile">
          <p>The layout profile describes the overall layout of the portal
             including if header or footer are present which colors and fonts are used and
             so on.</p>
          <p>An example profile is shown below. The profile is enclosed in the
             root node "layout-profile" and consists of the "portal" part and the "coplets"
             part:</p>
          <source>
&lt;layout-profile&gt;
  &lt;portal&gt;
    &lt;!-- This node contains the layout of the portal view --&gt;
    &lt;layouts&gt;
      &lt;layout&gt;
        &lt;!-- The color of the background --&gt;
        &lt;background&gt;
          &lt;color&gt;#ffffff&lt;/color&gt;
        &lt;/background&gt;
        &lt;!-- The font and color for usual text --&gt;
        &lt;font&gt;
          &lt;type&gt;Arial, Helvetica, sans-serif&lt;/type&gt;
          &lt;size&gt;2&lt;/size&gt;
          &lt;color&gt;black&lt;/color&gt;
        &lt;/font&gt;
      &lt;/layout&gt;
    &lt;/layouts&gt;
    &lt;!-- The following means that the portal has a header area --&gt;
    &lt;header&gt;
      &lt;exists&gt;true&lt;/exists&gt;
    &lt;/header&gt;
    &lt;!-- The following means that the portal has 3 columns --&gt;
    &lt;columns&gt;
      &lt;number&gt;3&lt;/number&gt;
    &lt;/columns&gt;
    &lt;!-- The following means that the portal has not a footer area --&gt;
    &lt;footer&gt;
      &lt;exists&gt;false&lt;/exists&gt;
    &lt;/footer&gt;
  &lt;/portal&gt;
  &lt;coplets&gt;
    &lt;!-- This node contains the layout of the coplets --&gt;
    &lt;layouts&gt;
      &lt;layout&gt;
        &lt;title&gt;
          &lt;!-- The layout of the title --&gt;
          &lt;background&gt;
            &lt;color&gt;#46627A&lt;/color&gt;
          &lt;/background&gt;
          &lt;font&gt;
            &lt;type&gt;Arial&lt;/type&gt;
            &lt;size&gt;2&lt;/size&gt;
            &lt;color&gt;#ffffff&lt;/color&gt;
          &lt;/font&gt;
        &lt;/title&gt;
        &lt;content&gt;
          &lt;!-- The layout of the content --&gt;
          &lt;font&gt;
            &lt;type&gt;Arial&lt;/type&gt;
            &lt;size&gt;2&lt;/size&gt;
            &lt;color&gt;#000000&lt;/color&gt;
          &lt;/font&gt;
          &lt;background&gt;
            &lt;color&gt;#ffffff&lt;/color&gt;
          &lt;/background&gt;
        &lt;/content&gt;
      &lt;/layout&gt;
    &lt;/layouts&gt;
  &lt;/coplets&gt;
&lt;/layout-profile&gt;
        </source>
        </s3>
        <s3 title="The coplets Profile">
          <p>The coplets profile contains all coplets which are available in
             the system. It is an XML based resource with the root node "coplets-profile".
             All coplets are defined under a node called "coplets", so an example profile
             could look like this:</p>
          <source>    &lt;coplets-profile&gt;
  &lt;coplets&gt;
    &lt;coplet id="bankingnews"&gt;
      &lt;resource uri="cocoon://coplet-banking.xml"/&gt;
      &lt;transformation&gt;
        &lt;!-- optional xsl transformation --&gt;
        &lt;stylesheet&gt;sunbank/styles/coplet.xsl&lt;/stylesheet&gt;
      &lt;/transformation&gt;
      &lt;configuration&gt;
        &lt;mandatory&gt;false&lt;/mandatory&gt;
        &lt;sizable&gt;true&lt;/sizable&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;timeout&gt;5000&lt;/timeout&gt;
        &lt;!-- optional, milliseconds --&gt;
        &lt;messages&gt;
          &lt;!-- optional: Messages --&gt;
          &lt;coplet_not_available&gt;
                           Display this if the coplet is not available.
                        &lt;/coplet_not_available&gt;
        &lt;/messages&gt;
      &lt;/configuration&gt;
      &lt;title&gt;Banking News&lt;/title&gt;
      &lt;status&gt;
        &lt;visible&gt;true&lt;/visible&gt;
        &lt;size&gt;max&lt;/size&gt;
      &lt;/status&gt;
    &lt;/coplet&gt;
  &lt;/coplets&gt;
&lt;/coplets-profile&gt;
</source>
          <p>This example defines one coplet: the bankingnews coplet with the
             title "Banking News". The title is displayed in the portal view above the
             coplet content. The most important part is the resource definition. Using this
             resource the coplet is displayed in the portalview of the user. </p>
          <ul>
             <li>An uri, e.g.: &lt;resource uri=".."/&gt;. This URI can be a
                local one which is retrieved using the sitemap or a distant one which is
                retrieved using an HTTP request. In both cases the resource must deliver valid
                XML for the coplet content. If you don't use a protocol, the URI is assumed to
                be a file.
             </li>
             <li>A java class delivering the content.
             </li>
          </ul>
          <p>There a several mandatory configuration parameters for a coplet.
             This configuration parameters can only be changed by the portal administrator.
             The user cannot change them for his portal view.</p>
          <ul>
             <li>mandatory: Indicates if the coplet can be removed by the
                user or if it is always visible.
             </li>
             <li>sizable: Is the coplet sizable? If the value is true the
                user can minimize this coplet in his portal view.
             </li>
             <li>active: Using this parameter, a coplet can be deactivated
                for a distinct period of time. If a coplet is not active it will not displayed
                to the user even if he has configured it.
             </li>
          </ul>
          <p>In addition there are some optional parameters:</p>
          <ul>
             <li>timeout: This is the time in milliseconds, the portal waits to
                get the coplet content. If the content is not available within this time frame,
                the coplet is declared as not available at the moment. The default value for
                the timeout can be set in the portal configuration (see next chapter).
             </li>
             <li>handlesSizable: If this value is true, the coplet (or
                better the resource) handles the sizing of this coplet itselt. This means it
                determines the data to be displayed if the coplet is minimized or maximized. If
                this value is false the portal displayes the whole coplet if it is maximized and
                only its title if it is minimized. This is the default behaviour.
             </li>
             <li>handlesParameters: If this value is true (which is the
                default value) the resource gets all configuration and status parameters
                passed, e.g. if the resource is an uri, the parameters are passed as HTTP
                request parameters.
             </li>
             <li>messages/coplet_not_available: If the coplet is not
                available (e.g. external data where the server is not available), a message is
                displayed. With this optional parameter each coplet can get a distinct message
                which overrides the message provided by the user profile.
             </li>
          </ul>
          <p>The status parameters can be changed by the user for configuring
             his own portal view:</p>
          <ul>
             <li>visible: If a coplet is visible it is included in the
                portal view. If it is not visible it is still configured for the user but it
                will not displayed.
             </li>
             <li>size: Currently two sizes (min and max) are distinquished.
             </li>
          </ul>
          <p>If the source of the coplet needs additional transformation there
             are two possibilities for doing the transformation. The first one is creating a
             pipeline in the sitemap for this coplet and the second one usses the coplet
             configuration for this. As the first one is the usual pipeline
             creating process only the second one is covered here.</p>
          <p>By defining the "transformation" node inside the "coplet" node,
             the source of the coplet can be transformed with one or more stylesheets. For
             each stylesheet a "stylesheet" node with the value of the stylesheet path has
             to be created. The order of appearance determines the order of processing. If
             e.g. the source of a coplet is a class or a file, there is no need to specify a
             pipeline only for this coplet. Specifying a file/class as source and a
             "stylesheet" node has the same effect.</p>
          <s4 title="Adding a new coplet">
             <p>Adding new information to the portal requires four basic
                steps:</p>
             <ul>
                <li>Defining the resource containing the information. For
                  external resources only the address (mainly an URI) and the protocol (usually
                  HTTP) is required. Otherwise a new XML resource has to be created with the new
                  content.
                </li>
                <li>Defining the stylesheet for the presentation of this
                  content.
                </li>
                <li>For local resources: Definition of the pipeline in the
                  sitemap. This pipeline must contain all necessary steps for building the
                  information. It must deliver XML as the serialized format.
                </li>
                <li>Adding a new "coplet" node to the coplets profile.
                </li>
             </ul>
             <p>After these steps are finished, the new coplet is automatically
                available for each user which logs in after the addition. If the coplet is even
                mandatory it will be added to the portal view of the user.</p>
             <p>For more information see the chapter "The Pipelines".</p>
          </s4>
          <s4 title="Customizable coplets">
             <p>Each coplet can have its own configuration, e.g. a weather
                coplet should display the weather for a particular city etc.</p>
             <source>    &lt;coplets-profile&gt;
  &lt;coplets&gt;
    &lt;coplet id="bankingnews"&gt;
      &lt;resource uri="cocoon://coplet-banking.xml"/&gt;
      &lt;customization uri="cocoon://customize-coplet-banking.xml"/&gt;
      &lt;!-- optional --&gt;
      &lt;transformation&gt;
        &lt;!-- optional xsl transformation --&gt;
        &lt;stylesheet&gt;sunbank/styles/coplet.xsl&lt;/stylesheet&gt;
      &lt;/transformation&gt;
      &lt;configuration&gt;
        &lt;mandatory&gt;false&lt;/mandatory&gt;
        &lt;sizable&gt;true&lt;/sizable&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;timeout&gt;5000&lt;/timeout&gt;
        &lt;!-- optional, milliseconds --&gt;
        &lt;messages&gt;
          &lt;!-- optional: Messages --&gt;
          &lt;coplet_not_available&gt;
                           Display this if the coplet is not available.
                        &lt;/coplet_not_available&gt;
        &lt;/messages&gt;
        &lt;customizable&gt;true&lt;/customizable&gt;
        &lt;!-- optional --&gt;
        &lt;persistent&gt;false&lt;/persistent&gt;
        &lt;!-- optional --&gt;
      &lt;/configuration&gt;
      &lt;title&gt;Banking News&lt;/title&gt;
      &lt;status&gt;
        &lt;visible&gt;true&lt;/visible&gt;
        &lt;size&gt;max&lt;/size&gt;
      &lt;/status&gt;
    &lt;/coplet&gt;
  &lt;/coplets&gt;
&lt;/coplets-profile&gt;
</source>
             <p>To declare a coplet as customizable it must get a configuration
                resource which is displayed to a user of this coplet to enter all required
                configuration values. This is done with the <em>customization</em> tag. The
                value for this tag has the same possibilities as the <em>resource</em> tag,
                usually the <em>uri</em> attribute points to a pipeline.</p>
             <p>When a user has configured/choosen a customizable coplet,
                the portal detects if this coplet has its configuration. If it does not have one,
                the customization resource of the coplet is displayed in the portal view.
                Otherwise the coplet itself is displayed.</p>
             <p>In addition a customizable coplet can be persistent, e.g. the
                configuration is saved for a longer period than the current session of the
                user. If the coplet is not persistent the configuration is lost when the user
                logs out. The next time he logs in, the customization page is displayed to
                configure this coplet again.</p>
             <p>If you use persistent coplets you have to configure resources
                for loading and saving the status profile (See configuration). More about
                writing customizable coplets can be found in the chapter "Writing Customizable
                coplets".</p>
          </s4>
        </s3>
        <s3 title="The Type Profile">
          <p>The type profile describes the possible values the user can
             change for his portal view. Using this flexible approach the portal
             administrator can decide which user can choose what. For example, a normal user
             might change the layout and content of his portal view, but a guest might not
             be allowed to change anything, whereas the administrator can change
             everything.</p>
          <p>The type profile is surrounded by the root node "type-profile".
             It consists of two parts: the typedefs section and the elements section. The
             type profile can be compared with a programming language. The typedefs section
             declares all available types and the the elements section declares all
             variables with their corresponding types. A "variable" defines a place or
             element in the user profile which can be changed by the user. The possibilites
             for this element are defined by the type.</p>
          <p>The typedefs contains enumerations, e.g. a set of possible values
             with a user presentable name. In addition the portal has the following predefined
             types: STRING (arbitrary text), BOOLEAN (true or false), INTEGER (a number) and
             CARDINAL (a positiv number).</p>
          <source>&lt;type-profile&gt;
  &lt;typedefs&gt;
    &lt;!-- The following types are defined by the portal: (Names are casesensitiv!)
                          STRING, BOOLEAN, ENUMERATION, INTEGER, CARDINAL --&gt;
    &lt;typedef name="backgroundcolor" type="ENUMERATION"&gt;
      &lt;value name="weiss"&gt;#ffffff&lt;/value&gt;
      &lt;value name="hellgrau"&gt;#cccccc&lt;/value&gt;
      &lt;value name="hellgruen"&gt;#aab9bf&lt;/value&gt;
      &lt;value name="dunkelgruen"&gt;#46627A&lt;/value&gt;
    &lt;/typedef&gt;
    &lt;typedef name="textcolor" type="ENUMERATION"&gt;
      &lt;value name="weiss"&gt;white&lt;/value&gt;
      &lt;value name="schwarz"&gt;black&lt;/value&gt;
      &lt;value name="weiss"&gt;#ffffff&lt;/value&gt;
      &lt;value name="hellgrau"&gt;#cccccc&lt;/value&gt;
      &lt;value name="hellgruen"&gt;#aab9bf&lt;/value&gt;
      &lt;value name="dunkelgruen"&gt;#46627A&lt;/value&gt;
    &lt;/typedef&gt;
    &lt;typedef name="copletsize" type="ENUMERATION"&gt;
      &lt;value name="Maximized"&gt;max&lt;/value&gt;
      &lt;value name="Minimized"&gt;min&lt;/value&gt;
    &lt;/typedef&gt;
    &lt;typedef name="columnnumber" type="ENUMERATION"&gt;
      &lt;value name="1"&gt;1&lt;/value&gt;
      &lt;value name="2"&gt;2&lt;/value&gt;
      &lt;value name="3"&gt;3&lt;/value&gt;
      &lt;value name="4"&gt;4&lt;/value&gt;
      &lt;value name="5"&gt;5&lt;/value&gt;
    &lt;/typedef&gt;
  &lt;/typedefs&gt;
&lt;/type-profile&gt;
</source>
          <p>The element section has the same structure a the user profile.
             For each leave which is changeable by the user the elements section contains an
             entry for the type of this node. The node is enhanced by two attributes: type
             for the node type and description for a user readable title. This information
             is used by the portal to present the configuration screen for the portal. It
             displayes for each changeable leave a form field with the corresponding
             type.</p>
          <source>&lt;type-profile&gt;
  &lt;elements&gt;
    &lt;layout-profile&gt;
      &lt;portal&gt;
        &lt;layouts&gt;
          &lt;layout&gt;
            &lt;!-- The user can change the background.
                          The possible values are taken from the enumeration
                          backgroundcolor. The user gets the title "Background"
                          displayed for the form field. --&gt;
            &lt;background&gt;
              &lt;color type="backgroundcolor" description="Background"/&gt;
            &lt;/background&gt;
            &lt;font&gt;
              &lt;color type="textcolor" description="Font color"/&gt;
            &lt;/font&gt;
          &lt;/layout&gt;
        &lt;/layouts&gt;
        &lt;columns&gt;
          &lt;!-- The user can change the number of columns --&gt;
          &lt;number type="columnnumber" description="Number of columns"/&gt;
        &lt;/columns&gt;
      &lt;/portal&gt;
    &lt;/layout-profile&gt;
    &lt;portal-profile&gt;
      &lt;content&gt;
        &lt;!-- Using the * the following configuration is applied for
                      all columns regardless of their position. --&gt;
        &lt;column position="*"&gt;
          &lt;width type="CARDINAL" description="Width"/&gt;
          &lt;coplets&gt;
            &lt;!-- Using the * the following configuration is applied for
                              each coplet. --&gt;
            &lt;coplet id="*" position="*" number="*"&gt;
              &lt;status&gt;
                &lt;!-- The user can change the visibility and size
                                  of the coplet --&gt;
                &lt;visible type="BOOLEAN" description="Visible"/&gt;
                &lt;size type="copletsize" description="Size"/&gt;
              &lt;/status&gt;
            &lt;/coplet&gt;
          &lt;/coplets&gt;
        &lt;/column&gt;
      &lt;/content&gt;
    &lt;/portal-profile&gt;
  &lt;/elements&gt;
&lt;/type-profile&gt;</source>
        </s3>
     </s2>
     <s2 title="The Global Profile">
        <p>The global delta, the role delta and the user delta are very
          similar. They only differ in the name of the root node. So this chapter only
          describes the global delta and points out the differences between the deltas at
          the various place rather than repeating the same information in different
          chapters.</p>
        <p>The global delta is enclosed in the root node "global-delta", the
          role delta uses the node "role-delta" and the user delta the node
          "user-delta".</p>
        <p>In general a delta defines the differences between two profiles.
          The portal deltas allow only adding and changing but not removing nodes. Each
          delta can contain the following parts: </p>
        <ul>
          <li>The layout delta containing the difference to the layout
             profile.
          </li>
          <li>The coplets delta describing the differences to the coplets
             profile.
          </li>
          <li>The portal profile containing a complete portal view. This
             part is not a delta. If it is contained in a delta and the profile already has
             this information, that information is replaced by the one from the delta.
             Otherwise the delta information is added. For the global profile the portal
             profile is mandatory.
          </li>
          <li>The personal profile. This part contains personal information
             of the user, e.g. are welcome text. For the global profile this information
             again is mandatory. It defines the possibilites the user has. The role and the
             user profile can only change this information. But they cannot add any new
             nodes.
          </li>
        </ul>
        <p> So here is an example:</p>
        <source>&lt;global-delta&gt;
  &lt;!-- No difference to the base profile --&gt;
  &lt;layout-delta/&gt;
  &lt;!-- No difference to the base profile --&gt;
  &lt;coplets-delta/&gt;
  &lt;!-- This is the starting portal view for all users.
         It has to be defined in the global profile --&gt;
  &lt;portal-profile&gt;
    &lt;!-- This is the content of the portal view --&gt;
    &lt;content&gt;
      &lt;header&gt;
        &lt;coplet id="personalize" position="1"&gt;
          &lt;status&gt;
            &lt;visible&gt;true&lt;/visible&gt;
            &lt;size&gt;max&lt;/size&gt;
          &lt;/status&gt;
        &lt;/coplet&gt;
      &lt;/header&gt;
      &lt;column position="1"&gt;
        &lt;width&gt;28%&lt;/width&gt;
        &lt;!-- The coplets are displayed in the order of their
                     position attribute in each column. --&gt;
        &lt;coplets&gt;
          &lt;coplet id="administration" number="1" position="1"&gt;
            &lt;status&gt;
              &lt;visible&gt;true&lt;/visible&gt;
              &lt;size&gt;max&lt;/size&gt;
            &lt;/status&gt;
          &lt;/coplet&gt;
        &lt;/coplets&gt;
      &lt;/column&gt;
      &lt;column position="2"&gt;
        &lt;width&gt;50%&lt;/width&gt;
        &lt;coplets&gt;
          &lt;coplet id="banknews" number="2" position="1"/&gt;
        &lt;/coplets&gt;
      &lt;/column&gt;
      &lt;column position="3"&gt;
        &lt;width&gt;22%&lt;/width&gt;
        &lt;coplets/&gt;
      &lt;/column&gt;
    &lt;/content&gt;
  &lt;/portal-profile&gt;
  &lt;personal-profile&gt;
    &lt;greeting&gt;Herzlich willkommen&lt;/greeting&gt;
    &lt;messages&gt;
      &lt;coplet_not_available&gt;
        The coplet is currently not available.
      &lt;/coplet_not_available&gt;
    &lt;/messages&gt;
  &lt;/personal-profile&gt;
&lt;/global-delta&gt;
</source>
     </s2>
     <s2 title="The User Status Profile">
        <p>The user status profile contains often changing information like
          the configuration of configurable coplets, the last login time etc. The user
          status profile is optional, but if it is not accessible, customizable coplets
          are not possible.</p>
        <p>For each customizable coplet which is in the portal view of the
          user the status profile contains an XML block with the coplet specific
          configuration for this coplet.</p>
        <source>&lt;status-profile&gt;
  &lt;customization&gt;
    &lt;!-- Custom information for each customizable coplet --&gt;
    &lt;coplet id="popmail" number="3"&gt;
      &lt;host&gt;mail&lt;/host&gt;
      &lt;password&gt;gsgdgsg&lt;/password&gt;
      &lt;mailcount&gt;4&lt;/mailcount&gt;
      &lt;user&gt;walter&lt;/user&gt;
    &lt;/coplet&gt;
  &lt;/customization&gt;
&lt;/status-profile&gt;</source>
     </s2>
  </s1>
  <s1 title="Configuring the portal">
     <p>The configuration of the portal is actually a authentication application
        configuration. Please refer to the authentication documentation for more information
        about authentication handler and application configuration.</p>
     <p>Inside your authentication handler configuration you define for each portal
        an application configuration for the portal like the example portal called
        "sunBank" below:</p>
     <source>    &lt;application name="sunBank"&gt;
  &lt;configuration name="portal"&gt;
    &lt;!-- This is the portal configuration --&gt;
    &lt;portal-uri&gt;finance-portal&lt;/portal-uri&gt;
    &lt;profile-cache&gt;true&lt;/profile-cache&gt;
    &lt;process-coplets-parallel&gt;false&lt;/process-coplets-parallel&gt;
    &lt;default-coplet-timeout&gt;10000&lt;/default-coplet-timeout&gt;
    &lt;profile&gt;
      &lt;!-- The resource for loading the layout profile --&gt;
      &lt;layout-base uri="cocoon://financeresource-layoutprofile"/&gt;
      &lt;!-- The resource for loading the base coplets profile --&gt;
      &lt;coplet-base uri="cocoon://financeresource-copletprofile"/&gt;
      &lt;!-- The optional resource for saving the base coplets profile --&gt;
      &lt;coplet-base-save uri="cocoon://financeresource-savecopletprofile"/&gt;
      &lt;!-- The optional type resource --&gt;
      &lt;type-base uri="cocoon://financeresource-types"/&gt;
      &lt;!-- The optional type resource for the admin configuration --&gt;
      &lt;admin-type-base uri="cocoon://financeresource-admintypes"/&gt;
      &lt;!-- The resources for loading/saving the deltas --&gt;
      &lt;global-delta-load uri="cocoon://financeresource-globalprofile"/&gt;
      &lt;global-delta-save uri="cocoon://financeresource-saveglobalprofile"/&gt;
      &lt;role-delta-load uri="cocoon://financeresource-roleprofile"/&gt;
      &lt;role-delta-save uri="cocoon://financeresource-saveroleprofile"/&gt;
      &lt;user-delta-load uri="cocoon://financeresource-userprofile"/&gt;
      &lt;user-delta-save uri="cocoon://financeresource-saveuserprofile"/&gt;
      &lt;!-- Optional resources for loading/saving the status profile
                     which is required for persistent, customizable coplets --&gt;
      &lt;user-status-load uri="cocoon://financeresource-loadstatusprofile"/&gt;
      &lt;user-status-save uri="cocoon://financeresource-savestatusprofile"/&gt;
      &lt;!-- optional type resources --&gt;
      &lt;global-type-delta uri="..."/&gt;
      &lt;role-type-delta uri="..."/&gt;
      &lt;user-type-delta uri="..."/&gt;
    &lt;/profile&gt;
    &lt;!-- Redirect to this resource, if the user is not authenticated
                 to view that coplet --&gt;
    &lt;auth-redirect&gt;finance-portal&lt;/auth-redirect&gt;
  &lt;/configuration&gt;
&lt;/application&gt;
</source>
     <s2 title="Global Portal Configuration">
        <p>One mandatory configuration value for the portal is the
          <em>portal-uri</em>. It must point to a pipeline which produces the portal view
          for a user (see next section for more information about the pipelines).</p>
     </s2>
     <s2 title="Profile Caching">
        <p>The portal contains an intelligent profile caching mechanism which
          detects automatically changes to profiles and determines upon this information
          which profile must be rebuild. </p>
        <p>Without profile caching a profile is build each time a user logs
          in. With profile caching the profile is only build if there is no cached
          profile or if something has changed in the profiles for this user. Only the
          user status profile is not cached at all as it is often changing.</p>
        <p>By specifying the <em>profile-cache</em> tag in the the portal
          configuration with the value <em>true</em> the profile caching is turned on. If
          the tag is not available no profile caching is performed.</p>
        <p>If profile caching is turned on, the profiles should not be changed
          by hand as the cache does not detect such changes. All changes to the profiles
          must be done using the portal tools. However if you change a profile or part
          of a profile by hand, make sure that you clean the cache afterwords. Cleaning
          the cache can be done either by the provided the portal tools or by deleting all
          files inside the cache directory.</p>
     </s2>
     <s2 title="Global coplet configuration">
        <p>Usually the portal view is generated step by step, e.g. the coplets
          are build one after the other. The portal can be configured to get the coplets
          content parallel to decrease the response time for the portal view. By
          specifying the <em>process-coplets-parallel</em> tag with the value
          <em>true</em>, the coplets are processed parallel.</p>
        <p>If the content of a coplet is not available, e.g. if the
          contentresides on an external HTTP server, the processing of this coplet can
          take a "very long" time, e.g. until a timeout occures. The portal monitors the
          coplets and can stop the processing of a coplet after a distinct period of
          time. This period can be specified by the tag "default-coplet-timeout" in
          milliseconds. If the content of the coplet is not available after the time has
          expired, the coplet is declared as "not available". The default timeout is 10
          minutes.</p>
        <p>For a fine-tuning of coplet timeouts, each coplet can get its own
          timeout (see the sections below).</p>
     </s2>
     <s2 title="Profile Resources">
        <p>Each part of the profile has a corresponding resource which is
          invoked for loading or saving the profile part, e.g. one resource for loading
          the global profile delta and a separate one for saving it. The loading
          resources must deliver the xml described in the previous chapters. </p>
        <p>All resources get the parameter "application" with the name of the
          corresponding application and "handler" with the name of the authentication handler.
          The list below shows the additional parameters for the other resources.</p>
        <ul>
          <li>coplet-base: "profile" with value "coplet-base"
          </li>
          <li>coplet-base-save: "profile" with value "coplet-base"
          </li>
          <li>layout-base: "profile" with value "layout-base"
          </li>
          <li>type-base: "profile" with value "type-base"
          </li>
          <li>admin-type-base: "profile" with value "admin-type-base"
          </li>
          <li>global-delta-load: "profile" with value "global-delta"
          </li>
          <li>global-type-delta: "profile" with value "global-type-delta"
          </li>
          <li>global-delta-save: "profile" with value "global-delta"
          </li>
          <li>role-delta-load: "profile" with value "role-delta", "role"
             with name of the role
          </li>
          <li>role-delta-save: "profile" with value "role-delta", "role"
             with name of the role
          </li>
          <li>role-type-delta: "profile" with value "role-type-delta",
             "role" with role name
          </li>
          <li>user-delta-load: "profile" with value "user-delta", "role"
             with role name, "ID" with user ID
          </li>
          <li>user-delta-save: "profile" with value "user-delta", "role"
             with role name, "ID" with user ID
          </li>
          <li>user-type-delta: "profile" with value "user-type-delta",
             "role" with role name, "ID" with user ID
          </li>
          <li>user-status-load: "profile" with value "user-status", "role"
             with role name, "ID" with the user ID
          </li>
          <li>user-status-save: "profile" with value "user-status", "role"
             with role name, "ID" with the user ID
          </li>
        </ul>
     </s2>
  </s1>
  <s1 title="The Pipelines">
     <p>So far the chapters only described configuring the portal and writing
        resources. This chapter closes the gap and explains the steps for showing the
        portal.</p>
     <p>For defining the pipelines in the sitemap, the portal declares two
        generators (the "portal" generator and the "portal-conf" generator) and one
        action ("portal-auth").</p>
     <s2 title="Displaying the portal view">
        <p>Displaying the portal view is a very simple step: defining a
          pipeline with the "portal" as the generator, the auth-protect action
          for defining the application and an stylesheet for creating the presentation:
          </p>
        <source>&lt;map:match pattern="sunbank-portal"&gt;
  &lt;map:act type="auth-protect"&gt;
    &lt;!-- for getting the portal configuration --&gt;
    &lt;map:parameter name="handler" value="portalhandler"/&gt;
    &lt;map:parameter name="application" value="sunBank"/&gt;
    &lt;map:generate type="portal"/&gt;
    &lt;!-- generate the portal view --&gt;
    &lt;map:transform src="sunbank/styles/portalHTML.xsl"/&gt;
    &lt;!-- presentation in HTML --&gt;
    &lt;map:serialize/&gt;
  &lt;/map:act&gt;
&lt;/map:match&gt;
</source>
        <s3 title="The Generated Portal View">
          <p>The XML generated by the "portal" generator is not exactly the
             same as for the user profile. The portal optimizes and reorganizes the profile.
             All fields (or nodes) which are changeable have the attributes
             "formdescription", "formpath" and "formtype". "formdescription" is a user
             readable description of the field, "formpath" is the name of the form parameter
             which can be used to set the value and "formtype" indicates the type of the
             field. The belonging type can be found in the types section of the
             profile.</p>
          <source>&lt;!-- The portal indicates that the following is the portal view --&gt;
&lt;portal&gt;
  &lt;!-- The configuration of the portal --&gt;
  &lt;configuration&gt;
    &lt;!-- This is the uri which should be invoked for rebuilding the portal view
             and for changing the view. The parameter portalprofile is always
             present and indicates the current profile. --&gt;
    &lt;uri&gt;finance-portlets?portalprofile=uprofile:sunBank:user_admin_cocoon&lt;/uri&gt;
    &lt;!-- This is the uniquie portal profile ID --&gt;
    &lt;profile&gt;uprofile:sunBank:user_admin_cocoon&lt;/profile&gt;
    &lt;media&gt;html&lt;/media&gt;
    &lt;!-- The current media: html or wap --&gt;
  &lt;/configuration&gt;
  &lt;!-- Now the needed part of the layout profile: --&gt;
  &lt;layout&gt;
    &lt;portal&gt;
      &lt;background&gt;
        &lt;color formdescription="Hintergrundfarbe" formpath="portalconf.0.0" formtype="backgroundcolor"&gt;#aab9bf&lt;/color&gt;
      &lt;/background&gt;
      &lt;font&gt;
        &lt;type&gt;Arial, Helvetica, sans-serif&lt;/type&gt;
        &lt;size&gt;2&lt;/size&gt;
        &lt;color formdescription="Schriftfarbe" formpath="portalconf.1.0" formtype="textcolor"&gt;black&lt;/color&gt;
      &lt;/font&gt;
    &lt;/portal&gt;
    &lt;coplets&gt;
      &lt;title&gt;
        &lt;background&gt;
          &lt;color&gt;#46627A&lt;/color&gt;
        &lt;/background&gt;
        &lt;font&gt;
          &lt;type&gt;Arial&lt;/type&gt;
          &lt;size&gt;2&lt;/size&gt;
          &lt;color&gt;#ffffff&lt;/color&gt;
        &lt;/font&gt;
      &lt;/title&gt;
      &lt;content&gt;
        &lt;background&gt;
          &lt;color&gt;#000000&lt;/color&gt;
        &lt;/background&gt;
        &lt;font&gt;
          &lt;type&gt;Arial&lt;/type&gt;
          &lt;size&gt;2&lt;/size&gt;
          &lt;color&gt;#ffffff&lt;/color&gt;
        &lt;/font&gt;
      &lt;/content&gt;
    &lt;/coplets&gt;
  &lt;/layout&gt;
  &lt;!-- This is the portal view: --&gt;
  &lt;header&gt;
    &lt;coplet id="personalize" position="1" number="1"&gt;
      &lt;resource uri="financecoplet-personalize.xml"/&gt;
      &lt;configuration&gt;
        &lt;mandatory&gt;true&lt;/mandatory&gt;
        &lt;sizable&gt;true&lt;/sizable&gt;
        &lt;active&gt;true&lt;/active&gt;
      &lt;/configuration&gt;
      &lt;title&gt;Personalisieren&lt;/title&gt;
      &lt;status&gt;
        &lt;visible&gt;true&lt;/visible&gt;
        &lt;size&gt;max&lt;/size&gt;
      &lt;/status&gt;
      &lt;content&gt;..the coplet content...&lt;/content&gt;
    &lt;/coplet&gt;
  &lt;/header&gt;
  &lt;columns number="3"&gt;
    &lt;column position="1" width="28%"&gt;
      &lt;coplet id="administration" position="1" number="1"&gt;
        &lt;resource uri="financecoplet-administration.xml"/&gt;
        &lt;configuration&gt;
          &lt;mandatory&gt;false&lt;/mandatory&gt;
          &lt;sizable&gt;true&lt;/sizable&gt;
          &lt;active&gt;true&lt;/active&gt;
        &lt;/configuration&gt;
        &lt;title&gt;Portal Administration&lt;/title&gt;
        &lt;status&gt;
          &lt;visible formdescription="Sichtbar" formpath="portalconf.4.0" formtype="BOOLEAN"&gt;true&lt;/visible&gt;
          &lt;size formdescription="Groesse" formpath="portalconf.5.0" formtype="copletsize"&gt;max&lt;/size&gt;
        &lt;/status&gt;
        &lt;content&gt;..the coplet content...&lt;/content&gt;
      &lt;/coplet&gt;
                        ....
                 &lt;/column&gt;
    &lt;column position="2" width="50%"&gt;
            ...
            &lt;/column&gt;
    &lt;column position="3" width="22%"&gt;
            ...
                 &lt;/column&gt;
  &lt;/columns&gt;
  &lt;!-- The personal information --&gt;
  &lt;personal-profile&gt;
    &lt;greeting&gt;Hi there!&lt;/greeting&gt;
    &lt;messages&gt;
      &lt;coplet_not_available&gt;The coplet is currently not available.&lt;/coplet_not_available&gt;
    &lt;/messages&gt;
  &lt;/personal-profile&gt;
&lt;/portal&gt;</source>
        </s3>
      </s2>
      <s2 title="Administration of the portal view">
        <p>Displaying the administration page of the portal is as simple as
          displaying the portal. The difference lies in changing the generator to the
          "portal-conf" generator: </p>
        <source>&lt;map:match pattern="sunbank-conf"&gt;
  &lt;map:act type="auth-protect"&gt;
    &lt;map:parameter name="handler" value="portalhandler"/&gt;
    &lt;map:parameter name="application" value="sunBank"/&gt;
    &lt;map:generate type="portal-conf"/&gt;
    &lt;map:transform src="sunbank/styles/portalconfHTML.xsl"/&gt;
    &lt;map:serialize/&gt;
  &lt;/map:act&gt;
&lt;/map:match&gt;</source>
        <p>Make sure to protect the portal configuration generator as the
          administrator can change all profiles, clear the cache etc. It should only be
          available for real portal administrators.</p>
        <s3 title="The Generated Administration View">
          <p>The XML generated by the "portal-conf" generator is not exactly
             the same as the user profile. The portal addes some information to the profile.
             All fields (or nodes) which are changeable have the attributes
             "formdescription", "formpath" and "formtype". "formdescription" is a user
             readable description of the field, "formpath" is the name of the form parameter
             which can be used to set the value and "formtype" indicates the type of the
             field. The belonging type can be found in the types section of the
             profile.</p>
          <source>&lt;!-- The portalconf node indicates that the following is the portal administration view --&gt;
&lt;portalconf&gt;
  &lt;!-- The configuration of the portal --&gt;
  &lt;configuration&gt;
    &lt;!-- This is the uri which should be invoked for rebuilding the portal view
             and for changing the view. The parameter portalprofile is always
             present and indicates the current profile. --&gt;
    &lt;uri&gt;finance-portlets?portalprofile=uprofile:sunBank:user_admin_cocoon&lt;/uri&gt;
    &lt;!-- This is the uniquie portal profile ID --&gt;
    &lt;profile&gt;uprofile:sunBank:user_admin_cocoon&lt;/profile&gt;
    &lt;media&gt;html&lt;/media&gt;
    &lt;!-- The current media: html or wap --&gt;
  &lt;/configuration&gt;
  &lt;!-- The layout profile, see chapter about the layout profile --&gt;
  &lt;layout-profile&gt;
    &lt;portal&gt;
      &lt;layouts&gt;
        &lt;layout&gt;
          &lt;background&gt;
            &lt;color formdescription="Hintergrundfarbe" formpath="portalconf.0.0" formtype="backgroundcolor"&gt;#aab9bf&lt;/color&gt;
          &lt;/background&gt;
          &lt;font&gt;
            &lt;type&gt;Arial, Helvetica, sans-serif&lt;/type&gt;
            &lt;size&gt;2&lt;/size&gt;
            &lt;color formdescription="Schriftfarbe" formpath="portalconf.1.0" formtype="textcolor"&gt;black&lt;/color&gt;
          &lt;/font&gt;
        &lt;/layout&gt;
      &lt;/layouts&gt;
      &lt;header&gt;
        &lt;exists&gt;true&lt;/exists&gt;
      &lt;/header&gt;
      &lt;columns&gt;
        &lt;number formdescription="Anzahl" formpath="portalconf.2.0" formtype="columnnumber"&gt;3&lt;/number&gt;
      &lt;/columns&gt;
      &lt;footer&gt;
        &lt;exists&gt;false&lt;/exists&gt;
      &lt;/footer&gt;
    &lt;/portal&gt;
    &lt;coplets&gt;
      &lt;layouts&gt;
        &lt;layout&gt;
          &lt;title&gt;
            &lt;background&gt;
              &lt;color&gt;#46627A&lt;/color&gt;
            &lt;/background&gt;
            &lt;font&gt;
              &lt;type&gt;Arial&lt;/type&gt;
              &lt;size&gt;2&lt;/size&gt;
              &lt;color&gt;#ffffff&lt;/color&gt;
            &lt;/font&gt;
          &lt;/title&gt;
          &lt;content&gt;
            &lt;font&gt;
              &lt;type&gt;Arial&lt;/type&gt;
              &lt;size&gt;2&lt;/size&gt;
              &lt;color&gt;#000000&lt;/color&gt;
            &lt;/font&gt;
            &lt;background&gt;
              &lt;color&gt;#ffffff&lt;/color&gt;
            &lt;/background&gt;
          &lt;/content&gt;
        &lt;/layout&gt;
      &lt;/layouts&gt;
    &lt;/coplets&gt;
  &lt;/layout-profile&gt;
  &lt;!-- The coplets profile, see chapter about the coplets profile --&gt;
  &lt;coplets-profile&gt;
    &lt;coplets&gt;
      &lt;coplet id="banknews"&gt;
        &lt;resource uri="onlinecoplet-banking.xml"/&gt;
        &lt;configuration&gt;
          &lt;mandatory&gt;false&lt;/mandatory&gt;
          &lt;sizable&gt;true&lt;/sizable&gt;
          &lt;active&gt;true&lt;/active&gt;
        &lt;/configuration&gt;
        &lt;title&gt;Banking News&lt;/title&gt;
        &lt;status&gt;
          &lt;visible&gt;true&lt;/visible&gt;
          &lt;size&gt;max&lt;/size&gt;
        &lt;/status&gt;
      &lt;/coplet&gt;
             ...
            &lt;/coplets&gt;
  &lt;/coplets-profile&gt;
  &lt;!-- The type profile, see the chapter about the type profile --&gt;
  &lt;typedefs&gt;
         ...
     &lt;/typedefs&gt;
  &lt;!-- And now the portal view, see chapter about the portal profile --&gt;
  &lt;portal-profile&gt;
    &lt;content&gt;
      &lt;header&gt;
        &lt;coplet id="personalize" position="1" number="1"&gt;
          &lt;status&gt;
            &lt;visible&gt;true&lt;/visible&gt;
            &lt;size&gt;max&lt;/size&gt;
          &lt;/status&gt;
        &lt;/coplet&gt;
      &lt;/header&gt;
      &lt;column position="1"&gt;
        &lt;width formdescription="Breite" formpath="portalconf.3.0" formtype="CARDINAL"&gt;28%&lt;/width&gt;
        &lt;coplets&gt;
          &lt;coplet id="administration" position="1" number="2"&gt;
            &lt;status&gt;
              &lt;visible formdescription="Sichtbar" formpath="portalconf.4.0" formtype="BOOLEAN"&gt;true&lt;/visible&gt;
              &lt;size formdescription="Groesse" formpath="portalconf.5.0" formtype="copletsize"&gt;max&lt;/size&gt;
            &lt;/status&gt;
          &lt;/coplet&gt;
                               ...
                        &lt;/coplets&gt;
      &lt;/column&gt;
      &lt;column position="2"&gt;
                   ...
                    &lt;/column&gt;
      &lt;column position="3"&gt;
                   ...
                    &lt;/column&gt;
    &lt;/content&gt;
  &lt;/portal-profile&gt;
  &lt;!-- The personal profile, see the corresponding chapter --&gt;
  &lt;personal-profile&gt;
    &lt;greeting&gt;Hi there!&lt;/greeting&gt;
    &lt;messages&gt;
      &lt;coplet_not_available&gt;The coplet is currently not available.&lt;/coplet_not_available&gt;
    &lt;/messages&gt;
  &lt;/personal-profile&gt;
&lt;/portalconf&gt;
</source>
        </s3>
     </s2>
     <s2 title="Changing the Profile">
        <p>The profile can be changed using a HTTP request. The invoked
          resources is the uri defined in the "configuration" section of the portal view.
          It contains already the needed parameter "portalprofile" with the given value.
          This parameter tells the portal which profile it should change.</p>
        <p> Each field which is changeable has the parameters
          "formdescription", "formtype" and "formpath". The "formdescription" is a
          user-readable text for this field. The "formtype" is the type of the field. It
          is a type name which has a corresponding entry in the type profile. The type
          profile contains all possible values for this particular type. The "formpath"
          contains the name of the field to change. So changing an field is submitting a
          form value with the name of "formpath" and one of the values denoted by the
          "formtype". </p>
        <p>In addition to this the portal recognizes the special parameter
          "portalcmd". It can control the appearance of the coplets. The value of the
          parameter is one of the following followed by '_', the coplet id attribute,
          another '_' and the coplet number attribute. For example minimizing a coplet is
          done by passing "portalcmd=minimize_1_3" to the request. The commands are as
          follows:</p>
        <ul>
          <li>"maximize" : Maximize the coplet.
          </li>
          <li>"minimize" : Minimize the coplet.
          </li>
          <li>"close" or "hide" : Close the coplet, it will not be
             displayed in the portal view, but is still configured.
          </li>
          <li>"open" or "show" : A configured coplet will be included in
             the portal view again.
          </li>
          <li>"delete" : Remove the coplet from the profile.
          </li>
          <li>"move" : Move the coplet to the column which is append to
             value separated by '_'. So "portalcmd=move_1_3_2" would move the coplet into
             the 2nd column.
          </li>
          <li>"new" : Add a new coplet to the profile. Only the attribute
             id of the coplet is passed. Instead of the number attribute the column number
             is appended. If instead "header" or "footer" is passed instead of the column
             number, the coplet is moved into that special area.
          </li>
          <li>"update" : Change from the customization view of the coplet
             to the coplet content view.
          </li>
        </ul>
        <p>The profile can be save persistent by sending the parameter
          "portalcmd" with the value "save"in addition to the "portalprofile"
          parameter.</p>
     </s2>
     <s2 title="Defining coplets">
        <p>Defining a pipeline for a coplet is also very straightforward.
          Together with your "real" pipeline for defining the content and doing the
          presentation, the "auth-protect" action is needed. This action defines
          the application and portal, the coplet (pipeline) belongs to:</p>
        <source>&lt;map:match pattern="licence-coplet"&gt;
  &lt;!-- Get the application configuration --&gt;
  &lt;map:act type="auth-protect"&gt;
    &lt;map:parameter name="handler" value="portalhandler"/&gt;
    &lt;map:parameter name="application" value="sunBank"/&gt;
    &lt;!-- secure the coplet: --&gt;
    &lt;map:act type="portal-auth"&gt;
      &lt;map:parameter name="coplet" value="licencing"/&gt;
    &lt;/map:act&gt;
    &lt;!-- The resource containg the licencing information: --&gt;
    &lt;map:generate src="cocoon/licencing.xml"/&gt;
    &lt;!-- present it in HTML --&gt;
    &lt;map:transform src="sunbank/styles/HTML.xsl"/&gt;
    &lt;!-- Serialize it to XML for including in the portal view: --&gt;
    &lt;map:serialize/&gt;
  &lt;/map:act&gt;
&lt;/map:match&gt;
</source>
        <p>In addition you can secure the pipeline of the coplet. So only users
           who can select this coplet in their profile can invoke the pipeline.
           This extra protection is performed by the "portal-auth" action:</p>
        <source>&lt;map:match pattern="licence-coplet"&gt;
  &lt;!-- Get the application configuration --&gt;
  &lt;map:act type="auth-protect"&gt;
    &lt;map:parameter name="handler" value="portalhandler"/&gt;
    &lt;map:parameter name="application" value="sunBank"/&gt;
    &lt;!-- secure the coplet: --&gt;
    &lt;map:act type="portal-auth"&gt;
      &lt;map:parameter name="coplet" value="licencing"/&gt;
    &lt;/map:act&gt;
    &lt;!-- The resource containg the licencing information: --&gt;
    &lt;map:generate src="cocoon/licencing.xml"/&gt;
    &lt;!-- present it in HTML --&gt;
    &lt;map:transform src="sunbank/styles/HTML.xsl"/&gt;
    &lt;!-- Serialize it to XML for including in the portal view: --&gt;
    &lt;map:serialize/&gt;
  &lt;/map:act&gt;
&lt;/map:match&gt;</source>
        <p>In this example the coplet is protected by the use of the parameter
          tag inside the "portal-auth" action. Only if the user is allowed to
          view/configure the coplet with the ID "licencing", he can invoke this resource.
          If this security command is left out, everyone is able to get the resource by
          simply invoking it directly from the browser. However, if the coplet is
          protected it is not necessary that a user has choosen that coplet for his
          current portal view to invoke the resource. In addition it is possible to
          specify the parameter without a specific coplet name. This protects the
          resource as a coplet: Only users which are logged in to the portal can view the
          resource.</p>
     </s2>
     <s2 title="Getting Profile Information within a coplet">
        <p>Each coplet has access to nearly all information of the profile,
          including layout information and configuration. The coplet can retrieve this
          information using a special session context called <em>portal</em>. With the
          familiar commands of the <em>session</em> transformer (<em>getxml</em> etc.)
          the information can be included in the current xml stream of a coplet.</p>
        <p>The content of the context looks like the following:</p>
        <source>&lt;layout&gt;
  &lt;portal&gt;
    &lt;background&gt;
      &lt;color formdescription="Hintergrundfarbe" formpath="portalconf.0.0" formtype="backgroundcolor"&gt;#aab9bf&lt;/color&gt;
    &lt;/background&gt;
    &lt;font&gt;
      &lt;type&gt;Arial, Helvetica, sans-serif&lt;/type&gt;
      &lt;size&gt;2&lt;/size&gt;
      &lt;color formdescription="Schriftfarbe" formpath="portalconf.1.0" formtype="textcolor"&gt;black&lt;/color&gt;
    &lt;/font&gt;
  &lt;/portal&gt;
  &lt;coplets&gt;
    &lt;title&gt;
      &lt;background&gt;
        &lt;color&gt;#46627A&lt;/color&gt;
      &lt;/background&gt;
      &lt;font&gt;
        &lt;type&gt;Arial&lt;/type&gt;
        &lt;size&gt;2&lt;/size&gt;
        &lt;color&gt;#ffffff&lt;/color&gt;
      &lt;/font&gt;
    &lt;/title&gt;
    &lt;content&gt;
      &lt;background&gt;
        &lt;color&gt;#000000&lt;/color&gt;
      &lt;/background&gt;
      &lt;font&gt;
        &lt;type&gt;Arial&lt;/type&gt;
        &lt;size&gt;2&lt;/size&gt;
        &lt;color&gt;#ffffff&lt;/color&gt;
      &lt;/font&gt;
    &lt;/content&gt;
  &lt;/coplets&gt;
&lt;/layout&gt;
&lt;configuration&gt;
  &lt;!-- This is the uri which should be invoked for rebuilding the portal view
             The parameter portalprofile is always
             present and indicates the current profile. --&gt;
  &lt;uri&gt;finance-portlets?portalprofile=uprofile:sunBank:user_admin_cocoon&lt;/uri&gt;
  &lt;!-- This is the uniquie portal profile ID --&gt;
  &lt;profile&gt;uprofile:sunBank:user_admin_cocoon&lt;/profile&gt;
  &lt;media&gt;html&lt;/media&gt;
  &lt;!-- The current media: html or wap --&gt;
&lt;/configuration&gt;
</source>
        <p>Using this information the coplet can layout itself with the layout
          chosen by the user for the portal. For example a <em>&lt;session:getxml
          context="portal" path="/layout/coplets/content/background/color"/&gt;</em> is
          replaced by the session transformer with the color value for the background
          (here "#000000)".</p>
     </s2>
     <s2 title="Writing Customizable coplets">
        <p>Writing a customizable coplet requires two task:</p>
        <ol>
          <li>Creating the resource for the customization of the coplet
          </li>
          <li>Creating a resource for the coplet content which uses the
             configuration
          </li>
        </ol>
        <p>The resource for the customization is very similar to the "real"
          resource for the coplet. It is - in most cases - a pipeline which delivers xml
          and this xml is included in the portal view. Usually this xml contains a form
          for the user to define the configuration of the coplet.</p>
        <p>The configuration of the coplet is available using the special
          <em>portal</em> session context. For a customizable coplet this context is
          augmented with the current configuration of the coplet:</p>
        <source>&lt;layout&gt;
    ...
&lt;/layout&gt;
&lt;configuration&gt;
    ...
    &lt;context&gt;unique id for the coplet for external applications&lt;/context&gt;
&lt;/configuration&gt;
&lt;coplet-data&gt;
    ... the configuration ....
&lt;/coplet-data&gt;</source>
        <p>Using the Cocoon form handling it is very easy to write a
          customization view for a coplet. The following example dispalys a form for a
          mail coplet which requires the configuration for a mail host, a user name and a
          password.</p>
        <source>&lt;page xmlns:session="http://apache.org/cocoon/session/1.0"&gt;
  &lt;!-- Define a form --&gt;
  &lt;session:form name="popmail" method="POST"&gt;
    &lt;session:action&gt;
      &lt;!-- The action is send to the pipeline redisplaying the portal --&gt;
      &lt;session:getxml context="portal" path="/configuration/uri"/&gt;
    &lt;/session:action&gt;
    &lt;!-- Create the input fields for
             host, username and password --&gt;
    &lt;session:content&gt;
      &lt;session:inputxml context="portal" path="/coplet-data/host" name="Host" type="text"/&gt;
      &lt;session:inputxml context="portal" path="/coplet-data/user" name="User" type="text"/&gt;
      &lt;session:inputxml context="portal" path="/coplet-data/password" name="Password" type="password"/&gt;
    &lt;/session:content&gt;
    &lt;!-- The submit button --&gt;
    &lt;input type="submit" value="Customize"/&gt;
  &lt;/session:form&gt;
&lt;/page&gt;</source>
        <p>The <em>inputxml</em> tags assure that the information
          provided by the user is automatically written into the <em>portal</em> context
          at the places provided.</p>
        <p>Writing the resource for the coplet is as easy. The coplet can use
          the <em>getxml</em> command to retrieve to configuration from the
          <em>portal</em> context:</p>
        <source>&lt;page xmlns:session="http://apache.org/cocoon/session/1.0"&gt;
  &lt;!-- Get the configuration information out of the portal context --&gt;
  &lt;!-- and feed it into the getmail command --&gt;
  &lt;session:getmail&gt;
    &lt;session:user&gt;
      &lt;!-- Set the user --&gt;
      &lt;session:getxml path="/coplet-data/user" context="portal"/&gt;
    &lt;/session:user&gt;
    &lt;session:password&gt;
      &lt;!-- Set the password --&gt;
      &lt;session:getxml path="/coplet-data/password" context="portal"/&gt;
    &lt;/session:password&gt;
    &lt;session:host&gt;
      &lt;!-- Seet the host --&gt;
      &lt;session:getxml path="/coplet-data/host" context="portal"/&gt;
    &lt;/session:host&gt;
  &lt;/session:getmail&gt;
&lt;/page&gt;</source>
        <p>Each time the coplet configuration changes the user status profile
          is automatically saved.</p>
     </s2>
     <s2 title="External Resources and Customizable coplets">
        <p>External resources which are configured with the same authentication
          handler and application as the portal can retrieve configuration information
          from a coplet. If the resource is invoked with the request parameter
          <em>portalcontext</em> it has access to the same portal context as the
          coplet.</p>
        <p>The value for the request parameter can be retrieved by the calling
          resource, e.g. the coplet, from the <em>portal</em> context using the path
          <em>/configuration/context</em>. The external resource must have the
          <em>portal-auth</em> action configured in its pipeline. The action
          checks for the request parameter and grants the resource access to the
          <em>portal</em> context of the coplet.</p>
     </s2>
  </s1>
</body>
</document>
