<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 1999-2004 The Apache Software Foundation

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.0//EN" "document-v10.dtd">

<document>

  <header>
    <title>Redirection</title>
    <authors>
      <person name="Upayavira" email="upayavira@apache.org"/>
    </authors>
  </header>

<body>

    <s1 title="Introduction">
      <p>
        A Redirector allows the sitemap to pass a request for one URI on to another,
        whether that other URI is handled by Cocoon or not.
      </p>
      <p>
        To redirect from <code>page1.html</code> to <code>page2.html</code>, you can use
        the following:
      </p>
        <source>
<![CDATA[
  <map:match pattern="page1.html">
    <map:redirect-to uri="page2.html"/>
  </map:match>
]]>
        </source>

    </s1>

    <s1 title="HTTP redirects and how they work">
      <p>If the URI specified does not use the Cocoon: protocol, then an HTTP redirect
         will occur. The new URI is sent back to the client, which will then request
         the page from this new location.
      </p>
      <p>Therefore, directory handling in redirect URIs works differently from other
         sitemap components.
      </p>
      <p>If the new URI is relative, then it will be relative to the directory of the 
         page that called it, not relative to the URI of the sitemap containing it.
         Thus, the following is incorrect:
      </p>
<source>
<![CDATA[
  <map:match pattern="folder/page1.html">
    <map:redirect-to uri="folder/page2.html"/>
  </map:match>
]]>
</source>
      <p>
         This will in fact redirect the user to folder/folder/page2.html, which is
         probably not intended. The correct version is:
      </p>
<source>
<![CDATA[
  <map:match pattern="folder/page1.html">
    <map:redirect-to uri="page2.html"/>
  </map:match>
]]>    
</source>
    </s1>
    <s1 title="Internal Redirects Using the Cocoon Protocol">
      <p>
        A redirection URI can make use of the <code>cocoon:</code> protocol to return
        content from another Cocoon pipeline. In this case, the redirection happens     
        internally. The content from the redirected URI is returned to the client as 
        if it came from the original URI.
      </p>
      <p>
        Directory handling is the same here as for other sitemap components. So that:
      </p>
<source>
<![CDATA[
  <map:match pattern="folder/page1.html">
    <map:redirect-to uri="cocoon:/folder/page2.html"/>
  </map:match>
]]>
</source>
      <p>
        will return the content of <code>page2.html</code> to the client in response
        to the request for <code>page1.html</code>.
      </p>
      <p>
        Note: when the <code>cocoon:</code> protocol is used, an HTTP redirect is not
        used.
      </p>
    </s1>
    
    <s1 title="Session Management with Redirects">
      <p>
      By setting the <code>session</code> attribute to <code>yes</code>, the current
      session will be maintained during the redirect.
      </p>
    </s1>
    
    <s1 title="Temporary and Permanent Redirects">
      <p>
      By default, an HTTP redirect sends a code of <code>SC_MOVED_TEMPORARILY</code>, 
      (<code>302</code>). This instructs the user agent to use the new URI, but not to
      cache the resulting page, as it may well soon revert back to the old URI.
      </p>
      <p>
        This can be a problem for pages that have been moved permanently, as the new
        page will never be cached, placing additional load on both the browser and on
        the server.
      </p>
      <p>
        This can be avoided using a permanent redirect, using a code of 
        <code>SC_MOVED_PERMANENTLY</code> (<code>301</code>). A permanent redirect 
        can be specified as:
      </p>
       <source>
<![CDATA[
  <map:match pattern="page1.html">
    <map:redirect-to uri="page2.html" permanent="yes"/>
  </map:match>
]]>
        </source>   
      <p>
        This results in the user agent caching the redirected page, and thus saves
        resources both on the server and for the client's browser.
      </p>
    </s1>
    
    <s1 title="Redirects in Pipelines">
      <p>
        A redirect must stand alone in a pipeline - it cannot occur after a generator.
        If a redirect needs to be generated conditionally by a pipeline, then a 
        <code>&lt;meta&gt;</code> tag redirect should be added into the 
        <code>&lt;head&gt;</code> of the HTML page. The syntax for this is:
      </p>
      <source>
<![CDATA[  
<html>
  <head>
    <meta http-equiv="refresh" content="0;URL=page2.html"/>
    ...
  </head>
  ...
</html>
]]>
        </source>
    </s1>
    
    <s1 title="Global Redirects">
      <p>
        When an aggregator accesses a source that includes a redirection, it will 
        aggregate the document specified by the redirection URI.
      </p>
      <p>
        Alternatively, if a redirection that has the <code>global</code> attribute is set 
        (to <code>yes</code> or <code>true</code>) occurs within an aggregation, the 
        aggregation is cancelled and the redirect is sent back to the client.
      </p>
    </s1>
    
    <s1 title="Redirecting to Resources">
      <p>Specifiying a <code>resource</code> attribute allows the redirection to a sitemap
      resource. This usage has been deprecated. <code>map:call</code> should be used
      instead.
      </p>
    </s1>

</body>
</document>
