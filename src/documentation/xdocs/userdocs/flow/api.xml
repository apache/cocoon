<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.0//EN" "../../dtd/document-v10.dtd">

<document>
  <header>
    <title>Advanced Control Flow</title>
    <authors>
      <person name="Ovidiu Predescu" email="ovidiu@apache.org"/>
      <person name="Christopher Oliver" email="coliver@apache.org"/>
    </authors>
  </header>

  <body>
    <s1 title="JavaScript API">
	  <p>Cocoon provides a JavaScript API to manage control flow based on an
        <link href="http://cvs.cocoondev.org/cgi-bin/viewcvs.cgi/?cvsroot=rhino">extended</link>
        version of <link href="http://www.mozilla.org/rhino">Mozilla Rhino</link> that supports continuations.</p>
    </s1>
    <s1 title="Functions">
    <s2 title = "sendPage"><anchor id="sendPage"/>
      <p>
      <em>Function</em> <code>sendPage([String] uri, [Object] bean)</code>
      </p>
      <p>
      Passes control to the Cocoon sitemap to generate the output page.
      </p>
      <p>
      <code>uri</code> is the relative URL of the page to be sent back to the client.
      </p>
      <p>
       <code>bean</code> is a context object which can be accessed inside this page to extract
       various values and place them in the generated page.
      </p>
    </s2>
    <s2 title = "sendPageAndWait"><anchor id="sendPageAndWait"/>
    <p>
    <em>Function</em> <code>[WebContinuation] sendPageAndWait([String] uri, [Object] bean, [Number] timeToLive)</code>
    </p>
     <p>
     Passes control to the Cocoon sitemap to generate the output page.
     </p>
     <p>The flow script is suspended after the page is generated and the whole execution stack
        saved in the WebContinuation object returned from this function. </p>
     <p><code>uri</code> is the relative URL of the page to be sent back to the client.
        <code>bean</code> is a context object which can be accessed inside this page to extract
        various values and place them in the generated page.</p>
     <p><code>timeToLive</code> is the time to live in milliseconds for the continuation created.</p>
     <p>The return value is the <link href="#WebContinuation">continuation</link> object.</p>
    </s2>
  </s1>
    <s1 title="Objects">
    <s2 title = "cocoon">
    <p>The <code>cocoon</code> object represents the current Cocoon sitemap and provides the following readonly properties:</p> 
    <s3 title="request">
    <p>The current Cocoon request:</p>
    <p>
    <em>Property</em> <code>[</code><link href="../../../api/java/org/apache/cocoon/environment/Request.html"><code>org.apache.cocoon.environment.Request</code></link><code>] request</code>
    </p>
    </s3>
    <s3 title="response">
    <p>The current Cocoon response:</p>
    <p>
    <em>Property</em> <code>[</code><link href="../../../api/java/org/apache/cocoon/environment/Response.html"><code>org.apache.cocoon.environment.Response</code></link><code>] response</code>
    </p>
    </s3>
    <s3 title="session">
    <p>The current Cocoon session:</p>
    <p>
    <em>Property</em> <code>[</code><link href="../../../api/java/org/apache/cocoon/environment/Session.html"><code>org.apache.cocoon.environment.Session</code></link><code>] session</code>
    </p>
    </s3>
    <s3 title="context">
    <p>The current Cocoon application context:</p>
    <p>
    <em>Property</em> <code>[</code><link href="../../../api/java/org/apache/cocoon/environment/Context.html"><code>org.apache.cocoon.environment.Context</code></link><code>] context</code>
    </p>
    </s3>
    <s3 title="environment">
    <p>The current Cocoon environment:</p>
    <p>
    <em>Property</em> <code>[</code><link href="../../../api/java/org/apache/cocoon/environment/Environment.html"><code>org.apache.cocoon.environment.Environment</code></link><code>] environment</code>
    </p>
    </s3>
    <s3 title="componentManager">
    <p>The current Sitemap's component manager:</p>
    <p>
    <em>Property</em> <code>[org.apache.avalon.framework.component.ComponentManager] componentManager</code>
    </p>
    </s3>
    <s3 title="parameters">
    <p>Any parameters passed to the script by the Sitemap:</p>
    <p>
    <em>Property</em> <code>[Array [org.apache.avalon.framework.parameters.Parameters]] parameters</code>
    </p>
    <p>The <code>cocoon</code> object also provides the following functions:</p>
    </s3>
    <s3 title="process">
    <p>
    <em>Function</em> <code>[Boolean] process([String] uri, [Object] bizData, [java.io.OutputStream] stream)</code></p>
    <p>
     Call the Cocoon sitemap for the given URI, sending the output of the
     eventually matched pipeline to the specified <code>OutputStream</code>.</p>
    <p><code>uri</code> is the URI for which the request should be generated.</p>
    <p><code>bizData</code> is the business data object
     to be made available to the forwarded pipeline</p>
     <p><code>stream</code> is an <code>OutputStream</code> where the output should be written to.</p>
     <p>Returns the result from the Cocoon processor.
     </p>
    </s3>
    <s3 title="createSession"><anchor id="createSession"/>
      <p><em>Function</em> <code>createSession()</code></p>
      <p>
        Associate the current set of JavaScript global variables with the user's session. This means
        that all invocations from the sitemap of a JavaScript function (using the
        <link href="sitemap.html#callFunction">&lt;map:call function="..."&gt;</link>), will share
        global JavaScript variables.
      </p>
    </s3>
    <s3 title="removeSession">
    <p>
    <em>Function</em> <code>removeSession()</code>
    </p>
    <p>
       Dissociate global JavaScript variables from the user's session.
    </p>
    </s3>
    <s3 title="load">
    <p><em>Function</em> <code>load([String] uri)</code></p>
    <p>
      Load the JavaScript script specified by <code>uri</code>. The Cocoon
     source resolver is used to resolve <code>uri</code>. 
    </p>
    </s3>
    </s2>
    <s2 title="WebContinuation"><anchor id="WebContinuation"/>
    <p>A <code>WebContinuation</code> represents a continuation of a Flowscript. Because a user may click on the back button in the browser and restart a saved computation in a continuation, each <code>WebContinuation</code> becomes the parent of a subtree of continuations.
    </p>
    <p>
       If there is no parent <code>WebContinuation</code>, the created continuation becomes the root of a tree of <code>WebContinuation</code>s.
    </p>
    <p>
       <code>WebContinuation</code> objects support the following functions and properties:
    </p>
    <s3 title="getContinuation">
    <p>
        <em>Function</em> <code>[WebContinuation] getContinuation([Number] level)</code>
    </p>
    <p>
      Return the ancestor continuation situated <code>level</code>s
      above the current continuation. The current instance is
      considered to be at level 0. The parent continuation of the
      receiving instance at level 1, its parent is at level 2 relative
      to the receiving instance. If <code>level</code> is bigger than
      the depth of the tree, the root of the tree is returned.
    </p>
    </s3>
    <s3 title="invalidate">
    <p>
        <em>Function</em> <code>invalidate()</code>
    </p>
    <p>
      Invalidates a <code>WebContinuation</code>. This effectively
      means that the continuation object associated with it will no
      longer be accessible from Web pages. Invalidating a
      <code>WebContinuation</code> invalidates all the
      <code>WebContinuation</code>s which are children of it.    
    </p>
    </s3>
    <s3 title="id">
    <p><em>Property</em> <code>[String] id</code></p>
    <p>Returns the unique string identifier of this continuation</p>
    </s3>
    </s2>
    </s1>
  </body>
</document>
