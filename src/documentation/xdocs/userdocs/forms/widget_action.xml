<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 1999-2004 The Apache Software Foundation

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.0//EN" "dtd/document-v10.dtd">

<document>
  <header>
    <title>Cocoon Forms: action widget</title>
    <authors>
      <person name="The Apache Cocoon Team" email="dev@cocoon.apache.org"/>
    </authors>
  </header>
  <body>
    <s1 title="action widget">
      <p>Used to trigger an action event on the server side. Usually presented
      as a button the user can press (though this is not required). When an
      action widget was activated, validation will not be performed. This
      is because usually it would be strange to have other fields validated
      when the user's intention wasn't really to submit the form. If you want
      validation to happen, use the submit widget. After pressing an action
      button, the form will normally always be redisplayed, unless the event
      handling code explicitely disables this (by using the endFormProcessing
      method on the form object).</p>

      <source><![CDATA[<fd:action id="..." action-command="...">
  <fd:label>...</fd:label>
  <fd:help>...</fd:help>
  <fd:hint>...</fd:hint>
  <fd:on-action>
    ...
  </fd:on-action>
</fd:action>]]></source>

      <p>The <strong>action-command</strong> attribute specifies a name
      that will be part of the event generated by this widget. It can be
      used to distinguish events originated from this fd:action from another one.</p>

      <p>For more information on how event handlers are defined, see
      <link href="eventhandling.html">Event Handling</link>. The interface
      to be implemented for Java event listeners is
      <code>org.apache.cocoon.forms.event.ActionListener</code>.
      The WidgetEvent subclass is <code>org.apache.cocoon.forms.event.ActionEvent</code>.</p>
    </s1>
  </body>
</document>