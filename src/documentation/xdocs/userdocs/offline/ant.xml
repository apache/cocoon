<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 1999-2004 The Apache Software Foundation

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.0//EN" "document-v10.dtd">

<document>
  <header>
   <title>Offline Page Generation with Apache Ant</title>
   <version>1.0</version>
   <type>Technical document</type>
   <authors><person name="Upayavira" email="upayavira@apache.org"/>
   </authors>
   <abstract>This document explains how to use Cocoon to generate offline pages and sites with Apache Ant.</abstract>
  </header>
  <body>
   <s1 title="Overview">
    <p>Apache Ant can be used to start Cocoon in its Offline mode. A specific Ant 
       task is available, allowing the user to embed the Cocoon configuration 
       information into Ant's build script.
            </p>
   </s1>
   <s1 title="Configuring the Ant task">
     <p>The main configuration for the task is to specify a <code>cocoon.context</code> property which points to the
        Cocoon webapp from which the pages or site are to be generated.</p>
     <p>From this property, a classpath can be created. By default, this should point to <code>WEB-INF/classes</code> 
        and all jar files in <code>WEB-INF/lib</code>. Futher classpaths can be added if they are needed.</p>
     <p>The taskdef requires this classpath in order to invoke the Ant task, and the task itself needs the classpath in
        order to invoke Cocoon.</p>
     <p>Beyond these configurations, the rest are the same as is used by the <link href="cli.html">Command Line interface</link>,
        and is detailed on the <link href="configuration.html">configuration</link> page.</p>
   </s1>
   <s1 title="Sample Ant Task">
       <p>A sample ant build file is shown below. This sample shows only that which is required to configure the
          Ant task. For further details of configuring Cocoon, see the <link href="configuration.html">configuration</link>
          page.</p>
       <source>
<![CDATA[
<?xml version="1.0"?>
<project default="cocoon" basedir=".">

    <property name="cocoon.context" value="../cocoon/build/webapp"/>
    <path id="cocoon.classpath">
      <dirset dir="${cocoon.context}/WEB-INF/classes"/>
      <fileset dir="${cocoon.context}/WEB-INF/lib" includes="*.jar"/>
    </path>
 
    <taskdef name="cocoon" classname="org.apache.cocoon.CocoonTask" classpathref="cocoon.classpath"/>
    
    <target name="cocoon">

        <cocoon verbose="true"  
                classpathref="cocoon.classpath"
                follow-links="true" 
                precompile-only="false" 
                confirm-extensions="false"
                context-dir="${cocoon.context}"
                config-file="WEB-INF/cocoon.xconf"
                work-dir="build/work"
                dest-dir="build/dest"
                default-filename="index.html"
                accept="*/*">
        
           <broken-links type="xml" 
                         file="brokenlinks.xml"
                         generate="false"
                         extension=".error"/>
           
           <logging log-kit="${cocoon.context}/WEB-INF/logkit.xconf" logger="cli" level="DEBUG" />
    
           <uris name="site" follow-links="true">
               <uri type="append" 
                    src-prefix="" 
                    src="index.html"
                    dest="${cocoon.context}/build/dest/"/>
           </uris>        
        </cocoon>
    </target>
</project>
]]>    </source>
     </s1>
  </body>
</document>

