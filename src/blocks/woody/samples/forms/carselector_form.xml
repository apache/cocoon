<?xml version="1.0"?>
<!--
  Copyright 1999-2004 The Apache Software Foundation

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!-- form used to illustrate programmatic changing of listbox content. -->
<wd:form
  xmlns:wd="http://apache.org/cocoon/woody/definition/1.0"
  xmlns:i18n="http://apache.org/cocoon/i18n/2.1">

  <wd:widgets>
    <wd:field id="make" required="true">
      <wd:label>Make:</wd:label>
      <wd:datatype base="string"/>
      <wd:selection-list src="cocoon:/cars" dynamic="true"/>
      <wd:on-value-changed>
        <javascript>
          java.lang.System.err.println("maker changed from " + event.oldValue + " to " + event.newValue);
          var value = event.source.value;
          var typewidget = event.source.parent.getWidget("type");
          if (value != null) {
            // Get the corresponding type list
            typewidget.setSelectionList("cocoon:/cars/" + value);
          } else {
            // Reset the value (will clear validation error)
            event.source.setValue(null);
            // Set an empty selection list
            typewidget.setSelectionList(new Packages.org.apache.cocoon.woody.datatype.EmptySelectionList("Select a maker first"));
          }
          // Always set the type value to null. Note that it will also fire an event on the "type"
          // widget if it already had a value.
          typewidget.setValue(null);
          
          // Fun with messages...
          var msg = event.source.parent.getWidget("message");
          if (value == null) {
            msg.value = "Yep. Choosing a maker is not that easy...";
          } else {
            if (event.oldValue == null) {
              msg.value = "Good. " + value + " makes good cars!";
            } else {
              msg.value = "Why not? " + value + " also makes good cars!";
            }
          }
        </javascript>
      </wd:on-value-changed>
    </wd:field>
  
    <wd:field id="type" required="true">
      <wd:label>Type:</wd:label>
      <wd:datatype base="string"/>
      <wd:selection-list>
        <wd:item value="">
          <wd:label>Select a maker first</wd:label>
        </wd:item>
      </wd:selection-list>
      <wd:on-value-changed>
        <javascript>
          java.lang.System.err.println("type changed to " + event.source.value);
          var value = event.source.value;
          var modelwidget = event.source.parent.getWidget("model");
          var makewidget = event.source.parent.getWidget("make");
          if (value != null) {
            modelwidget.setSelectionList("cocoon:/cars/" + makewidget.value + "/" + value);
          } else {
            // Reset the value (will clear validation error)
            event.source.setValue(null);
            // Set an empty selection list
            modelwidget.setSelectionList(new Packages.org.apache.cocoon.woody.datatype.EmptySelectionList("Select a type first"));
          }
          
          // Always set the model value to null. Note that it will also fire an event on the "model"
          // widget if it already had a value.
          modelwidget.setValue(null);
          
          // Fun with messages...
          if (value != null) {
            var msg = event.source.parent.getWidget("message");
            if (event.oldValue == null) {
              msg.value = "A " + makewidget.value + " " + value + " is a very good choice.";
            } else {
              msg.value = "So you prefer a " + value + " ?";
            }
          }
        </javascript>
      </wd:on-value-changed>
    </wd:field>
    
    <wd:field id="model" required="true">
      <wd:label>Model:</wd:label>
      <wd:datatype base="string"/>
      <wd:selection-list>
        <wd:item value="">
          <wd:label>Select a type first</wd:label>
        </wd:item>
      </wd:selection-list>
      <wd:on-value-changed>
        <javascript>
          var value = event.source.value;
          if (value != null) {
            event.source.parent.getWidget("message").setValue("Model " + value + " is a great car!");
          } else {
            // Reset value
            event.source.value = null;
          }
        </javascript>
      </wd:on-value-changed>
    </wd:field>
  
    <wd:output id="message">
      <wd:datatype base="string"/>
    </wd:output>
  
  </wd:widgets>

</wd:form>
