<?xml version="1.0" encoding="ISO-8859-1"?>

<!-- CVS: $Id: cacheable.xsp,v 1.2 2003/05/01 10:08:20 bdelacretaz Exp $ -->

<xsp:page language="java"
          xmlns:xsp="http://apache.org/xsp"
          xmlns:xsp-request="http://apache.org/xsp/request/2.0">

<xsp:structure>
    <xsp:include>org.apache.excalibur.source.SourceValidity</xsp:include>
    <xsp:include>org.apache.cocoon.caching.CacheValidityToSourceValidity</xsp:include>
    <xsp:include>org.apache.cocoon.caching.DeltaTimeCacheValidity</xsp:include>
    <xsp:include>java.io.Serializable</xsp:include>
</xsp:structure>

<xsp:logic>
    // how long to keep the contents of this page in cache
    final int VALIDITY_SECS = 15;

    // artificial slowdown to make the effects of the cache visible
    final int DELAY_SECS = 2;

    /**
    * Generate the unique key for the cache.
    *
    * This key must be unique inside the space of this XSP page, it is used
    * to find the page contents in the cache (if getValidity says that the
    * contents are still valid).
    *
    * This method will be invoked before the getValidity() method.
    *
    * @return The generated key or null if the component
    *         is currently not cacheable.
    */
    public Serializable getKey()
    {
       // for our test, pages having the same value of "pageKey" will share
       // the same cache location
       return "" + request.getParameter("pageKey");
    }

    /**
    * Generate the validity object, tells the cache how long to
    * keep contents having this key around.
    *
    * Before this method can be invoked the getKey() method
    * will be invoked.
    *
    * @return The generated validity object or null if the
    *         component is currently not cacheable.
    */
    public SourceValidity getValidity() {
       // keep in cache for VALIDITY_SECS
       return CacheValidityToSourceValidity.createValidity(
           new DeltaTimeCacheValidity(0, VALIDITY_SECS));
    }
 </xsp:logic>


  <page>
    <title>A Cacheable XSP Page</title>
    <content>
        <para>
            Hi there! I'm a simple dynamic page generated by XSP (eXtensible Server Pages).
        </para>

        <para>
            I need <xsp:expr>DELAY_SECS</xsp:expr> seconds to be generated, so you can tell
            if I'm being served from the cache or not.
            <br/>
            What you see here has been generated on <b><xsp:expr>new java.util.Date()</xsp:expr></b>.
        </para>

        <para>
            I'm cached for every different value of request parameter 'pageKey'.
            <br/>
            Here the value is:
            <b><xsp-request:get-parameter name="pageKey"/></b>.
            <br/>
            If this is not the same as the 'pageKey' parameter in the page URL, we have a problem.
        </para>

        <para>
          All other request parameters do not influence cache status, but
            my validity will expire after <xsp:expr>VALIDITY_SECS</xsp:expr> seconds (see source).
        </para>

        <para>
            Value of parameter 'other' is: <b><xsp:expr>String.valueOf(request.getParameter("other"))</xsp:expr></b>.
            <br/>
            This might be different than the URL parameter 'other', in case the version of the page you're
            seeing was cached from a request having the same 'pageKey' but a different value of 'other'.

        </para>

        <xsp:logic>
          // slowdown page generation.
            try {
              Thread.sleep(DELAY_SECS * 1000L);
            } catch (InterruptedException ie) {
              // Not much that can be done...
            }
        </xsp:logic>

        <para>Test links:
            <ul>
                <li><a target="_new" href="cacheable?pageKey=one">test with pageKey=one</a></li>
                <li><a target="_new" href="cacheable?pageKey=two">test with pageKey=two</a></li>
                <li><a target="_new" href="cacheable?pageKey=three&amp;other=abc">test with pageKey=three, other=abc</a></li>
                <li><a target="_new" href="cacheable?pageKey=three&amp;other=xyz">test with pageKey=three, other=xyz</a></li>
            </ul>
        </para>
    </content>
  </page>
</xsp:page>
