<?xml version="1.0" encoding="iso-8859-1"?>
<!--
  Copyright 1999-2004 The Apache Software Foundation

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<!--+
    | Main samples page
    |
    | CVS $Id: samples.xml,v 1.35 2004/03/20 13:28:29 crossley Exp $
    +-->

<samples name="Cocoon Samples" xmlns:xlink="http://www.w3.org/1999/xlink">

  <group name="The Power of XML">
    <sample name="Hello World!" href="hello-world/">
      The complete separation between content and style
      leads to a very powerful multi-channeling solution where you can
      apply different stylesheets to the same content and generate different
      flavors of it.
    </sample>
    <sample name="XML-ized web sites" href="sites/">
      A couple of existing web sites have been xml-ized to show you
      how easier it is to handle pure-content markup.
    </sample>   
    <sample name="Presentation Slides" href="slides/slides">
      An example of more complex use of XSLT for navigation and content filtering.
    </sample>   
    <sample name="Internationalization (i18n) &amp; Localization (l10n)" href="i18n/">
      Since XML is based on Unicode, it can be used to encode all types of
      languages. Here is an example of the power of such an approach with
      the help of those i18n and l10n Cocoon facilities.
    </sample>
    <sample name="Syndication and Content Aggregation" href="aggregation/">
      Separation of content and style allows not only to serve your content
      in different ways, but also to syndicate, aggregate or otherwise include
      and transform content provided by other web sites.
    </sample>
    <sample name="Catalog Entity Resolver" href="catalog/">
      XML is handy but also very complex. Cocoon integrates a number of 
      facilities to help you during your journey through XML-land. One of these
      is the centralized handling of resolving network resources 
      (e.g. DTDs, symbols, character entity sets, images) to local copies
      through the use of catalogs. Also explains how to use DocBook DTDs.
    </sample>
  </group>

  <group name="More Core Samples">
    <sample href="modules/" name="The Power of Sitemap: Input Modules">
      This example shows the usage of Input Modules in sitemap attribute expressions.
    </sample>
    <sample href="sources/" name="The Power of Sitemap: Sources">
      This example shows the usage of sources in the sitemap.
    </sample>    
    <sample href="errorhandling/" name="Error Handling">
      An example page producing exceptions and handling them. Demonstrates the 
      handler hierarchy and the exception selectors.
    </sample>
    <sample href="components" name="Components">
      Some samples of various components that are included with the core,
      e.g. Stream Generators, Paginator Transformers, Image Readers.
    </sample>
    <sample href="misc" name="Miscellaneous samples">
      Some stuff that does not fit into the other groups of samples.
    </sample>
  </group>

  <group name="Block Samples">
    <sample name="Blocks with samples" href="blocks">
      Functionality outside the core has been moved to units called "blocks".
      This will lead to a more modular Cocoon. Here you find the many samples 
      provided by the currently installed blocks. 
    </sample>
  </group>

  <group name="Cocoon Control Flow">
    <note>
      Since the Cocoon Control Flow is a core technology you find more examples
      that make use of it e.g. the Petstore, JXForms and Woody block
    </note>      
    <sample name="Examples" href="flow/">
      Examples of Cocoon's control flow of Web pages.
    </sample>
  </group>  

  <group name="Cocoon Forms Processing">
    <sample href="simpleform/" name="Simple Forms">
      These examples show a simple way to work with HTML forms. More powerful
      form solutions can be found in the blocks section. 
    </sample>
  </group>  

  <group name="Test Pages">
    <sample name="Anteater tests" href="test/">
      Pages used by the anteater-tests build target, for automated testing
    </sample>
  </group>

  <group name="System Tools And Pages">
    <sample name="Status Page" href="status.html">
      This page shows the current internal status of cocoon, along with
      information on the cache and the object stores.
    </sample>
    <sample name="Clear Cache" href="clearcache.html">
      Empties the Cocoon in-memory cache.
    </sample>
    <sample name="Clear Store" href="clearpersistentstore.html">
      Empties the Cocoon persistent store.
    </sample>
    <sample name="Link Status" href="linkstatus">
      Verify that there are no broken hyperlinks in the local Cocoon
      documentation. This sample will start at the home page of the local
      documentation webapp and traverse each internal link, reporting its status
      in a colour-coded table. Be patient - this process will take a while.
      NOTE: this will work only if you have included the documentation when 
      you built the web application
    </sample>
  </group>

  <group name="Back">
    <sample name="Front page" href="..">
    </sample>
    <sample name="Core Documentation" href="../docs/">
      Documentation is generated from the xml source.
    </sample>
  </group>
</samples>
