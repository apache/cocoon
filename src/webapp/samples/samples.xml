<?xml version="1.0" encoding="iso-8859-1"?>

<!-- CVS $Id: samples.xml,v 1.22 2003/08/10 11:42:47 reinhard Exp $ -->

<samples name="Cocoon Samples" xmlns:xlink="http://www.w3.org/1999/xlink">

  <group name="The Power of XML">
   <sample name="Hello World!" href="hello-world/">
    The complete separation between content and style
    leads to a very powerful multi-channeling solution where you can
    apply different stylesheets to the same content and generate different
    flavors of it.
   </sample>
   <sample name="XML-ized web sites" href="sites/">
    A couple of existing web sites have been xml-ized to show you
    how easier it is to handle pure-content markup.
   </sample>   
   <sample name="Presentation Slides" href="slides/slides">
    An example of more complex use of XSLT for navigation and content filtering.
   </sample>   
   <sample name="Internationalization (i18n) &amp; Localization (l10n)" href="i18n/">
    Since XML is based on Unicode, it can be used to encode all types of
    languages. Here is an example of the power of such an approach with
    the help of those i18n and l10n Cocoon facilities.
   </sample>
   <sample name="Syndication and Content Aggregation" href="aggregation/">
    Separation of content and style allows not only to serve your content
    in different ways, but also to syndicate, aggregate or otherwise transform
    content provided by other web sites.
   </sample>
   <sample name="Catalog Entity Resolver" href="catalog/">
    XML is handy but also very complex. Cocoon integrates a number of 
    facilities to help you during your journey through XML-land. One of these
    is the centralized handling of resolving network resources 
    (e.g. DTDs, symbols, character entity sets, images) to local copies through
    the use of catalogs.
   </sample>
   <sample name="XInclude" href="xinclude/">
     XInclude transformer sample. XInclude merges XML documents, or parts of
     them, into one document.
   </sample>
  </group>

  <group name="Cocoon Control Flow">
   <sample name="Examples" href="flow/">
    Examples of Cocoon's control flow of Web pages.
   </sample>
   <note>
    Since the Cocoon Control Flow is a core technology you find more examples
    that make use of it e.g. the Petstore, JXForms and Woody block
   </note>      
  </group>  

  <group name="More core samples">
   <sample href="modules/" name="The Power of Sitemap: Input Modules">
    This example shows the usage of Input Modules in sitemap attribute expressions.
   </sample>
   <sample href="sources/" name="The Power of Sitemap: Sources">
    This example shows the usage of sources in the sitemap.
   </sample>    
   <sample href="xsp/" name="Extensible Server Pages">
     Extensible Server Pages.
   </sample>   
    <sample href="imagereader/" name="Imagereader">
     ImageReader
   </sample> 
    <sample href="paginator/" name="Paginator">
     Paginator
   </sample> 
   <sample href="soap/" name="SOAP">
     Cocoon ships with facilities for immediate connection to SOAP resources.
     These examples show you how to connect to any web service with a few
     lines of XML markup.
   </sample> 
   <note>
   	 There is also an Axis block available that integrates Axis into Cocoon.
   </note>   
   <sample href="stream/order" name="B2B: Order Page" xlink:role="dynamic">
     An example of B2B processing.
   </sample>   
  </group>
  
<!-- 

  FIXME (SM): obsoleted by xmlform?
    
  <group name="Sample Forms">
    <sample name="Simple Form Validation - Transformer" href="simpleform/sform" xlink:role="dynamic">
      This example demonstrates the use of an action to validate user
      input and report validation errors to the user through a transfomer.
    </sample>
    <sample name="Simple Form Validation - Logicsheet" href="simpleform/formval" xlink:role="dynamic">
      This example demonstrates the use of an action to validate user
      input and report validation errors to the user through a taglib.
    </sample>
  </group>

-->
  
  <group name="Block samples">
    <sample name="Blocks with samples" href="blocks">
    Functionality outside the core has been moved to units called "blocks".
    This will lead to a more modular Cocoon. Here you find the samples 
    provided by the currently installed blocks. 
   </sample>
  </group>
 
  <group name="System Tools And Pages">
   <sample name="Status Page" href="status.html">
    This page shows the current internal status of cocoon, along with
    information on the cache and the object stores.
   </sample>
   <sample name="Clear Cache" href="clearcache.html">
    Empties the Cocoon cache.
   </sample>
   <sample name="Clear Persistent Store" href="clearpersistentstore.html">
    Empties the Cocoon persistent store.
   </sample>
   <sample name="Request Page" href="request.html">
    This example shows the usage of the RequestGenerator.
   </sample>
   <sample name="Error handling" href="errorhandling/">
    An example page producing exceptions and handling them. Demonstrates the 
    handler hierarchy and the exception selectors.
   </sample>
   <sample name="Link Status" href="linkstatus">
    Verify that there are no broken hyperlinks in the local Cocoon
    documentation. This sample will start at the home page of the local
    documentation webapp and traverse each internal link, reporting its status
    in a colour-coded table. Be patient - this process will take a while.
    NOTE: this will work only if you have included the documentation when 
    you built the web application
   </sample>
  </group>

</samples>
