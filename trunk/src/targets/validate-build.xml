<!-- === Validation targets ==================================================== -->

  <!-- Check if all the JAR files are properly declared in lib/jars.xml    -->
  <target name="validate-jars" depends="prepare" unless="exclude.validate.jars">
    <path id="all.jars">
      <fileset dir="${lib}">
        <include name="**/*.jar"/>
      </fileset>
      <fileset dir="${blocks}">
        <include name="*/lib/*.jar"/>
      </fileset>
    </path>

    <property name="all.jars" refid="all.jars"/>
    <copy file="${tools.src}/jars.xml.tmpl" 
          tofile="${build.temp}/current-jars.xml" 
          filtering="yes" overwrite="yes">
      <filterset>
        <filter token="JARS" value="${all.jars}"/>
      </filterset>
    </copy>

    <!-- split the path in 'jar' XML elements -->
    <replace file="${build.temp}/current-jars.xml"
             token="${path.separator}" 
             value="&lt;/jar&gt;&#xA; &lt;jar&gt;"/>

    <!-- relativize file names by removing the current directory -->
    <replace file="${build.temp}/current-jars.xml" 
             token="${user}${file.separator}lib${file.separator}" 
             value=""/>
    <replace file="${build.temp}/current-jars.xml" 
             token="${user}${file.separator}${blocks}${file.separator}" 
             value=""/>

    <!-- and incase that fails, remove the base directory -->
    <replace file="${build.temp}/current-jars.xml" 
             token="${basedir}${file.separator}lib${file.separator}" 
             value=""/>
    <replace file="${build.temp}/current-jars.xml" 
             token="${basedir}${file.separator}${blocks}${file.separator}" 
             value=""/>

    <!-- replace platform-dependent path separator by '/' -->
    <replace file="${build.temp}/current-jars.xml" 
             token="${file.separator}" 
             value="/"/>

    <xslt in="${lib}/jars.xml" out="${build.temp}/jars.xml"
          processor="trax"
          style="${tools}/src/check-jars.xsl">
      <param name="current-files" expression="../../${build.temp}/current-jars.xml"/>
    </xslt>
  </target>

  <!-- Validate configuration files. -->
  <target name="validate-config" depends="prepare" unless="exclude.validate.config">
    <echo message="Validating configuration files"/>

    <echo message="Validating cocoon.xconf using RELAX NG ..."/>
    <jing rngfile="${build.webapp}/WEB-INF/entities/any.rng">
      <fileset dir="${build.webapp}/WEB-INF" includes="cocoon.xconf"/>
    </jing>
  </target>

  <!-- Validation of xdocs  -->
  <target name="validate-xdocs" depends="prepare-docs" unless="exclude.validate.xdocs">
    <echo message="Conducting validation of core XML documentation."/>

    <echo message="Validating all **/book.xml instances using RELAX NG ..."/>
    <jing rngfile="${webapp}/WEB-INF/entities/book-v01.rng">
      <fileset dir="${build.context}" includes="**/book.xml"/>
    </jing>

    <echo message="Validating all xdocs/**/*.xml instances using DTDs ..."/>
    <xmlvalidate failonerror="true" lenient="no" warn="yes">
      <!-- FIXME: we can use xmlcatalog with Ant-1.6 -->
      <fileset dir="${build.context}/xdocs" includes="**/*.xml"
               excludes="drafts/*.xml,dictionary.xml,catalog-test.xml,ctwig/sample/**/*.xml,tabs.xml"/>
    </xmlvalidate>

    <echo message="Validating the documentation sitemap.xmap using RELAX NG ..."/>
    <jing rngfile="${webapp}/WEB-INF/entities/sitemap-v06.rng">
      <fileset dir="${build.context}" includes="sitemap.xmap"/>
    </jing>

<!--    <echo message="Validating all documentation stylesheets using RELAX NG ..."/>
    <jing rngfile="${webapp}/WEB-INF/entities/xslt-20020523.rng">
      <fileset dir="${build.context}/stylesheets" includes="**/*.xsl"/>
    </jing>-->
  </target>

