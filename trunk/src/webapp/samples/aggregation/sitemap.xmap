<?xml version="1.0" encoding="UTF-8"?>

<!-- CVS $Id: sitemap.xmap,v 1.1 2003/03/26 21:21:30 stefano Exp $ -->

<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">

<!-- =========================== Pipelines ================================= -->

 <map:pipelines>

  <map:pipeline>

   <map:match pattern="">
     <map:generate src="samples.xml"/>
     <map:transform src="context://samples/common/style/xsl/html/simple-samples2html.xsl">
        <map:parameter name="contextPath" value="{request:contextPath}"/>
     </map:transform>
     <map:serialize/>
   </map:match>

   <!-- ================  NEWS  =========================== -->

   <map:match pattern="slashdot">
    <map:generate src="http://slashdot.org/slashdot.xml"/>
    <map:transform src="stylesheets/slashdot.xsl"/>
    <map:serialize/>
   </map:match>

   <map:match pattern="**.gif">
    <map:read mime-type="image/gif" src="http://images.slashdot.org/topics/{1}.gif"/>
   </map:match>

   <map:match pattern="**.jpg">
    <map:read mime-type="image/jpg" src="http://images.slashdot.org/topics/{1}.jpg"/>
   </map:match>

   <map:match pattern="moreover">
    <map:generate src="http://www.moreover.com/cgi-local/page?o=xml&amp;c=Developer%20news"/>
    <map:transform src="stylesheets/moreover.xsl"/>
    <map:serialize/>
   </map:match>

   <map:match pattern="xmlhack">
    <map:generate src="http://www.xmlhack.com/cdf.cdf"/>
    <map:transform src="stylesheets/xmlhack.xsl"/>
    <map:serialize/>
   </map:match>

   <map:match pattern="aggregate">
    <map:aggregate element="page" ns="http://foo.bar.com/myspace">
     <!--
        Aggregation is a very powerful concept that allows a document
        be generated from several other documents. Strictly speaking,
        all parts are just concatenated in this order to a new
        document.

    Several things to note here:

    "cocoon:" is a pseudo protocol and refers to another
      pipeline. "cocoon:/" refers to a pipeline from the current
      sitemap while "cocoon://" refers to a pipeline from the root
      sitemap.

    Other pseudo protocols exist:

    "context:" is another pseudo protocol, "context://" is
      refering to a resource using the servlet context.

    "resource:" is yet another pseudo protocol, "resource://" is
      refering to a resource from the context classloader.

    These pseudo protocols are declared in cocoon.xconf

    Thus the parts refer to the pipeline fragments above.

    The element attribute places the content in a new root element
    named as specified, using the namespace provided by the ns
    attribute.

    Please see docs for further explanations.
     -->
     <map:part element="news" ns="http://foo.bar.com/slashdot" src="cocoon:/slashdot"/>
     <map:part element="news" ns="http://foo.bar.com/moreover" src="cocoon:/moreover"/>
     <map:part element="news" ns="http://foo.bar.com/xmlhack" src="cocoon:/xmlhack"/>
    </map:aggregate>
    <map:transform src="stylesheets/news.xsl"/>
    <map:serialize/>
   </map:match>

   <!-- Aggregation using the Cocoon Include transformer -->
   <map:match pattern="aggregate2">
    <map:generate src="aggregate.xsp" type="serverpages"/>
    <map:transform type="cinclude"/>
    <map:transform src="stylesheets/news.xsl"/>
    <map:serialize/>
   </map:match>
  
  </map:pipeline>
  
 </map:pipelines>

</map:sitemap>
