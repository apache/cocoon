<?xml version="1.0" encoding="iso-8859-1"?>

<!-- CVS $Id: samples.xml,v 1.8 2003/06/04 22:45:07 joerg Exp $ -->

<samples name="Hello, World!">

  <group name="Back">
   <sample name="Back" href="../">
    Back to the samples home page.
   </sample>
  </group>

  <group name="About">
   <note>All examples on this page have been created using a single data source,
   hello.xml file.
   </note>
   <sample name="XML" href="hello.xml">
    Hello world XML document.
   </sample>
  </group>

  <group name="Multichannel Hello World!">
   <sample name="HTML" href="hello.html">
    This page shows how a simple XML page can be presented in HTML.
   </sample>
   <sample name="XHTML" href="hello.xhtml">
    This is the same page as above, but rendered in XHTML (which is the 
    well-formed XML version of HTML). Note that both the page and the
    stylesheet used to transform it didn't change from the previous
    example, Cocoon does everything for you by setting a different serializer.
   </sample>
   <sample name="WML" href="hello.wml">
    By changing the stylesheet, it's possible to render the same content
    for consumption on different devices. Here, for example, it's rendered
    in WML (Wireless Markup Language) which is the markup language used
    in WAP-enabled agents (such as PDA or cell phones).
   </sample>
   <sample name="CHTML" href="hello.chtml">
    Or, as CHTML (Compact HTML), which is used by i-Mode compatible cell phones.
   </sample>
   <sample name="SVG" href="hello.svg">
    Given the power of XSLT and the fact that many presentation languages are
    based on the XML syntax, it is possible to generate even vector graphics
    from your content. Here is an example that renders to  SVG (Scalable Vector
    Graphics). (You need an SVG plugin, or an SVG-capable browser to see this.)
   </sample>   
   <sample name="Plain Text" href="hello.txt">
    Sometimes you don't need to be very fancy, so here is a plain text
    version of your content.
   </sample>
   <sample name="VRML" href="hello.wrl">
    But sometimes you need to be fancy to impress people, so here is a 3D
    version of your content (you need a VRML plugin in your browser to visualize
    this).
   </sample>
   <sample name="VoiceML" href="hello.vml">
    Or sometimes you don't even have a display in front of you, so you want to
    hear your content, so here is a VoiceML representation of your content (you 
    need a VoiceML-capable agent to hear this).
   </sample>
   <sample name="RTF" href="../jfor/hello.rtf">
    Rich Text Format.
    (Requires block-jfor.)
   </sample>
   <sample name="PDF" href="../fop/hello.pdf">
    Portable Document Format.
    (Requires block-fop.)
   </sample>
   <sample name="SWF" href="../swf/hello.swf">
    Flash ... You need the appropriate plugin for your browser.
    (Requires block-swf.)
   </sample>
  </group>

  <group name="Hello Office!">
   <sample name="OpenOffice Writer" href="hello.sxw">
    This document shows how a simple XML page can be presented in OpenOffice Writer file format.
   </sample>
   <sample name="OpenOffice Calc" href="hello.sxc">
    This spreadsheet shows how a simple XML page can be presented in OpenOffice Calc file format.
   </sample>
   <sample name="OpenOffice Impress" href="hello.sxi">
    This presentation shows how a simple XML page can be presented in OpenOffice Impress file format.
   </sample>
   <sample name="OpenOffice Draw" href="hello.sxd">
    This drawing shows how a simple XML page can be presented in OpenOffice Draw file format.
   </sample>
  </group>

  <group name="Hello World Web Service">
   <sample name="Web Service" href="hello.service">
    Here is a super-simple web service that says hi!
   </sample>
   <sample name="Web Service WSDL Descriptor" href="hello.service/WSDL">
    And this is the corresponding WSDL descriptor.
   </sample>
  </group>

</samples>
