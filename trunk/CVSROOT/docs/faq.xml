<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE faqs SYSTEM "../dtd/faq-v10.dtd">

<faqs title="Cocoon Frequently Asked Questions">

<faq>
 <question>How do I pipe my servlet output into Cocoon?</question>
 <answer>
  <p>Simple answer: <em>you don't!!!</em> read <connect href="dynamic.xml">this
  document</connect> instead to find out equivalent ways to do what you need.</p>
  <p>Complex answer: the Servlet API <em>was not</em> designed with servlet
  chaining capabilities in mind. Servlet chaining was a night hack of the
  original Java web server authors that allowed to pipe one servlet output
  into the request of another. Currently (version 2.2) the Servlet API spec
  doesn't allow a servlet to post-process the output of another servlet, so,
  since Cocoon is a servlet, there is no portable way for it to call
  your servlet and to process its output.</p>
  <p>The Cocoon Project is in close contact with the Servlet API Expert Group at
  Sun (being Stefano Mazzocchi a member of that board) and will propose 
  post-processing hooks for inclusion in the next Servlet API specifications. 
  Since this is work in progress, please, don't fill up the mail list with 
  questions about this: Cocoon will reflect the API changes as soon as they 
  are publicly available.</p>
 </answer>
</faq>

<faq>
 <question>"Where do I get more information on XSL and XML?"</question>
 <answer>
  <p>
    The web community is very exited about XML and XSL and many sources of
    information are coming up even if these languages are fairly new. Here is a list of
    locations you might be interested in to continue to gather resources on this
    state-of-the-art technology</p>
  <ul>
    <li><link href="http://www.xml.org">http://www.xml.org</link> - A very nice site for XML
      information.</li>
    <li><link href="http://www.w3.org/markup/xml/">http://www.w3.org/markup/xml/</link> - The XML
      official home page at W3C</li>
    <li><link href="http://www.w3.org/style/xsl">http://www.w3.org/style/xsl</link> - The XSL official
      home page W3C</li>
    <li><link href="http://www.software.ibm.com/xml/education/tutorial-prog/abstract.html">http://www.software.ibm.com/xml/education/tutorial-prog/abstract.html</link>
      - XML Tutorial from IBM</li>
    <li><link href="http://www.webtechniques.com/features/1999/01/walsh/walsh.shtml">http://www.webtechniques.com/features/1999/01/walsh/walsh.shtml</link>
      - XSL Tutorial</li>
    <li><link href="http://www.oasis-open.org/cover/xml.html">http://www.oasis-open.org/cover/xml.html</link>
      - XML Resource Listing</li>
    <li><link href="http://www.oasis-open.org/cover/xsl.html">http://www.oasis-open.org/cover/xsl.html</link>
      - XSL Resource Listing</li>
    <li><link href="http://www.xmlsoftware.com">http://www.xmlsoftware.com</link> -
      XML software listing</li>
    <li><link href="http://www.xmlinfo.com">http://www.xmlinfo.com</link> - XML
      information updates on W3C status and others</li>
    <li><link href="http://www.xslinfo.com">http://www.xslinfo.com</link> - XSL
      information, updates, example stylesheets</li>
    <li><link href="http://www.schema.net">http://www.schema.net</link> - Repository
      of standard DTDs</li>
  </ul>
</answer>
</faq>

<faq>
 <question>The XSL book I read says the correct way of indicating the XSL stylesheet is by
    using the XML processing instruction <code>&lt;?xml:stylesheet?&gt;</code> while Cocoon is
    using <code>&lt;?xml-stylesheet?&gt;</code>. Who is right?
 </question>
 <answer>
  <p>The PI <code>&lt;?xml:stylesheet type=&quot;text/xsl&quot; href=&quot;&quot;?&gt;</code>
  is the old method of associating a stylesheet with an XML document. Unfortunately, this
  technology is rapidly changing and your books should warn you that the topic they are
  discussing is not even in W3C Recommendation state. Which means that more changes are on
  their way.</p>
  <p>The current and proper way to associate a stylesheet with an XML document can be found at 
  <link href="http://www.w3.org/TR/xml-stylesheet">http://www.w3.org/TR/xml-stylesheet</link> and
  clearly indicates that <code>&lt;?xml-stylesheet ...?&gt;</code> is the proper way.</p>
 </answer>
</faq>

<faq>
 <question>
    I think that using Processing Instructions to &quot;chain&quot;
    document layers somehow violates the context separation since I would like
    to be able to place style sensible information in sessions or request
    parameters. What do you think about this?
 </question>
 <answer>
  <p>You are right, PI reaction breaks the context separation and it's, at the
    very end, the wrong approach. To follow a complete &quot;model, view,
    controller&quot; design pattern, one should be able to associate a different
    processing chain for each requested URI and for every possible request state
    (with request parameters, session parameters and environment parameters).</p>
  <p>The proposed solution (as you read in the <connect href="cocoon2.xml">Cocoon2
    outline</connect>) is to have a regular expression based site map where site
    managers decide what processing chain to apply to each possible request.
    This somehow follows the mod_rewrite model in the Apache Web Server, but
    rather than URL rewriting, the site map allows site designers to control the
    behavior of their documents in one place without having to modify every
    single reactive PI in each source file.</p>
  <p>So, you've been warned: the PIs will go away, current functionality will
    remain but the processing management will be abstracted one layer up.</p>
</answer>
</faq>

<faq>
<question>What is WAP and I do I browse WML?</question>
<answer>
  <p>WAP stands for Wireless Application Protocol and WML stands for Wireless
    Markup Language. For more information about these two, please refer to the 
    <link href="http://www.wapforum.org">WAP Forum</link>. For a client able 
    to browse WML 1.1, Cocoon has been tested with the 
    <link href="http://www.nokia.com">Nokia WAP Toolkit</link> which
    emulates a Nokia WAP cell phone on your desktop.</p>
</answer>
</faq>

<faq>
<question>When I compile Cocoon on my system, I get all a bunch of errors. What's wrong?</question>
<answer>
  <p>You probably didn't add all the needed packages to your compiler's
    classpath or used the wrong version of the servlet classes (Cocoon is
    compiled with the Servlet 2.1 classes).
    Note that Cocoon supports much more packages than you normally use and you should have
    them all to compile the full source code (this is why the cocoon.jar is distributed). To
    avoid this, simply remove (or rename) the classes that wrap around the packages you don't
    use.</p>
  <p>Note that if you tried to compile Cocoon.java alone, many classes are not compiled
  because there is no hardcoded reference to them. Cocoon uses dynamic loading based on its
  property file to get the modules it needs when started. For this reason, the compiler is
  not able to tell which class will be use and its dependency checks are never complete. The
  only way to compile it is to manually indicate all the files to compile or to use the
  makefiles after removing the unwanted wrapper classes for the packages you don't have or
  you don't want.</p>
</answer>
</faq>

<faq>
 <question>Why the name &quot;Cocoon&quot;?</question>
 <answer>
  <p> (Cocoon's creator Stefano Mazzocchi answers): It's a pretty stupid reason and a funny
  story: I spent my 1998 Xmas vacation with my girlfriend up on the Alps at her cottage. One
  night I couldn't sleep, I went to watch some TV and finishing reading the XSL
  documentation I brought with me. Being a science fiction <em>afficionado</em>, I found out
  that Ron Howard's movie Cocoon was on and I started watching it. The idea of the XSL
  rendering servlet stoke me like the alien &quot;cocoons&quot; in the pool stroke those old men in the
  movie and, while watching, I started paper-coding it right away. After a while the movie
  was over and the publishing framework designed. The name &quot;Cocoon&quot; seemed right
  for the thing, meaning to be a way to bring new life to old ideas as well as to create <em>cocoons</em>
  for such new ideas to become beautiful butterflies. :-)</p>
</answer>
</faq>

</faqs>