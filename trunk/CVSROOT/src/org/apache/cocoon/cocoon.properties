##############################################################################
#                          Cocoon Configuration file                         #
##############################################################################



##########################################
# Global Configurations                  #
##########################################

# Indicates whether or not Cocoon should be visible if 
# the requested URI equals the specified one.
selfservlet.enabled = true
selfservlet.uri = /Cocoon.xml

# Indicates whether or not Cocoon should handle errors internally
# and format the error and the exception stack trace to the client
# or return the HTTP error code to the web server and let it handle it.
handle.errors.internally = true



##########################################
# XML Parsers                            #
##########################################

# Apache Xerces 1.0.1+ (http://xml.apache.com/)
parser = org.apache.cocoon.parser.XercesParser

# SUN ProjectX TR2 (http://java.sun.com/xml/)
#parser = org.apache.cocoon.parser.SunXMLParser

# Indicate whether the XML file should be validated or not
# this is turned off by default for faster operation.
parser.validate = false


##########################################
# XSLT Transformers                      #
##########################################

# Apache Xalan (http://xml.apache.org/)
transformer = org.apache.cocoon.transformer.XalanTransformer

# James Clark's XT (http://www.jclark.com/)
#transformer = org.apache.cocoon.transformer.XTTransformer



##########################################
# XML Producers                          #
##########################################

# For example, if you want to produce your XML template reading it from
# the file system, using your producer, you should request the URI:
#   http://your.site.com/your_XML_file.xml?producer=file

# This is the request parameter used to identify the producer in the request:
# (default value is "producer")
producer.parameter = producer

# The syntax for this is
#   producer.type.xxx = full.class.name
# where "xxx" is the producer indentier used in the request
producer.type.file = org.apache.cocoon.producer.ProducerFromFile
producer.type.request = org.apache.cocoon.producer.ProducerFromRequest

# This is used in the example files
producer.type.dummy = org.apache.cocoon.example.DummyProducer

# When producer indication is present in the request
# this configuration allows to map those requests to a particular
# producer indicated here with its type.
# NOTE: this type must present in the above map.
producer.default = file





##########################################
# XML Processors                         #
##########################################

# These are used when the <?cocoon-process type="xxx"?> PI is present.
# If no PI of that type is present, no processing is performed.
# The syntax for this is
#   processor.type.xxx = full.class.name

# XSL Transformations (XSLT)
processor.type.xslt = org.apache.cocoon.processor.xslt.XSLTProcessor

# SQL Processor
processor.type.sql = org.apache.cocoon.processor.sql.SQLProcessor

# LDAP Processor
processor.type.ldap = org.apache.cocoon.processor.ldap.LdapProcessor

# eXtensible Server Pages Processor (XSP)
processor.type.xsp = org.apache.cocoon.processor.xsp.XSPProcessor

# sets the repository where the compiled pages are stored.
# NOTE: make sure the directory is readable. This directory is usually
# relative to the web server's or to the servlet engine's. In case you're not
# sure, use an absolute location.
# WARNING: since this repository may contain information you want to remain
# secret, we highly suggest that you protect the repository from untrusted
# access, even read-only. Only Cocoon and the system administrators should
# have access here.
processor.xsp.repository = ./repository

# Set the libraries associated with the given namespace.
# Use the syntax:
#   processor.xsp.library.<namespace-tag>.<language> = URL to file
# where "URL to file" is usually starting with file:// if you locate 
# your custom library in your file system.
processor.xsp.library.context.java = resource://org/apache/cocoon/processor/xsp/library/java/context.xsl
processor.xsp.library.cookie.java = resource://org/apache/cocoon/processor/xsp/library/java/cookie.xsl
processor.xsp.library.global.java = resource://org/apache/cocoon/processor/xsp/library/java/global.xsl
processor.xsp.library.request.java = resource://org/apache/cocoon/processor/xsp/library/java/request.xsl
processor.xsp.library.response.java = resource://org/apache/cocoon/processor/xsp/library/java/response.xsl
processor.xsp.library.session.java = resource://org/apache/cocoon/processor/xsp/library/java/session.xsl
processor.xsp.library.util.java = resource://org/apache/cocoon/processor/xsp/library/java/util.xsl

#### NOTE ###########
# The DCP processor should be considered -deprecated- and we highly suggest
# you to convert all of your DCP stuff into XSP pages that will be
# supported on the future and will totally replace DCP.
#
# Dynamic Content Processor (DCP)
#processor.type.dcp = org.apache.cocoon.processor.dcp.DCPProcessor
#
#####################


##########################################
# XML Formatters                         #
##########################################

# These are used when the <?cocoon-format type="xxx/yyy"?> PI is present
# The syntax for this is
#   formatter.type.xxx/yyy = full.class.name

formatter.type.text/xml    = org.apache.cocoon.formatter.XMLFormatter
formatter.type.text/wml    = org.apache.cocoon.formatter.WMLFormatter
formatter.type.text/html   = org.apache.cocoon.formatter.HTMLFormatter
formatter.type.text/plain  = org.apache.cocoon.formatter.TextFormatter
formatter.type.text/xslfo  = org.apache.cocoon.formatter.FO2PDFFormatter
formatter.type.model/vrml  = org.apache.cocoon.formatter.VRMLFormatter

# This is used when no <?cocoon?> PI is present to indicate 
# which MIME type to associate to the document.
# NOTE: this type must present in the above map.
formatter.default = text/html

# Specifies the text stream format. (meaningful for text formatters only)
# Supported styles are 
#   - normal
#   - compact
formatter.style = normal



    
##########################################
# Cache Managers                         #
##########################################

# the default cache
cache = org.apache.cocoon.cache.CocoonCache

# disable page caching
#cache = org.apache.cocoon.cache.NoCache




##########################################
# Object Storage Systems                 #
##########################################

# the default object storage
store = org.apache.cocoon.store.MemoryStore

# Indicate the minimum amount of memory (in bytes) that should be always 
# available to the jvm. If your JVM contains less than 300Kb free when it 
# starts you may either:
#  - lower this limit, following the indication of the throw exception.
#  - add your JVM startup heap size (suggested).
# To the latter either:
#  - (java 1.1) add -ms<size> as command line argument
#  - (java 1.2) add -Xms<size> as command line argument
store.memory = 200000



##########################################
# Language Interpreters                  #
##########################################

# These are used by the DCP Processor
interpreter.type.java = org.apache.cocoon.interpreter.java.JavaInterpreter
interpreter.type.ecmascript = org.apache.cocoon.interpreter.ecmascript.EcmaScriptInterpreter
interpreter.type.javascript = org.apache.cocoon.interpreter.ecmascript.EcmaScriptInterpreter

# Indicates the default language if not specified in the DCP PIs
interpreter.default = java




##########################################
# User Agents (Browsers)                 #
##########################################

# NOTE: numbers indicate the search order. This is very important since
# some words may be found in more than one browser description. (MSIE is
# presented as "Mozilla/4.0 (Compatible; MSIE 4.01; ...")
#
# for example, the "explorer=MSIE" tag indicates that the XSL stylesheet
# associated to the media type "explorer" should be mapped to those browsers
# that have the string "MSIE" in their "user-Agent" HTTP header.

browser.0 = explorer=MSIE
browser.1 = opera=Opera
browser.2 = lynx=Lynx
browser.3 = java=Java
browser.4 = wap=Nokia-WAP-Toolkit
browser.5 = wap=UP
browser.6 = netscape=Mozilla
