<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<!--+
    |
    | SVN $Id$
    +-->
<components>
  <!-- Include dependencies -->
  <include src="resource://META-INF/cocoon/avalon/cocoon-scratchpad.xconf"/>

  <flow-interpreters>

    <!-- Intercepted, FOM-aware JavaScript Interpreter -->
    <component-instance class="org.apache.cocoon.components.flow.javascript.fom.AO_FOM_JavaScriptInterpreter" name="intercepted-javascript">
      <load-on-startup>resource://org/apache/cocoon/components/flow/javascript/fom/ao_fom_system.js</load-on-startup>
      <reload-scripts>true</reload-scripts>
      <check-time>40</check-time>
      <!--  <debugger>enabled</debugger> --> <!-- JavaScript Debugger support -->

      <!-- ************* interception support ***************** -->
        <!-- on/off switch -->
        <enable-interception>true</enable-interception>
        <!-- list of all functions that stop flow execution -->
        <cont-creating-functions>
          <function>cocoon.sendPageAndWait()</function>
          <function>woody.send()</function>
        </cont-creating-functions>
        <!-- the result script is copied in the same directory as the basescript
             if the file protocol is used to resolve the script

             WARNING:
             the result script is streamed into the same directory as the basescript
             with the only difference that "_intercepted.js" is appended. So make
             sure that you don't create any files with the name
             [yourPath]/[yourBasescript-name]_intercepted.js which will be overwritten

         -->
        <serialize-result-script>false</serialize-result-script>
    </component-instance>
  </flow-interpreters>
</components>
